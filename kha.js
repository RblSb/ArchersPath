// Generated by Haxe 4.0.0-preview.4
(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
;$hx_exports["kha"]["_Color"] = $hx_exports["kha"]["_Color"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = {},$_;
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
var Loader = function() {
};
$hxClasses["Loader"] = Loader;
Loader.__name__ = ["Loader"];
Loader.prototype = {
	init: function() {
		kha_System.notifyOnFrames($bind(this,this.onRender));
		kha_Assets.loadEverything($bind(this,this.loadComplete));
	}
	,loadComplete: function() {
		kha_System.removeFramesListener($bind(this,this.onRender));
		var sets = khm_Settings.read();
		khm_Screen.init({ isTouch : sets.touchMode});
		khm_Lang.loadFolder("langs");
		khm_Lang.set(sets.lang);
		kha_graphics2_Graphics.fontGlyphs = khm_Lang.fontGlyphs;
		khm_editor_Editor.testMap = function(editor,tilemap) {
			var game1 = new game_Game();
			game1.show();
			game1.init(editor);
			var map = tilemap.toJSON(tilemap.map);
			game1.playCustomLevel(map);
		};
		khm_editor_Editor.exit = function() {
		};
		khm_Settings.init({ levelProgress : 1, controlType : 1});
		var nav = HxOverrides.substr(window.location.hash,1,null);
		switch(nav) {
		case "editor":
			var editor1 = new khm_editor_Editor();
			editor1.show();
			editor1.init();
			break;
		case "game":
			var game2 = new game_Game();
			game2.show();
			game2.init();
			game2.playCampaign();
			break;
		default:
			this.newMenu();
		}
	}
	,newMenu: function() {
		var game1 = new game_Game();
		game1.show();
		game1.init();
		game1.playCampaign();
	}
	,onRender: function(fbs) {
		var g = fbs[0].get_g2();
		g.begin(true,-1);
		var h = kha_System.windowHeight() / 20;
		var w = kha_Assets.progress * kha_System.windowWidth();
		var y = kha_System.windowHeight() / 2 - h;
		g.set_color(-16777216);
		g.fillRect(0,y,w,h * 2);
		g.end();
	}
	,__class__: Loader
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.main = function() {
	haxe_Log.trace("2018-10-08 21:03:24",{ fileName : "Main.hx", lineNumber : 16, className : "Main", methodName : "main"});
	Main.setFullWindowCanvas();
	kha_System.start(new kha_SystemOptions("Archer's Path",800,600,null,null),Main.init);
};
Main.init = function($window) {
	var loader = new Loader();
	loader.init();
};
Main.setFullWindowCanvas = function() {
	window.document.documentElement.style.padding = "0";
	window.document.documentElement.style.margin = "0";
	window.document.body.style.padding = "0";
	window.document.body.style.margin = "0";
	var canvas = js_Boot.__cast(window.document.getElementById("khanvas") , HTMLCanvasElement);
	canvas.style.display = "block";
	var resize = function() {
		canvas.width = window.innerWidth * window.devicePixelRatio | 0;
		canvas.height = window.innerHeight * window.devicePixelRatio | 0;
		canvas.style.width = window.document.documentElement.clientWidth + "px";
		canvas.style.height = window.document.documentElement.clientHeight + "px";
	};
	window.onresize = resize;
	resize();
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = ["_UInt","UInt_Impl_"];
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	var int = this1;
	if(int < 0) {
		return 4294967296.0 + int;
	} else {
		return int + 0.0;
	}
};
var edge_Engine = function() {
	this.mapEntities = new haxe_ds_ObjectMap();
	this.listPhases = [];
};
$hxClasses["edge.Engine"] = edge_Engine;
edge_Engine.__name__ = ["edge","Engine"];
edge_Engine.prototype = {
	mapEntities: null
	,listPhases: null
	,create: function(components) {
		var entity = new edge_Entity(this,components);
		this.mapEntities.set(entity,true);
		this.matchSystems(entity);
		return entity;
	}
	,clear: function() {
		var entity = this.mapEntities.keys();
		while(entity.hasNext()) {
			var entity1 = entity.next();
			this.remove(entity1);
		}
	}
	,remove: function(entity) {
		this.eachSystem(function(system) {
			system.__process__.removeEntity(entity);
		});
		this.mapEntities.remove(entity);
		entity.engine = null;
	}
	,createPhase: function() {
		var phase = new edge_Phase(this);
		this.listPhases.push(phase);
		return phase;
	}
	,eachSystem: function(f) {
		var _g = 0;
		var _g1 = this.listPhases;
		while(_g < _g1.length) {
			var phase = _g1[_g];
			++_g;
			var system = phase.systems();
			while(system.hasNext()) {
				var system1 = system.next();
				f(system1);
			}
		}
	}
	,addSystem: function(system) {
		this.eachSystem(function(s) {
			if(s == system) {
				throw new js__$Boot_HaxeError("System \"" + Std.string(system) + "\" already exists in Engine");
			}
		});
		var entity = this.mapEntities.keys();
		while(entity.hasNext()) {
			var entity1 = entity.next();
			system.__process__.addEntity(entity1);
		}
	}
	,removeSystem: function(system) {
		var entity = this.mapEntities.keys();
		while(entity.hasNext()) {
			var entity1 = entity.next();
			system.__process__.removeEntity(entity1);
		}
	}
	,updateSystem: function(system,t) {
		return system.__process__.update(this,t);
	}
	,matchSystems: function(entity) {
		var _gthis = this;
		this.eachSystem(function(system) {
			system.__process__.addEntity(entity);
		});
	}
	,__class__: edge_Engine
};
var edge_Entity = function(engine,components) {
	this.engine = engine;
	this.map = new haxe_ds_StringMap();
	if(null != components) {
		this.addMany(components);
	}
};
$hxClasses["edge.Entity"] = edge_Entity;
edge_Entity.__name__ = ["edge","Entity"];
edge_Entity.prototype = {
	map: null
	,engine: null
	,addMany: function(components) {
		var _gthis = this;
		if(null == this.engine) {
			return;
		}
		components.map(function(_) {
			_gthis._add(_);
			return;
		});
		this.engine.matchSystems(this);
	}
	,destroy: function() {
		if(null == this.engine) {
			return;
		}
		this.engine.remove(this);
		this.map = new haxe_ds_StringMap();
	}
	,existsType: function(type) {
		var this1 = this.map;
		var key = Type.getClassName(type);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.existsReserved(key);
		} else {
			return _this.h.hasOwnProperty(key);
		}
	}
	,remove: function(component) {
		this._remove(component);
		this.engine.matchSystems(this);
	}
	,_add: function(component) {
		var type = this.key(component);
		var _this = this.map;
		if(__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) {
			var _this1 = this.map;
			this.remove(__map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type]);
		}
		var _this2 = this.map;
		if(__map_reserved[type] != null) {
			_this2.setReserved(type,component);
		} else {
			_this2.h[type] = component;
		}
	}
	,_remove: function(component) {
		var type = this.key(component);
		this._removeTypeName(type);
	}
	,_removeTypeName: function(type) {
		this.map.remove(type);
	}
	,key: function(component) {
		var t = component == null ? null : js_Boot.getClass(component);
		var s = t.__super__;
		while(s != null && s != edge_IComponent) {
			t = s;
			s = t.__super__;
		}
		return Type.getClassName(t);
	}
	,__class__: edge_Entity
};
var edge_IComponent = function() { };
$hxClasses["edge.IComponent"] = edge_IComponent;
edge_IComponent.__name__ = ["edge","IComponent"];
var edge_ISystem = function() { };
$hxClasses["edge.ISystem"] = edge_ISystem;
edge_ISystem.__name__ = ["edge","ISystem"];
edge_ISystem.prototype = {
	__process__: null
	,__class__: edge_ISystem
};
var edge_Phase = function(engine) {
	this.engine = engine;
	this.mapSystem = new haxe_ds_ObjectMap();
	this.mapType = new haxe_ds_StringMap();
	this.phases = [];
	this.enabled = true;
};
$hxClasses["edge.Phase"] = edge_Phase;
edge_Phase.__name__ = ["edge","Phase"];
edge_Phase.prototype = {
	first: null
	,last: null
	,mapSystem: null
	,mapType: null
	,engine: null
	,phases: null
	,enabled: null
	,add: function(system) {
		this.remove(system);
		var node = this.createNode(system);
		if(null == this.first) {
			this.first = node;
			this.last = node;
		} else {
			node.prev = this.last;
			this.last.next = node;
			this.last = node;
		}
	}
	,remove: function(system) {
		var node = this.mapSystem.h[system.__id__];
		this.mapType.remove(this.key(system));
		if(null == node) {
			return;
		}
		this.engine.removeSystem(system);
		this.mapSystem.remove(system);
		if(node == this.first && node == this.last) {
			this.first = this.last = null;
		} else if(node == this.first) {
			this.first = node.next;
			node.next.prev = null;
		} else if(node == this.last) {
			this.last = node.prev;
			node.prev.next = null;
		} else {
			node.prev.next = node.next;
			node.next.prev = node.prev;
		}
	}
	,systems: function() {
		return new edge_core_NodeSystemIterator(this.first);
	}
	,update: function(t) {
		if(!this.enabled) {
			return;
		}
		var result;
		var system = this.systems();
		while(system.hasNext()) {
			var system1 = system.next();
			result = this.engine.updateSystem(system1,t);
			if(!result) {
				return;
			}
		}
		var _g = 0;
		var _g1 = this.phases;
		while(_g < _g1.length) {
			var phase = _g1[_g];
			++_g;
			phase.update(t);
		}
	}
	,createNode: function(system) {
		var node = new edge_core_NodeSystem(system);
		this.mapSystem.set(system,node);
		var this1 = this.mapType;
		var key = this.key(system);
		var _this = this1;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,system);
		} else {
			_this.h[key] = system;
		}
		this.engine.addSystem(system);
		return node;
	}
	,key: function(system) {
		return Type.getClassName(system == null ? null : js_Boot.getClass(system));
	}
	,__class__: edge_Phase
};
var edge_View = function() {
	var this1 = new thx_ObjectOrderedMap();
	this.map = this1;
};
$hxClasses["edge.View"] = edge_View;
edge_View.__name__ = ["edge","View"];
edge_View.prototype = {
	map: null
	,get_count: function() {
		return this.map.length;
	}
	,iterator: function() {
		return this.map.iterator();
	}
	,tryAdd: function(entity,data) {
		if(this.map.exists(entity)) {
			return false;
		}
		this.map.set(entity,{ entity : entity, data : data});
		return true;
	}
	,tryRemove: function(entity) {
		var o = this.map.get(entity);
		if(null == o) {
			return null;
		}
		this.map.remove(entity);
		return o.data;
	}
	,__class__: edge_View
};
var edge_core_ISystemProcess = function() { };
$hxClasses["edge.core.ISystemProcess"] = edge_core_ISystemProcess;
edge_core_ISystemProcess.__name__ = ["edge","core","ISystemProcess"];
edge_core_ISystemProcess.prototype = {
	update: null
	,addEntity: null
	,removeEntity: null
	,__class__: edge_core_ISystemProcess
};
var edge_core_NodeSystem = function(system) {
	this.system = system;
};
$hxClasses["edge.core.NodeSystem"] = edge_core_NodeSystem;
edge_core_NodeSystem.__name__ = ["edge","core","NodeSystem"];
edge_core_NodeSystem.prototype = {
	system: null
	,next: null
	,prev: null
	,__class__: edge_core_NodeSystem
};
var edge_core_NodeSystemIterator = function(node) {
	this.node = node;
};
$hxClasses["edge.core.NodeSystemIterator"] = edge_core_NodeSystemIterator;
edge_core_NodeSystemIterator.__name__ = ["edge","core","NodeSystemIterator"];
edge_core_NodeSystemIterator.prototype = {
	node: null
	,hasNext: function() {
		return null != this.node;
	}
	,next: function() {
		var system = this.node.system;
		this.node = this.node.next;
		return system;
	}
	,__class__: edge_core_NodeSystemIterator
};
var game_Camera = function() {
};
$hxClasses["game.Camera"] = game_Camera;
game_Camera.__name__ = ["game","Camera"];
game_Camera.__interfaces__ = [edge_IComponent];
game_Camera.prototype = {
	__class__: game_Camera
};
var game_Body = function(maxRunSX) {
	if(maxRunSX == null) {
		maxRunSX = 3;
	}
	this.maxRunSX = 3;
	this.airSX = 0.20;
	this.landSX = 0.6;
	this.jump = -4.2;
	this.friction = 0.25;
	this.maxRunSX = maxRunSX;
};
$hxClasses["game.Body"] = game_Body;
game_Body.__name__ = ["game","Body"];
game_Body.__interfaces__ = [edge_IComponent];
game_Body.prototype = {
	friction: null
	,jump: null
	,landSX: null
	,airSX: null
	,maxRunSX: null
	,__class__: game_Body
};
var game_Position = function(x,y,fixed) {
	if(fixed == null) {
		fixed = false;
	}
	this.x = x;
	this.y = y;
	this.fixed = fixed;
};
$hxClasses["game.Position"] = game_Position;
game_Position.__name__ = ["game","Position"];
game_Position.__interfaces__ = [edge_IComponent];
game_Position.prototype = {
	x: null
	,y: null
	,fixed: null
	,__class__: game_Position
};
var game_Size = function(w,h) {
	this.w = w;
	this.h = h;
};
$hxClasses["game.Size"] = game_Size;
game_Size.__name__ = ["game","Size"];
game_Size.__interfaces__ = [edge_IComponent];
game_Size.prototype = {
	w: null
	,h: null
	,__class__: game_Size
};
var game_Speed = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["game.Speed"] = game_Speed;
game_Speed.__name__ = ["game","Speed"];
game_Speed.__interfaces__ = [edge_IComponent];
game_Speed.prototype = {
	x: null
	,y: null
	,__class__: game_Speed
};
var game_Gravity = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["game.Gravity"] = game_Gravity;
game_Gravity.__name__ = ["game","Gravity"];
game_Gravity.__interfaces__ = [edge_IComponent];
game_Gravity.prototype = {
	x: null
	,y: null
	,__class__: game_Gravity
};
var game_Collision = function() {
	this.right = false;
	this.left = false;
	this.down = false;
	this.up = false;
	this.state = false;
};
$hxClasses["game.Collision"] = game_Collision;
game_Collision.__name__ = ["game","Collision"];
game_Collision.__interfaces__ = [edge_IComponent];
game_Collision.prototype = {
	state: null
	,up: null
	,down: null
	,left: null
	,right: null
	,__class__: game_Collision
};
var game_Life = function(alive,hp) {
	if(hp == null) {
		hp = 100;
	}
	if(alive == null) {
		alive = true;
	}
	this.damageSkip = 0;
	this.alive = alive;
	this.hp = hp;
	this.maxHp = hp;
};
$hxClasses["game.Life"] = game_Life;
game_Life.__name__ = ["game","Life"];
game_Life.__interfaces__ = [edge_IComponent];
game_Life.prototype = {
	alive: null
	,hp: null
	,maxHp: null
	,damageSkip: null
	,__class__: game_Life
};
var game_Lifebar = function() {
};
$hxClasses["game.Lifebar"] = game_Lifebar;
game_Lifebar.__name__ = ["game","Lifebar"];
game_Lifebar.__interfaces__ = [edge_IComponent];
game_Lifebar.prototype = {
	__class__: game_Lifebar
};
var game_Moneybar = function() {
};
$hxClasses["game.Moneybar"] = game_Moneybar;
game_Moneybar.__name__ = ["game","Moneybar"];
game_Moneybar.__interfaces__ = [edge_IComponent];
game_Moneybar.prototype = {
	__class__: game_Moneybar
};
var game_Player = function() {
	this.maxJump = 1;
	this.jump = 0;
	this.money = 0;
	this.arrowType = 0;
};
$hxClasses["game.Player"] = game_Player;
game_Player.__name__ = ["game","Player"];
game_Player.__interfaces__ = [edge_IComponent];
game_Player.prototype = {
	arrowType: null
	,money: null
	,jump: null
	,maxJump: null
	,__class__: game_Player
};
var game_AI = function() {
	this.blown = false;
	this.shockedAnim = false;
	this.shocked = 0;
	this.frozen = 0;
};
$hxClasses["game.AI"] = game_AI;
game_AI.__name__ = ["game","AI"];
game_AI.__interfaces__ = [edge_IComponent];
game_AI.prototype = {
	frozen: null
	,shocked: null
	,shockedAnim: null
	,blown: null
	,__class__: game_AI
};
var game_Control = function(keys,pointers) {
	this.keys = keys;
	this.pointers = pointers;
};
$hxClasses["game.Control"] = game_Control;
game_Control.__name__ = ["game","Control"];
game_Control.__interfaces__ = [edge_IComponent];
game_Control.prototype = {
	keys: null
	,pointers: null
	,__class__: game_Control
};
var game_Bow = function(ang,tMin,tMax,tSpeed) {
	if(tSpeed == null) {
		tSpeed = 0.5;
	}
	if(tMax == null) {
		tMax = 20;
	}
	if(tMin == null) {
		tMin = 5;
	}
	if(ang == null) {
		ang = 0;
	}
	this.aimLine = 5;
	this.tension = 0;
	this.ang = ang;
	this.tensionMin = tMin;
	this.tensionMax = tMax;
	this.tensionSpeed = tSpeed;
};
$hxClasses["game.Bow"] = game_Bow;
game_Bow.__name__ = ["game","Bow"];
game_Bow.__interfaces__ = [edge_IComponent];
game_Bow.prototype = {
	tension: null
	,tensionMin: null
	,tensionMax: null
	,tensionSpeed: null
	,aimLine: null
	,ang: null
	,arrow: null
	,__class__: game_Bow
};
var game_Arrow = function(type,player) {
	if(type == null) {
		type = 0;
	}
	this.visible = true;
	this.player = player;
	this.type = type;
};
$hxClasses["game.Arrow"] = game_Arrow;
game_Arrow.__name__ = ["game","Arrow"];
game_Arrow.__interfaces__ = [edge_IComponent];
game_Arrow.prototype = {
	visible: null
	,player: null
	,lastSpeedX: null
	,lastSpeedY: null
	,ang: null
	,type: null
	,__class__: game_Arrow
};
var game_Item = function() {
	this.lastSpeed = { x : 0, y : 0};
};
$hxClasses["game.Item"] = game_Item;
game_Item.__name__ = ["game","Item"];
game_Item.__interfaces__ = [edge_IComponent];
game_Item.prototype = {
	lastSpeed: null
	,__class__: game_Item
};
var game_Coin = function() {
	game_Item.call(this);
};
$hxClasses["game.Coin"] = game_Coin;
game_Coin.__name__ = ["game","Coin"];
game_Coin.__super__ = game_Item;
game_Coin.prototype = $extend(game_Item.prototype,{
	__class__: game_Coin
});
var game_Hp = function() {
	game_Item.call(this);
};
$hxClasses["game.Hp"] = game_Hp;
game_Hp.__name__ = ["game","Hp"];
game_Hp.__super__ = game_Item;
game_Hp.prototype = $extend(game_Item.prototype,{
	__class__: game_Hp
});
var game__$Components_ChestReward_$Impl_$ = {};
$hxClasses["game._Components.ChestReward_Impl_"] = game__$Components_ChestReward_$Impl_$;
game__$Components_ChestReward_$Impl_$.__name__ = ["game","_Components","ChestReward_Impl_"];
game__$Components_ChestReward_$Impl_$.fromString = function(type) {
	switch(type) {
	case "AIM":
		return 1;
	case "BLOWN_ARROWS":
		return 5;
	case "END":
		return 6;
	case "FROZEN_ARROWS":
		return 3;
	case "JUMP":
		return 2;
	case "LIFE":
		return 0;
	case "SHOCKED_ARROWS":
		return 4;
	default:
		throw new js__$Boot_HaxeError("Unknown case " + type);
	}
};
var game_Chest = function(reward) {
	this.maxAnimY = 70;
	this.animY = 0;
	this.state = 1;
	this.reward = reward;
};
$hxClasses["game.Chest"] = game_Chest;
game_Chest.__name__ = ["game","Chest"];
game_Chest.__interfaces__ = [edge_IComponent];
game_Chest.prototype = {
	reward: null
	,state: null
	,animY: null
	,maxAnimY: null
	,player: null
	,__class__: game_Chest
};
var game_Anim = function(repeat) {
	if(repeat == null) {
		repeat = 1;
	}
	this.repeat = repeat;
};
$hxClasses["game.Anim"] = game_Anim;
game_Anim.__name__ = ["game","Anim"];
game_Anim.__interfaces__ = [edge_IComponent];
game_Anim.prototype = {
	repeat: null
	,__class__: game_Anim
};
var game_Sprite = function(img,w,h,frameDelayMax,sets) {
	if(frameDelayMax == null) {
		frameDelayMax = 5;
	}
	this.animCounter = 0;
	this.frameDelay = 0;
	this.dir = 1;
	this.frame = 0;
	this.img = img;
	this.w = w;
	this.h = h;
	this.frameDelayMax = frameDelayMax;
	this.setW = img.get_width() / w | 0;
	if(sets != null) {
		this.sets = sets;
	} else {
		var setH = img.get_height() / h | 0;
		var type = "anim";
		var _g1 = new haxe_ds_StringMap();
		var _g = [];
		var _g2 = 0;
		var _g11 = this.setW * setH;
		while(_g2 < _g11) {
			var i = _g2++;
			_g.push(i);
		}
		var value = _g;
		if(__map_reserved[type] != null) {
			_g1.setReserved(type,value);
		} else {
			_g1.h[type] = value;
		}
		this.sets = _g1;
		if(this.frameType != type) {
			this.frameType = type;
			this.frameTypeId = 0;
			var _this = this.sets;
			this.frame = (__map_reserved[type] != null ? _this.getReserved(type) : _this.h[type])[0];
			this.frameDelay = 0;
		}
	}
};
$hxClasses["game.Sprite"] = game_Sprite;
game_Sprite.__name__ = ["game","Sprite"];
game_Sprite.__interfaces__ = [edge_IComponent];
game_Sprite.prototype = {
	img: null
	,setW: null
	,w: null
	,h: null
	,frame: null
	,sets: null
	,dir: null
	,frameDelay: null
	,frameDelayMax: null
	,frameType: null
	,frameTypeId: null
	,animCounter: null
	,__class__: game_Sprite
};
var game_CustomData = function() { };
$hxClasses["game.CustomData"] = game_CustomData;
game_CustomData.__name__ = ["game","CustomData"];
game_CustomData.init = function() {
	khm_tilemap_Data.initProps = function(tile) {
		if(tile.collide == null) {
			tile.collide = false;
		}
		if(tile.type == null) {
			tile.type = tile.collide ? game__$Slope_Slope_$Impl_$.fromString("FULL") : game__$Slope_Slope_$Impl_$.fromString("NONE");
		} else {
			tile.type = game__$Slope_Slope_$Impl_$.fromString(tile.type);
		}
	};
	khm_tilemap_Data.onTransformedProps = function(tile1,type) {
		switch(type) {
		case "flipX":
			tile1.type = game__$Slope_Slope_$Impl_$.flipX(tile1.type);
			break;
		case "flipY":
			tile1.type = game__$Slope_Slope_$Impl_$.flipY(tile1.type);
			break;
		case "rotate180":
			var _g = 0;
			while(_g < 2) {
				var i = _g++;
				tile1.type = game__$Slope_Slope_$Impl_$.rotate(tile1.type);
			}
			break;
		case "rotate270":
			var _g1 = 0;
			while(_g1 < 3) {
				var i1 = _g1++;
				tile1.type = game__$Slope_Slope_$Impl_$.rotate(tile1.type);
			}
			break;
		case "rotate90":
			tile1.type = game__$Slope_Slope_$Impl_$.rotate(tile1.type);
			break;
		}
	};
	khm_tilemap_Data.objectTemplate = function(layer,tile2) {
		switch(layer) {
		case 0:
			return null;
		case 1:
			return null;
		case 2:
			switch(tile2) {
			case 1:
				return { type : "player", layer : layer, x : -1, y : -1, data : null};
			case 2:
				return { type : "end", layer : layer, x : -1, y : -1, data : null};
			case 3:
				return { type : "death", layer : layer, x : -1, y : -1, data : null};
			case 4:
				return { type : "chest", layer : layer, x : -1, y : -1, data : { reward : "LIFE"}};
			case 5:
				return { type : "enemy", layer : layer, x : -1, y : -1, data : { type : "Imp"}};
			default:
				return null;
			}
			break;
		default:
			return null;
		}
	};
};
var khm__$Screen_FPS = function() {
	this.lastTime = 0.0;
	this.time = 0.0;
	this.frames = 0;
	this.fps = 0;
};
$hxClasses["khm._Screen.FPS"] = khm__$Screen_FPS;
khm__$Screen_FPS.__name__ = ["khm","_Screen","FPS"];
khm__$Screen_FPS.prototype = {
	fps: null
	,frames: null
	,time: null
	,lastTime: null
	,update: function() {
		var deltaTime = kha_Scheduler.realTime() - this.lastTime;
		this.lastTime = kha_Scheduler.realTime();
		this.time += deltaTime;
		if(this.time >= 1) {
			this.fps = this.frames;
			this.frames = 0;
			this.time = 0;
		}
		return this.fps;
	}
	,__class__: khm__$Screen_FPS
};
var khm_Screen = function() {
	var _g = new haxe_ds_IntMap();
	var _g1 = 0;
	while(_g1 < 10) {
		var i = _g1++;
		_g.h[i] = { id : i, startX : 0, startY : 0, x : 0, y : 0, moveX : 0, moveY : 0, type : 0, isDown : false, isActive : false};
	}
	this.pointers = _g;
	this.keys = new haxe_ds_IntMap();
	this.scale = 1.0;
};
$hxClasses["khm.Screen"] = khm_Screen;
khm_Screen.__name__ = ["khm","Screen"];
khm_Screen.init = function(sets) {
	khm_Screen.w = kha_System.windowWidth();
	khm_Screen.h = kha_System.windowHeight();
	khm_Screen.isTouch = "ontouchstart" in window;
	if(sets != null) {
		if(sets.isTouch != null) {
			khm_Screen.isTouch = sets.isTouch;
		}
		if(sets.samplesPerPixel != null) {
			khm_Screen.samplesPerPixel = sets.samplesPerPixel;
		}
	}
	khm_Screen.isInited = true;
};
khm_Screen.prototype = {
	scale: null
	,keys: null
	,pointers: null
	,show: function() {
		if(!khm_Screen.isInited) {
			khm_Screen.init();
		}
		if(khm_Screen.screen != null) {
			khm_Screen.screen.hide();
		}
		khm_Screen.screen = this;
		khm_Screen.taskId = kha_Scheduler.addTimeTask($bind(this,this._onUpdate),0,0.0166666666666666664);
		kha_System.notifyOnFrames($bind(this,this._onRender));
		if(kha_input_Keyboard.get() != null) {
			kha_input_Keyboard.get().notify($bind(this,this._onKeyDown),$bind(this,this._onKeyUp),$bind(this,this.onKeyPress));
		}
		if(khm_Screen.isTouch && kha_input_Surface.get() != null) {
			kha_input_Surface.get().notify($bind(this,this._onTouchDown),$bind(this,this._onTouchUp),$bind(this,this._onTouchMove));
		} else if(kha_input_Mouse.get() != null) {
			kha_input_Mouse.get().notify($bind(this,this._onMouseDown),$bind(this,this._onMouseUp),$bind(this,this._onMouseMove),$bind(this,this.onMouseWheel),$bind(this,this.onMouseLeave));
		}
		var k = this.keys.iterator();
		while(k.hasNext()) {
			var k1 = k.next();
			k1 = false;
		}
		var p = this.pointers.iterator();
		while(p.hasNext()) {
			var p1 = p.next();
			p1.isDown = false;
		}
	}
	,hide: function() {
		kha_Scheduler.removeTimeTask(khm_Screen.taskId);
		kha_System.removeFramesListener($bind(this,this._onRender));
		if(kha_input_Keyboard.get() != null) {
			kha_input_Keyboard.get().remove($bind(this,this._onKeyDown),$bind(this,this._onKeyUp),$bind(this,this.onKeyPress));
		}
		if(khm_Screen.isTouch && kha_input_Surface.get() != null) {
			kha_input_Surface.get().remove($bind(this,this._onTouchDown),$bind(this,this._onTouchUp),$bind(this,this._onTouchMove));
		} else if(kha_input_Mouse.get() != null) {
			kha_input_Mouse.get().remove($bind(this,this._onMouseDown),$bind(this,this._onMouseUp),$bind(this,this._onMouseMove),$bind(this,this.onMouseWheel),$bind(this,this.onMouseLeave));
		}
	}
	,_onUpdate: function() {
		if((kha_System.windowWidth() / this.scale | 0) != khm_Screen.w || (kha_System.windowHeight() / this.scale | 0) != khm_Screen.h) {
			khm_Screen.w = kha_System.windowWidth() / this.scale | 0;
			khm_Screen.h = kha_System.windowHeight() / this.scale | 0;
			this.onResize();
		}
		this.onUpdate();
		khm_Screen.fps.update();
	}
	,_onRender: function(framebuffers) {
		var framebuffer = framebuffers[0];
		khm_Screen.frame = framebuffer;
		var g = khm_Screen.frame.get_g2();
		var transformation = new kha_math_FastMatrix3(this.scale,0,0,0,this.scale,0,0,0,1);
		g.setTransformation(transformation);
		var _this = g.transformations[g.transformations.length - 1];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
		this.onRender(khm_Screen.frame);
		var font = khm_Screen.frame.get_g2().get_font();
		if(font != null) {
			var g1 = framebuffer.get_g2();
			g1.begin(false);
			this.drawFPS(g1,font);
			g1.end();
		}
		khm_Screen.fps.frames++;
	}
	,drawFPS: function(g,font) {
		var transformation = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		g.setTransformation(transformation);
		var _this = g.transformations[g.transformations.length - 1];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
		g.set_color(-1);
		g.set_font(font);
		g.set_fontSize(24);
		var w = kha_System.windowWidth();
		var h = kha_System.windowHeight();
		var txt = "" + khm_Screen.fps.fps + " | " + w + "x" + h + " " + this.scale + "x";
		var x = w - g.get_font().width(g.get_fontSize(),txt);
		var y = h - g.get_font().height(g.get_fontSize());
		g.drawString(txt,x,y);
	}
	,_onKeyDown: function(key) {
		this.keys.h[key] = true;
		this.onKeyDown(key);
	}
	,_onKeyUp: function(key) {
		this.keys.h[key] = false;
		this.onKeyUp(key);
	}
	,_onMouseDown: function(button,x,y) {
		x = x / this.scale | 0;
		y = y / this.scale | 0;
		this.pointers.h[0].startX = x;
		this.pointers.h[0].startY = y;
		this.pointers.h[0].x = x;
		this.pointers.h[0].y = y;
		this.pointers.h[0].type = button;
		this.pointers.h[0].isDown = true;
		this.pointers.h[0].isActive = true;
		this.onMouseDown(this.pointers.h[0]);
	}
	,_onMouseMove: function(x,y,mx,my) {
		x = x / this.scale | 0;
		y = y / this.scale | 0;
		this.pointers.h[0].x = x;
		this.pointers.h[0].y = y;
		this.pointers.h[0].moveX = mx;
		this.pointers.h[0].moveY = my;
		this.pointers.h[0].isActive = true;
		this.onMouseMove(this.pointers.h[0]);
	}
	,_onMouseUp: function(button,x,y) {
		if(!this.pointers.h[0].isActive) {
			return;
		}
		x = x / this.scale | 0;
		y = y / this.scale | 0;
		this.pointers.h[0].x = x;
		this.pointers.h[0].y = y;
		this.pointers.h[0].type = button;
		this.pointers.h[0].isDown = false;
		this.onMouseUp(this.pointers.h[0]);
	}
	,_onTouchDown: function(id,x,y) {
		if(id > 9) {
			return;
		}
		x = x / this.scale | 0;
		y = y / this.scale | 0;
		this.pointers.h[id].startX = x;
		this.pointers.h[id].startY = y;
		this.pointers.h[id].x = x;
		this.pointers.h[id].y = y;
		this.pointers.h[id].isDown = true;
		this.pointers.h[id].isActive = true;
		this.onMouseDown(this.pointers.h[id]);
	}
	,_onTouchMove: function(id,x,y) {
		if(id > 9) {
			return;
		}
		x = x / this.scale | 0;
		y = y / this.scale | 0;
		this.pointers.h[id].moveX = x - this.pointers.h[id].x;
		this.pointers.h[id].moveY = y - this.pointers.h[id].y;
		this.pointers.h[id].x = x;
		this.pointers.h[id].y = y;
		this.onMouseMove(this.pointers.h[id]);
	}
	,_onTouchUp: function(id,x,y) {
		if(id > 9) {
			return;
		}
		x = x / this.scale | 0;
		y = y / this.scale | 0;
		if(!this.pointers.h[id].isActive) {
			return;
		}
		this.pointers.h[id].x = x;
		this.pointers.h[id].y = y;
		this.pointers.h[id].isDown = false;
		this.onMouseUp(this.pointers.h[id]);
	}
	,setScale: function(scale) {
		this.scale = scale;
		this.onRescale(scale);
	}
	,onRescale: function(scale) {
	}
	,onResize: function() {
	}
	,onUpdate: function() {
	}
	,onRender: function(frame) {
	}
	,onKeyDown: function(key) {
	}
	,onKeyUp: function(key) {
	}
	,onKeyPress: function(char) {
	}
	,onMouseDown: function(p) {
	}
	,onMouseMove: function(p) {
	}
	,onMouseUp: function(p) {
	}
	,onMouseWheel: function(delta) {
	}
	,onMouseLeave: function() {
	}
	,__class__: khm_Screen
};
var game_Game = function() {
	khm_Screen.call(this);
};
$hxClasses["game.Game"] = game_Game;
game_Game.__name__ = ["game","Game"];
game_Game.__super__ = khm_Screen;
game_Game.prototype = $extend(khm_Screen.prototype,{
	engine: null
	,updatePhase: null
	,renderPhase: null
	,startLife: null
	,startPlayer: null
	,player: null
	,editor: null
	,currentLevel: null
	,levelProgress: null
	,init: function(editor) {
		this.engine = new edge_Engine();
		this.editor = editor;
		game_Game.lvl = new khm_tilemap_Tilemap();
		game_CustomData.init();
		var tileset = new khm_tilemap_Tileset(kha_Assets.blobs.tiles_json);
		game_Game.lvl.init(tileset);
		this.loadMapId(1);
		var sets = khm_Settings.read();
		this.currentLevel = -1;
		this.levelProgress = sets.levelProgress;
	}
	,playCampaign: function() {
		this.currentLevel = this.levelProgress;
		this.loadMapId(this.levelProgress);
		this.newGame();
	}
	,loadMapId: function(id) {
		var data = kha_Assets.blobs.get("maps_" + id + "_json");
		game_Game.lvl.loadJSON(JSON.parse(data.toString()));
	}
	,playCustomLevel: function(map) {
		game_Game.lvl.loadJSON(map);
		this.newGame();
	}
	,levelComplete: function() {
		if(this.editor != null) {
			this.showEditor();
			return;
		}
		if(this.player != null) {
			var this1 = this.player.map;
			var key = Type.getClassName(game_Life);
			var _this = this1;
			var life = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			this.startLife = new game_Life(true,life.maxHp);
			this.startLife.hp = life.hp;
			var this2 = this.player.map;
			var key1 = Type.getClassName(game_Player);
			var _this1 = this2;
			var p = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
			this.startPlayer = new game_Player();
			this.startPlayer.arrowType = p.arrowType;
			this.startPlayer.maxJump = p.maxJump;
			this.startPlayer.money = p.money;
		}
		this.currentLevel++;
		if(this.currentLevel > this.levelProgress && kha_Assets.blobs.get("maps_" + this.currentLevel + "_json") != null) {
			this.levelProgress = this.currentLevel;
			khm_Settings.set({ levelProgress : this.levelProgress});
			this.playCampaign();
			return;
		}
		haxe_Log.trace("game over here",{ fileName : "game/Game.hx", lineNumber : 118, className : "game.Game", methodName : "levelComplete"});
	}
	,gameComplete: function() {
		var tmp = this.player;
		var this1 = this.player.map;
		var key = Type.getClassName(game_Camera);
		var _this = this1;
		tmp.remove(__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]);
		this.player = null;
	}
	,newGame: function() {
		this.engine.clear();
		var text = kha_Assets.blobs.player_json.toString();
		var json = JSON.parse(text);
		var sp = new game_SpritesetParser();
		var frameSets = sp.parse(json);
		var objects = game_Game.lvl.map.objects;
		var _g = 0;
		while(_g < objects.length) {
			var object = objects[_g];
			++_g;
			var _g1 = object.type;
			switch(_g1) {
			case "chest":
				var data = object.data;
				this.engine.create([new game_Chest(game__$Components_ChestReward_$Impl_$.fromString(data.reward)),new game_Body(),new game_Collision(),new game_Sprite(kha_Assets.images.chest,32,40,2),new game_Position(object.x * game_Game.lvl.tileset.tileSize,object.y * game_Game.lvl.tileset.tileSize - 8),new game_Size(32,40)]);
				break;
			case "enemy":
				var _g11 = object.data.type;
				switch(_g11) {
				case "GreyMinotaur":
					this.engine.create([new game_AI(),new game_Control(new haxe_ds_IntMap(),new haxe_ds_IntMap()),new game_Body(2),new game_Collision(),new game_Sprite(kha_Assets.images.GreyMinotaur,48,48,null,frameSets),new game_Position(object.x * game_Game.lvl.tileset.tileSize,object.y * game_Game.lvl.tileset.tileSize),new game_Size(game_Game.lvl.tileset.tileSize / 1.5 | 0,game_Game.lvl.tileset.tileSize),new game_Speed(0,0),new game_Gravity(0,0.2),new game_Life(true,20)]);
					break;
				case "HunterOrc":
					this.engine.create([new game_AI(),new game_Control(new haxe_ds_IntMap(),new haxe_ds_IntMap()),new game_Body(),new game_Collision(),new game_Sprite(kha_Assets.images.HunterOrc,32,32,null,frameSets),new game_Position(object.x * game_Game.lvl.tileset.tileSize,object.y * game_Game.lvl.tileset.tileSize),new game_Size(game_Game.lvl.tileset.tileSize / 2 | 0,game_Game.lvl.tileset.tileSize),new game_Speed(0,0),new game_Gravity(0,0.2),new game_Life(true,15)]);
					break;
				case "Imp":
					this.engine.create([new game_AI(),new game_Control(new haxe_ds_IntMap(),new haxe_ds_IntMap()),new game_Body(),new game_Collision(),new game_Sprite(kha_Assets.images.Imp,32,32,null,frameSets),new game_Position(object.x * game_Game.lvl.tileset.tileSize,object.y * game_Game.lvl.tileset.tileSize),new game_Size(game_Game.lvl.tileset.tileSize / 2 | 0,18),new game_Speed(0,0),new game_Gravity(0,0.2),new game_Life(true,5)]);
					break;
				}
				break;
			case "player":
				if(this.startLife == null) {
					this.startLife = new game_Life(true,30);
				}
				if(this.startPlayer == null) {
					this.startPlayer = new game_Player();
				}
				var sLife = new game_Life(true,this.startLife.maxHp);
				sLife.hp = this.startLife.hp;
				var sPlayer = new game_Player();
				sPlayer.arrowType = this.startPlayer.arrowType;
				sPlayer.maxJump = this.startPlayer.maxJump;
				sPlayer.money = this.startPlayer.money;
				var p = this.engine.create([sPlayer,sLife,new game_Control(this.keys,this.pointers),new game_Camera(),new game_Body(),new game_Collision(),new game_Sprite(kha_Assets.images.player,32,32,null,frameSets),new game_Position(object.x * game_Game.lvl.tileset.tileSize,object.y * game_Game.lvl.tileset.tileSize),new game_Size(game_Game.lvl.tileset.tileSize / 2 | 0,game_Game.lvl.tileset.tileSize - 1),new game_Speed(0,0),new game_Gravity(0,0.2),new game_Lifebar(),new game_Moneybar(),new game_Bow()]);
				this.player = p;
				break;
			default:
			}
		}
		this.updatePhase = this.engine.createPhase();
		this.renderPhase = this.engine.createPhase();
		this.updatePhase.add(new game_systems_UpdateGravitation());
		this.updatePhase.add(new game_systems_UpdateTileCollision());
		this.updatePhase.add(new game_systems_UpdateBodyCollision(this));
		this.updatePhase.add(new game_systems_UpdateArrowCollision());
		this.updatePhase.add(new game_systems_UpdateCoinCollision());
		this.updatePhase.add(new game_systems_UpdateHpCollision());
		this.updatePhase.add(new game_systems_UpdatePlayerCollision(this));
		this.updatePhase.add(new game_systems_UpdatePlayerAnimation());
		this.updatePhase.add(new game_systems_UpdateAIAnimation());
		this.updatePhase.add(new game_systems_UpdatePosition());
		this.updatePhase.add(new game_systems_UpdateBodyPhysic());
		this.updatePhase.add(new game_systems_UpdateArrows());
		this.updatePhase.add(new game_systems_UpdateItems());
		this.updatePhase.add(new game_systems_UpdateChests(this));
		this.updatePhase.add(new game_systems_UpdatePlayerControl());
		this.updatePhase.add(new game_systems_UpdateAIControl());
		this.updatePhase.add(new game_systems_UpdatePlayerAim(this));
		this.updatePhase.add(new game_systems_UpdateCamera());
		this.renderPhase.add(new game_systems_RenderBG());
		this.renderPhase.add(new game_systems_RenderMapTG());
		this.renderPhase.add(new game_systems_RenderChests());
		this.renderPhase.add(new game_systems_RenderBodies(this));
		this.renderPhase.add(new game_systems_RenderAnimations());
		this.renderPhase.add(new game_systems_RenderArrows());
		this.renderPhase.add(new game_systems_RenderAimLine());
		this.renderPhase.add(new game_systems_RenderPlayerLifebar());
		this.renderPhase.add(new game_systems_RenderPlayerMoneybar());
		this.renderPhase.add(new game_systems_RenderGameEnd(this));
	}
	,onUpdate: function() {
		this.updatePhase.update(0.0166666666666666664);
	}
	,onRender: function(frame) {
		var g = khm_Screen.frame.get_g2();
		g.begin();
		this.renderPhase.update(0.0166666666666666664);
		g.end();
	}
	,onKeyDown: function(key) {
		if(key == 48) {
			this.setScale(1);
		} else if(key == 189 || key == 173) {
			if(this.scale > 1) {
				this.setScale(this.scale - 1);
			}
		} else if(key == 187 || key == 61) {
			if(this.scale < 9) {
				this.setScale(this.scale + 1);
			}
		} else if(key == 82) {
			this.newGame();
		} else if(key == 27) {
			if(this.editor != null) {
				this.showEditor();
			}
		}
	}
	,showEditor: function() {
		this.player = null;
		this.editor.show();
	}
	,onResize: function() {
		game_Game.lvl.camera.w = khm_Screen.w;
		game_Game.lvl.camera.h = khm_Screen.h;
	}
	,onRescale: function(scale) {
		game_Game.lvl.scale = scale;
	}
	,__class__: game_Game
});
var game__$Slope_Slope_$Impl_$ = {};
$hxClasses["game._Slope.Slope_Impl_"] = game__$Slope_Slope_$Impl_$;
game__$Slope_Slope_$Impl_$.__name__ = ["game","_Slope","Slope_Impl_"];
game__$Slope_Slope_$Impl_$.fromString = function(type) {
	var type1;
	switch(type) {
	case "FULL":
		type1 = 0;
		break;
	case "HALF_B":
		type1 = 1;
		break;
	case "HALF_BL":
		type1 = 5;
		break;
	case "HALF_BR":
		type1 = 6;
		break;
	case "HALF_L":
		type1 = 3;
		break;
	case "HALF_R":
		type1 = 4;
		break;
	case "HALF_T":
		type1 = 2;
		break;
	case "HALF_TL":
		type1 = 7;
		break;
	case "HALF_TR":
		type1 = 8;
		break;
	case "NONE":
		type1 = -1;
		break;
	case "QUARTER_BL":
		type1 = 9;
		break;
	case "QUARTER_BR":
		type1 = 10;
		break;
	case "QUARTER_TL":
		type1 = 11;
		break;
	case "QUARTER_TR":
		type1 = 12;
		break;
	default:
		throw new js__$Boot_HaxeError("Unknown case " + type);
	}
	var this1 = type1;
	return this1;
};
game__$Slope_Slope_$Impl_$.rotate = function(type) {
	var this1;
	switch(type) {
	case 1:
		this1 = 3;
		break;
	case 2:
		this1 = 4;
		break;
	case 3:
		this1 = 2;
		break;
	case 4:
		this1 = 1;
		break;
	case 5:
		this1 = 7;
		break;
	case 6:
		this1 = 5;
		break;
	case 7:
		this1 = 8;
		break;
	case 8:
		this1 = 6;
		break;
	case 9:
		this1 = 11;
		break;
	case 10:
		this1 = 9;
		break;
	case 11:
		this1 = 12;
		break;
	case 12:
		this1 = 10;
		break;
	default:
		this1 = type;
	}
	return this1;
};
game__$Slope_Slope_$Impl_$.flipX = function(type) {
	var this1;
	switch(type) {
	case 3:
		this1 = 4;
		break;
	case 4:
		this1 = 3;
		break;
	case 5:
		this1 = 6;
		break;
	case 6:
		this1 = 5;
		break;
	case 7:
		this1 = 8;
		break;
	case 8:
		this1 = 7;
		break;
	case 9:
		this1 = 10;
		break;
	case 10:
		this1 = 9;
		break;
	case 11:
		this1 = 12;
		break;
	case 12:
		this1 = 11;
		break;
	default:
		this1 = type;
	}
	return this1;
};
game__$Slope_Slope_$Impl_$.flipY = function(type) {
	var this1;
	switch(type) {
	case 1:
		this1 = 2;
		break;
	case 2:
		this1 = 1;
		break;
	case 5:
		this1 = 7;
		break;
	case 6:
		this1 = 8;
		break;
	case 7:
		this1 = 5;
		break;
	case 8:
		this1 = 6;
		break;
	case 9:
		this1 = 11;
		break;
	case 10:
		this1 = 12;
		break;
	case 11:
		this1 = 9;
		break;
	case 12:
		this1 = 10;
		break;
	default:
		this1 = type;
	}
	return this1;
};
var game_SpritesetParser = function() {
};
$hxClasses["game.SpritesetParser"] = game_SpritesetParser;
game_SpritesetParser.__name__ = ["game","SpritesetParser"];
game_SpritesetParser.prototype = {
	parse: function(json) {
		var map = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = json.sets;
		while(_g < _g1.length) {
			var set = _g1[_g];
			++_g;
			var k = set.id;
			var v = [];
			if(__map_reserved[k] != null) {
				map.setReserved(k,v);
			} else {
				map.h[k] = v;
			}
			if(set.frames != null) {
				var k1 = set.id;
				var v1 = set.frames;
				if(__map_reserved[k1] != null) {
					map.setReserved(k1,v1);
				} else {
					map.h[k1] = v1;
				}
				continue;
			}
			var from = set.from == null ? 0 : set.from;
			var to = set.to == null ? 0 : set.to + 1;
			var k2 = set.id;
			var _g2 = [];
			var _g4 = from;
			var _g3 = to;
			while(_g4 < _g3) {
				var i = _g4++;
				_g2.push(i);
			}
			var v2 = _g2;
			if(__map_reserved[k2] != null) {
				map.setReserved(k2,v2);
			} else {
				map.h[k2] = v2;
			}
		}
		return map;
	}
	,__class__: game_SpritesetParser
};
var game_systems_UpdateAIControl = function() {
	this.__process__ = new game_systems_UpdateAIControl_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateAIControl"] = game_systems_UpdateAIControl;
game_systems_UpdateAIControl.__name__ = ["game","systems","UpdateAIControl"];
game_systems_UpdateAIControl.__interfaces__ = [edge_ISystem];
game_systems_UpdateAIControl.prototype = {
	get_lvl: function() {
		return game_Game.lvl;
	}
	,get_tileSize: function() {
		return game_Game.lvl.tileset.tileSize;
	}
	,update: function(ai,control,body,pos,size,speed,coll) {
		var keys = control.keys;
		if(ai.frozen > 0) {
			ai.frozen--;
			return true;
		}
		if(ai.shocked > 0) {
			if(keys.h[65] == keys.h[68]) {
				var side = Std.random(2) == 0;
				keys.h[65] = side;
				var v = !side;
				keys.h[68] = v;
			}
			if(Std.random(5) == 0) {
				var v1 = !keys.h[65];
				keys.h[65] = v1;
				var v2 = !keys.h[68];
				keys.h[68] = v2;
			}
			ai.shocked--;
		}
		if(ai.blown && coll.down) {
			speed.y -= 3;
			speed.x = -speed.x;
			coll.down = false;
		}
		if(Std.random(30) == 0) {
			if(keys.h[65] == keys.h[68]) {
				var side1 = Std.random(2) == 0;
				keys.h[65] = side1;
				var v3 = !side1;
				keys.h[68] = v3;
			}
		}
		if(Std.random(100) == 0) {
			keys.h[87] = true;
		}
		if(Std.random(150) == 0) {
			keys.h[65] = false;
			keys.h[68] = false;
		}
		var side2 = 0;
		if(coll.left) {
			side2 = -1;
		} else if(coll.right) {
			side2 = 1;
		}
		var dir = speed.x / Math.abs(speed.x) | 0;
		if(coll.down) {
			if(side2 == 0) {
				var sizeW = dir == 1 ? size.w : 0;
				var tmp;
				if(dir != 0) {
					var x = pos.x + sizeW + speed.x;
					var y = pos.y;
					var safe = false;
					var _g1 = 1;
					var _g = 3;
					while(_g1 < _g) {
						var i = _g1++;
						var y1 = y + this.get_tileSize() * i;
						var ix = x / this.get_tileSize() | 0;
						var iy = y1 / this.get_tileSize() | 0;
						if(this.get_lvl().getTile(1,ix,iy).props.collide) {
							safe = true;
							break;
						}
					}
					tmp = !safe;
				} else {
					tmp = false;
				}
				if(tmp) {
					var v4 = dir == 1;
					keys.h[65] = v4;
					var v5 = dir == -1;
					keys.h[68] = v5;
				}
			} else if(side2 != 0) {
				var sizeW1 = side2 == 1 ? size.w : 0;
				var x1 = pos.x + sizeW1 + side2;
				var y2 = pos.y - this.get_tileSize();
				var ix1 = x1 / this.get_tileSize() | 0;
				var iy1 = y2 / this.get_tileSize() | 0;
				if(!this.get_lvl().getTile(1,ix1,iy1).props.collide) {
					keys.h[87] = true;
				} else {
					var v6 = side2 == 1;
					keys.h[65] = v6;
					var v7 = side2 == -1;
					keys.h[68] = v7;
				}
			}
		} else {
			var sizeW2 = dir == 1 ? size.w * 2 : -size.w;
			if(side2 == 0) {
				var tmp1;
				if(dir != 0) {
					var x2 = pos.x + sizeW2 + speed.x;
					var y3 = pos.y + size.h;
					var safe1 = false;
					var _g11 = 1;
					var _g2 = 4;
					while(_g11 < _g2) {
						var i1 = _g11++;
						var y4 = y3 + this.get_tileSize() * i1;
						var ix2 = x2 / this.get_tileSize() | 0;
						var iy2 = y4 / this.get_tileSize() | 0;
						if(this.get_lvl().getTile(1,ix2,iy2).props.collide) {
							safe1 = true;
							break;
						}
					}
					tmp1 = !safe1;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					var v8 = dir == 1;
					keys.h[65] = v8;
					var v9 = dir == -1;
					keys.h[68] = v9;
				}
			} else {
				var x3 = pos.x + side2 * this.get_tileSize();
				var y5 = pos.y - this.get_tileSize();
				var ix3 = x3 / this.get_tileSize() | 0;
				var iy3 = y5 / this.get_tileSize() | 0;
				if(!(!this.get_lvl().getTile(1,ix3,iy3).props.collide)) {
					var v10 = side2 == 1;
					keys.h[65] = v10;
					var v11 = side2 == -1;
					keys.h[68] = v11;
				}
			}
		}
		if(keys.h[32]) {
			var v12 = !keys.h[65];
			keys.h[65] = v12;
			var v13 = !keys.h[68];
			keys.h[68] = v13;
			keys.h[87] = false;
		}
		if(pos.x + speed.x < 1) {
			var v14 = false;
			keys.h[65] = v14;
			var v15 = true;
			keys.h[68] = v15;
		}
		if(pos.x + size.w + speed.x > this.get_lvl().map.w * this.get_tileSize() - 1) {
			var v16 = true;
			keys.h[65] = v16;
			var v17 = false;
			keys.h[68] = v17;
		}
		var sx = coll.down ? body.landSX : body.airSX;
		if(keys.h[65] && speed.x > -body.maxRunSX) {
			speed.x -= sx;
		}
		if(keys.h[68] && speed.x < body.maxRunSX) {
			speed.x += sx;
		}
		if(keys.h[87] && coll.down) {
			keys.h[87] = false;
			speed.y = body.jump;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateAIControl
};
var game_systems_UpdateAIAnimation = function() {
	this.__process__ = new game_systems_UpdateAIAnimation_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateAIAnimation"] = game_systems_UpdateAIAnimation;
game_systems_UpdateAIAnimation.__name__ = ["game","systems","UpdateAIAnimation"];
game_systems_UpdateAIAnimation.__interfaces__ = [edge_ISystem];
game_systems_UpdateAIAnimation.prototype = {
	get_lvl: function() {
		return game_Game.lvl;
	}
	,update: function(ai,control,sprite,pos,size,speed,body,coll) {
		if(ai.frozen > 0) {
			return true;
		}
		var keys = control.keys;
		if(keys.h[32]) {
			if(sprite.frameType != "attack") {
				sprite.frameType = "attack";
				sprite.frameTypeId = 0;
				var _this = sprite.sets;
				sprite.frame = (__map_reserved["attack"] != null ? _this.getReserved("attack") : _this.h["attack"])[0];
				sprite.frameDelay = 0;
			}
			sprite.frameDelay++;
			if(sprite.frameDelay >= sprite.frameDelayMax) {
				sprite.frameTypeId++;
				var key = sprite.frameType;
				var _this1 = sprite.sets;
				var len = (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).length;
				if(sprite.frameTypeId == len) {
					sprite.frameTypeId = 0;
				}
				var key1 = sprite.frameType;
				var _this2 = sprite.sets;
				sprite.frame = (__map_reserved[key1] != null ? _this2.getReserved(key1) : _this2.h[key1])[sprite.frameTypeId];
				sprite.frameDelay = 0;
			}
			if(sprite.frameTypeId == 0) {
				keys.h[32] = false;
			}
			return true;
		}
		if(keys.h[65] != keys.h[68]) {
			sprite.dir = keys.h[65] ? 0 : 1;
		}
		if(coll.down) {
			if(Math.abs(speed.x) > body.landSX) {
				if(sprite.frameType != "run") {
					sprite.frameType = "run";
					sprite.frameTypeId = 0;
					var _this3 = sprite.sets;
					sprite.frame = (__map_reserved["run"] != null ? _this3.getReserved("run") : _this3.h["run"])[0];
					sprite.frameDelay = 0;
				}
			} else if(speed.x == 0) {
				if(sprite.frameType != "stand") {
					sprite.frameType = "stand";
					sprite.frameTypeId = 0;
					var _this4 = sprite.sets;
					sprite.frame = (__map_reserved["stand"] != null ? _this4.getReserved("stand") : _this4.h["stand"])[0];
					sprite.frameDelay = 0;
				}
			} else if(sprite.frameType != "brake") {
				sprite.frameType = "brake";
				sprite.frameTypeId = 0;
				var _this5 = sprite.sets;
				sprite.frame = (__map_reserved["brake"] != null ? _this5.getReserved("brake") : _this5.h["brake"])[0];
				sprite.frameDelay = 0;
			}
		} else if(speed.y < -this.get_lvl().scale) {
			if(sprite.frameType != "jump") {
				sprite.frameType = "jump";
				sprite.frameTypeId = 0;
				var _this6 = sprite.sets;
				sprite.frame = (__map_reserved["jump"] != null ? _this6.getReserved("jump") : _this6.h["jump"])[0];
				sprite.frameDelay = 0;
			}
		} else if(speed.y > this.get_lvl().scale) {
			if(sprite.frameType != "fall") {
				sprite.frameType = "fall";
				sprite.frameTypeId = 0;
				var _this7 = sprite.sets;
				sprite.frame = (__map_reserved["fall"] != null ? _this7.getReserved("fall") : _this7.h["fall"])[0];
				sprite.frameDelay = 0;
			}
		} else if(sprite.frameType != "soar") {
			sprite.frameType = "soar";
			sprite.frameTypeId = 0;
			var _this8 = sprite.sets;
			sprite.frame = (__map_reserved["soar"] != null ? _this8.getReserved("soar") : _this8.h["soar"])[0];
			sprite.frameDelay = 0;
		}
		sprite.frameDelay++;
		if(sprite.frameDelay >= sprite.frameDelayMax) {
			sprite.frameTypeId++;
			var key2 = sprite.frameType;
			var _this9 = sprite.sets;
			var len1 = (__map_reserved[key2] != null ? _this9.getReserved(key2) : _this9.h[key2]).length;
			if(sprite.frameTypeId == len1) {
				sprite.frameTypeId = 0;
			}
			var key3 = sprite.frameType;
			var _this10 = sprite.sets;
			sprite.frame = (__map_reserved[key3] != null ? _this10.getReserved(key3) : _this10.h[key3])[sprite.frameTypeId];
			sprite.frameDelay = 0;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateAIAnimation
};
var game_systems_UpdateArrowCollision = function() {
	this.__process__ = new game_systems_UpdateArrowCollision_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateArrowCollision"] = game_systems_UpdateArrowCollision;
game_systems_UpdateArrowCollision.__name__ = ["game","systems","UpdateArrowCollision"];
game_systems_UpdateArrowCollision.__interfaces__ = [edge_ISystem];
game_systems_UpdateArrowCollision.prototype = {
	get_tileSize: function() {
		return game_Game.lvl.tileset.tileSize;
	}
	,targets: null
	,entity: null
	,update: function(arrow,pos,size,speed,life) {
		if(pos.fixed) {
			return true;
		}
		if(!life.alive) {
			this.entity.destroy();
			return true;
		}
		var sx = Math.abs(speed.x);
		var sy = Math.abs(speed.y);
		var vx = sx / speed.x;
		var vy = sy / speed.y;
		var min = this.get_tileSize() / 4;
		var oldX = pos.x;
		var oldY = pos.y;
		while(sx > min || sy > min) {
			if(sx > min) {
				pos.x += min * vx;
				sx -= min;
			}
			if(sy > min) {
				pos.y += min * vy;
				sy -= min;
			}
			if(this.collision(arrow,pos,size,speed,life)) {
				return true;
			}
		}
		if(sx > 0) {
			pos.x += sx * vx;
		}
		if(sy > 0) {
			pos.y += sy * vy;
		}
		if(this.collision(arrow,pos,size,speed,life)) {
			return true;
		}
		pos.x = oldX;
		pos.y = oldY;
		return true;
	}
	,collision: function(arrow,pos,size,speed,life) {
		var ofPlayer = null;
		var item = this.targets.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			if(this.entity == item1.entity) {
				continue;
			}
			var e = item1.data;
			var a_x = pos.x;
			var a_y = pos.y;
			var a_w = size.w;
			var a_h = size.h;
			var b_x = e.pos.x;
			var b_y = e.pos.y;
			var b_w = e.size.w;
			var b_h = e.size.h;
			if(!(!(a_y + a_h < b_y || a_y > b_y + b_h || a_x + a_w < b_x || a_x > b_x + b_w))) {
				continue;
			}
			if(arrow.player == item1.entity) {
				ofPlayer = arrow.player;
				continue;
			}
			if(e.life.alive) {
				if(item1.entity.existsType(game_AI)) {
					var dmg = 5;
					var _g = arrow.type;
					switch(_g) {
					case 0:
						break;
					case 1:
						var this1 = item1.entity.map;
						var key = Type.getClassName(game_AI);
						var _this = this1;
						(__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]).frozen = 240;
						break;
					case 2:
						var this2 = item1.entity.map;
						var key1 = Type.getClassName(game_AI);
						var _this1 = this2;
						(__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]).shocked = 120;
						dmg += 5;
						var this3 = item1.entity.map;
						var key2 = Type.getClassName(game_AI);
						var _this2 = this3;
						(__map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2]).shockedAnim = true;
						break;
					case 3:
						var this4 = item1.entity.map;
						var key3 = Type.getClassName(game_AI);
						var _this3 = this4;
						(__map_reserved[key3] != null ? _this3.getReserved(key3) : _this3.h[key3]).blown = true;
						dmg += 10;
						break;
					}
					var _this4 = e.life;
					if(_this4.damageSkip == 0) {
						_this4.hp -= dmg;
						if(_this4.hp <= 0) {
							_this4.alive = false;
						} else {
							_this4.damageSkip = 60;
						}
					}
					this.entity.destroy();
					return true;
				} else if(item1.entity.existsType(game_Player)) {
					var _this5 = e.life;
					if(_this5.damageSkip == 0) {
						_this5.hp -= 5;
						if(_this5.hp <= 0) {
							_this5.alive = false;
						} else {
							_this5.damageSkip = 60;
						}
					}
					this.entity.destroy();
					return true;
				}
			}
		}
		arrow.player = ofPlayer;
		return false;
	}
	,__process__: null
	,__class__: game_systems_UpdateArrowCollision
};
var game_systems_UpdateArrows = function() {
	this.__process__ = new game_systems_UpdateArrows_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateArrows"] = game_systems_UpdateArrows;
game_systems_UpdateArrows.__name__ = ["game","systems","UpdateArrows"];
game_systems_UpdateArrows.__interfaces__ = [edge_ISystem];
game_systems_UpdateArrows.prototype = {
	targets: null
	,update: function(arrow,coll,pos,speed,gr) {
		if(pos.fixed) {
			return true;
		}
		if(coll.state) {
			pos.fixed = true;
			arrow.ang = Math.atan2(arrow.lastSpeedY,arrow.lastSpeedX);
			if(arrow.lastSpeedX > 0) {
				pos.x++;
			}
			if(arrow.lastSpeedY < 0) {
				pos.y--;
			}
		} else {
			arrow.lastSpeedX = speed.x;
			arrow.lastSpeedY = speed.y;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateArrows
};
var game_systems_RenderArrows = function() {
	this.tempMatrix = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
	this.arrowLen = kha_Assets.images.arrows.get_width() - 1;
	this.__process__ = new game_systems_RenderArrows_$SystemProcess(this);
};
$hxClasses["game.systems.RenderArrows"] = game_systems_RenderArrows;
game_systems_RenderArrows.__name__ = ["game","systems","RenderArrows"];
game_systems_RenderArrows.__interfaces__ = [edge_ISystem];
game_systems_RenderArrows.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,get_camera: function() {
		return game_Game.lvl.camera;
	}
	,arrowLen: null
	,before: function() {
		this.get_g().set_color(-1);
	}
	,update: function(arrow,pos,size,speed) {
		if(!arrow.visible) {
			return true;
		}
		var x = pos.x + this.get_camera().x;
		var y = pos.y + this.get_camera().y;
		var sx = arrow.lastSpeedX;
		var sy = arrow.lastSpeedY;
		if(!pos.fixed) {
			arrow.ang = Math.atan2(sy,sx);
		}
		var length = Math.sqrt(sx * sx + sy * sy);
		var sx1 = sx / length * this.arrowLen;
		var sy1 = sy / length * this.arrowLen;
		this.drawArrow(arrow,x - sx1,y - sy1);
		return true;
	}
	,tempMatrix: null
	,drawArrow: function(arrow,x,y) {
		var _this = this.tempMatrix;
		var _this1 = this.get_g();
		var m = _this1.transformations[_this1.transformations.length - 1];
		_this._00 = m._00;
		_this._10 = m._10;
		_this._20 = m._20;
		_this._01 = m._01;
		_this._11 = m._11;
		_this._21 = m._21;
		_this._02 = m._02;
		_this._12 = m._12;
		_this._22 = m._22;
		var _this2 = this.get_g();
		var _this3 = this.get_g();
		var _this4 = _this3.transformations[_this3.transformations.length - 1];
		var angle = arrow.ang;
		var centery = y + 1.5;
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = x;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centery;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle);
		var m__10 = -Math.sin(angle);
		var m__20 = 0;
		var m__01 = Math.sin(angle);
		var m__11 = Math.cos(angle);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -x;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var m__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var m__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var m__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var m__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var m__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var m__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var m__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var m__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var m__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var transformation = new kha_math_FastMatrix3(_this4._00 * m__002 + _this4._10 * m__012 + _this4._20 * m__022,_this4._00 * m__102 + _this4._10 * m__112 + _this4._20 * m__122,_this4._00 * m__202 + _this4._10 * m__212 + _this4._20 * m__222,_this4._01 * m__002 + _this4._11 * m__012 + _this4._21 * m__022,_this4._01 * m__102 + _this4._11 * m__112 + _this4._21 * m__122,_this4._01 * m__202 + _this4._11 * m__212 + _this4._21 * m__222,_this4._02 * m__002 + _this4._12 * m__012 + _this4._22 * m__022,_this4._02 * m__102 + _this4._12 * m__112 + _this4._22 * m__122,_this4._02 * m__202 + _this4._12 * m__212 + _this4._22 * m__222);
		_this2.setTransformation(transformation);
		var _this5 = _this2.transformations[_this2.transformations.length - 1];
		_this5._00 = transformation._00;
		_this5._10 = transformation._10;
		_this5._20 = transformation._20;
		_this5._01 = transformation._01;
		_this5._11 = transformation._11;
		_this5._21 = transformation._21;
		_this5._02 = transformation._02;
		_this5._12 = transformation._12;
		_this5._22 = transformation._22;
		var img = kha_Assets.images.arrows;
		this.get_g().drawSubImage(img,x,y,0,arrow.type * 3,img.get_width(),3);
		var _this6 = this.get_g();
		var transformation1 = this.tempMatrix;
		_this6.setTransformation(transformation1);
		var _this7 = _this6.transformations[_this6.transformations.length - 1];
		_this7._00 = transformation1._00;
		_this7._10 = transformation1._10;
		_this7._20 = transformation1._20;
		_this7._01 = transformation1._01;
		_this7._11 = transformation1._11;
		_this7._21 = transformation1._21;
		_this7._02 = transformation1._02;
		_this7._12 = transformation1._12;
		_this7._22 = transformation1._22;
	}
	,__process__: null
	,__class__: game_systems_RenderArrows
};
var game_systems_UpdateGravitation = function() {
	this.__process__ = new game_systems_UpdateGravitation_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateGravitation"] = game_systems_UpdateGravitation;
game_systems_UpdateGravitation.__name__ = ["game","systems","UpdateGravitation"];
game_systems_UpdateGravitation.__interfaces__ = [edge_ISystem];
game_systems_UpdateGravitation.prototype = {
	update: function(pos,speed,gr) {
		if(pos.fixed) {
			return true;
		}
		speed.x += gr.x;
		speed.y += gr.y;
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateGravitation
};
var game_systems_UpdateTileCollision = function() {
	this.__process__ = new game_systems_UpdateTileCollision_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateTileCollision"] = game_systems_UpdateTileCollision;
game_systems_UpdateTileCollision.__name__ = ["game","systems","UpdateTileCollision"];
game_systems_UpdateTileCollision.__interfaces__ = [edge_ISystem];
game_systems_UpdateTileCollision.prototype = {
	get_tileSize: function() {
		return game_Game.lvl.tileset.tileSize;
	}
	,get_lvl: function() {
		return game_Game.lvl;
	}
	,update: function(coll,pos,size,speed,gr) {
		if(pos.fixed) {
			return true;
		}
		coll.state = false;
		coll.left = false;
		coll.right = false;
		coll.up = false;
		coll.down = false;
		var sx = Math.abs(speed.x);
		var sy = Math.abs(speed.y);
		var vx = sx / speed.x;
		var vy = sy / speed.y;
		var min = this.get_tileSize() / 4;
		while(sx > min || sy > min) {
			if(sx > min) {
				pos.x += min * vx;
				sx -= min;
				this.collision(coll,pos,size,speed,0);
				if(coll.state) {
					sx = 0;
				}
			}
			if(sy > min) {
				pos.y += min * vy;
				sy -= min;
				this.collision(coll,pos,size,speed,1);
				if(coll.state) {
					sy = 0;
				}
			}
		}
		if(sx > 0) {
			pos.x += sx * vx;
			this.collision(coll,pos,size,speed,0);
		}
		if(sy > 0) {
			pos.y += sy * vy;
			this.collision(coll,pos,size,speed,1);
		}
		pos.x -= speed.x;
		pos.y -= speed.y;
		return true;
	}
	,collision: function(coll,pos,size,speed,dir) {
		var rect_x = pos.x;
		var rect_y = pos.y;
		var rect_w = size.w;
		var rect_h = size.h;
		var x = rect_x / this.get_tileSize() | 0;
		var y = rect_y / this.get_tileSize() | 0;
		var maxX = Math.ceil((rect_x + rect_w) / this.get_tileSize());
		var maxY = Math.ceil((rect_y + rect_h) / this.get_tileSize());
		var _g1 = y;
		var _g = maxY;
		while(_g1 < _g) {
			var iy = _g1++;
			var _g3 = x;
			var _g2 = maxX;
			while(_g3 < _g2) {
				var ix = _g3++;
				var props = this.get_lvl().getTile(1,ix,iy).props;
				if(props.collide) {
					var slope = props.type;
					switch(slope) {
					case 0:
						if(dir == 0) {
							if(speed.x < 0) {
								coll.state = true;
								coll.left = true;
								pos.x = ix * this.get_tileSize() + this.get_tileSize();
								speed.x = 0;
							} else if(speed.x > 0) {
								coll.state = true;
								coll.right = true;
								pos.x = ix * this.get_tileSize() - size.w;
								speed.x = 0;
							}
						} else if(dir == 1) {
							if(speed.y > 0) {
								coll.state = true;
								coll.down = true;
								pos.y = iy * this.get_tileSize() - size.h;
								speed.y = 0;
							} else if(speed.y < 0) {
								coll.state = true;
								coll.up = true;
								pos.y = iy * this.get_tileSize() + this.get_tileSize();
								speed.y = 0;
							}
						}
						break;
					case 1:
						if(pos.y + size.h > iy * this.get_tileSize() + this.get_tileSize() / 2) {
							if(dir == 0) {
								if(speed.x < 0) {
									coll.state = true;
									coll.left = true;
									pos.x = ix * this.get_tileSize() + this.get_tileSize();
									speed.x = 0;
								} else if(speed.x > 0) {
									coll.state = true;
									coll.right = true;
									pos.x = ix * this.get_tileSize() - size.w;
									speed.x = 0;
								}
							} else if(dir == 1) {
								if(speed.y > 0) {
									coll.state = true;
									coll.down = true;
									pos.y = iy * this.get_tileSize() + this.get_tileSize() / 2 - size.h;
									speed.y = 0;
								} else if(speed.y < 0) {
									coll.state = true;
									coll.up = true;
									pos.y = iy * this.get_tileSize() + this.get_tileSize();
									speed.y = 0;
								}
							}
						}
						break;
					case 2:
						if(pos.y < iy * this.get_tileSize() + this.get_tileSize() / 2) {
							if(dir == 0) {
								if(speed.x < 0) {
									coll.state = true;
									coll.left = true;
									pos.x = ix * this.get_tileSize() + this.get_tileSize();
									speed.x = 0;
								} else if(speed.x > 0) {
									coll.state = true;
									coll.right = true;
									pos.x = ix * this.get_tileSize() - size.w;
									speed.x = 0;
								}
							} else if(dir == 1) {
								if(speed.y > 0) {
									coll.state = true;
									coll.down = true;
									pos.y = iy * this.get_tileSize() - size.h;
									speed.y = 0;
								} else if(speed.y < 0) {
									coll.state = true;
									coll.up = true;
									pos.y = iy * this.get_tileSize() + this.get_tileSize() / 2;
									speed.y = 0;
								}
							}
						}
						break;
					case 3:
						if(pos.x < ix * this.get_tileSize() + this.get_tileSize() / 2) {
							if(dir == 0) {
								if(speed.x < 0) {
									coll.state = true;
									coll.left = true;
									pos.x = ix * this.get_tileSize() + this.get_tileSize() / 2;
									speed.x = 0;
								} else if(speed.x > 0) {
									coll.state = true;
									coll.right = true;
									pos.x = ix * this.get_tileSize() - size.w;
									speed.x = 0;
								}
							} else if(dir == 1) {
								if(speed.y > 0) {
									coll.state = true;
									coll.down = true;
									pos.y = iy * this.get_tileSize() - size.h;
									speed.y = 0;
								} else if(speed.y < 0) {
									coll.state = true;
									coll.up = true;
									pos.y = iy * this.get_tileSize() + this.get_tileSize();
									speed.y = 0;
								}
							}
						}
						break;
					case 4:
						if(pos.x + size.w > ix * this.get_tileSize() + this.get_tileSize() / 2) {
							if(dir == 0) {
								if(speed.x < 0) {
									coll.state = true;
									coll.left = true;
									pos.x = ix * this.get_tileSize() + this.get_tileSize();
									speed.x = 0;
								} else if(speed.x > 0) {
									coll.state = true;
									coll.right = true;
									pos.x = ix * this.get_tileSize() + this.get_tileSize() / 2 - size.w;
									speed.x = 0;
								}
							} else if(dir == 1) {
								if(speed.y > 0) {
									coll.state = true;
									coll.down = true;
									pos.y = iy * this.get_tileSize() - size.h;
									speed.y = 0;
								} else if(speed.y < 0) {
									coll.state = true;
									coll.up = true;
									pos.y = iy * this.get_tileSize() + this.get_tileSize();
									speed.y = 0;
								}
							}
						}
						break;
					case 5:
						break;
					case 6:
						break;
					case 7:
						break;
					case 8:
						break;
					case 9:
						if(pos.x < ix * this.get_tileSize() + this.get_tileSize() / 2) {
							if(pos.y + size.h > iy * this.get_tileSize() + this.get_tileSize() / 2) {
								if(dir == 0) {
									if(speed.x < 0) {
										coll.state = true;
										coll.left = true;
										pos.x = ix * this.get_tileSize() + this.get_tileSize() / 2;
										speed.x = 0;
									} else if(speed.x > 0) {
										coll.state = true;
										coll.right = true;
										pos.x = ix * this.get_tileSize() - size.w;
										speed.x = 0;
									}
								} else if(dir == 1) {
									if(speed.y > 0) {
										coll.state = true;
										coll.down = true;
										pos.y = iy * this.get_tileSize() + this.get_tileSize() / 2 - size.h;
										speed.y = 0;
									} else if(speed.y < 0) {
										coll.state = true;
										coll.up = true;
										pos.y = iy * this.get_tileSize() + this.get_tileSize();
										speed.y = 0;
									}
								}
							}
						}
						break;
					case 10:
						if(pos.x + size.w > ix * this.get_tileSize() + this.get_tileSize() / 2) {
							if(pos.y + size.h > iy * this.get_tileSize() + this.get_tileSize() / 2) {
								if(dir == 0) {
									if(speed.x < 0) {
										coll.state = true;
										coll.left = true;
										pos.x = ix * this.get_tileSize() + this.get_tileSize();
										speed.x = 0;
									} else if(speed.x > 0) {
										coll.state = true;
										coll.right = true;
										pos.x = ix * this.get_tileSize() + this.get_tileSize() / 2 - size.w;
										speed.x = 0;
									}
								} else if(dir == 1) {
									if(speed.y > 0) {
										coll.state = true;
										coll.down = true;
										pos.y = iy * this.get_tileSize() + this.get_tileSize() / 2 - size.h;
										speed.y = 0;
									} else if(speed.y < 0) {
										coll.state = true;
										coll.up = true;
										pos.y = iy * this.get_tileSize() + this.get_tileSize();
										speed.y = 0;
									}
								}
							}
						}
						break;
					case 11:
						if(pos.x < ix * this.get_tileSize() + this.get_tileSize() / 2) {
							if(pos.y < iy * this.get_tileSize() + this.get_tileSize() / 2) {
								if(dir == 0) {
									if(speed.x < 0) {
										coll.state = true;
										coll.left = true;
										pos.x = ix * this.get_tileSize() + this.get_tileSize() / 2;
										speed.x = 0;
									} else if(speed.x > 0) {
										coll.state = true;
										coll.right = true;
										pos.x = ix * this.get_tileSize() - size.w;
										speed.x = 0;
									}
								} else if(dir == 1) {
									if(speed.y > 0) {
										coll.state = true;
										coll.down = true;
										pos.y = iy * this.get_tileSize() - size.h;
										speed.y = 0;
									} else if(speed.y < 0) {
										coll.state = true;
										coll.up = true;
										pos.y = iy * this.get_tileSize() + this.get_tileSize() / 2;
										speed.y = 0;
									}
								}
							}
						}
						break;
					case 12:
						if(pos.x + size.w > ix * this.get_tileSize() + this.get_tileSize() / 2) {
							if(pos.y < iy * this.get_tileSize() + this.get_tileSize() / 2) {
								if(dir == 0) {
									if(speed.x < 0) {
										coll.state = true;
										coll.left = true;
										pos.x = ix * this.get_tileSize() + this.get_tileSize();
										speed.x = 0;
									} else if(speed.x > 0) {
										coll.state = true;
										coll.right = true;
										pos.x = ix * this.get_tileSize() + this.get_tileSize() / 2 - size.w;
										speed.x = 0;
									}
								} else if(dir == 1) {
									if(speed.y > 0) {
										coll.state = true;
										coll.down = true;
										pos.y = iy * this.get_tileSize() - size.h;
										speed.y = 0;
									} else if(speed.y < 0) {
										coll.state = true;
										coll.up = true;
										pos.y = iy * this.get_tileSize() + this.get_tileSize() / 2;
										speed.y = 0;
									}
								}
							}
						}
						break;
					default:
						haxe_Log.trace(slope,{ fileName : "game/systems/BasicSystems.hx", lineNumber : 111, className : "game.systems.UpdateTileCollision", methodName : "block"});
					}
				}
			}
		}
	}
	,__process__: null
	,__class__: game_systems_UpdateTileCollision
};
var game_systems_UpdatePosition = function() {
	this.maxSpeed = game_Game.lvl.tileset.tileSize;
	this.__process__ = new game_systems_UpdatePosition_$SystemProcess(this);
};
$hxClasses["game.systems.UpdatePosition"] = game_systems_UpdatePosition;
game_systems_UpdatePosition.__name__ = ["game","systems","UpdatePosition"];
game_systems_UpdatePosition.__interfaces__ = [edge_ISystem];
game_systems_UpdatePosition.prototype = {
	maxSpeed: null
	,update: function(pos,speed) {
		if(pos.fixed) {
			return true;
		}
		if(speed.x > this.maxSpeed) {
			speed.x = this.maxSpeed;
		}
		if(speed.x < -this.maxSpeed) {
			speed.x = -this.maxSpeed;
		}
		if(speed.y > this.maxSpeed) {
			speed.y = this.maxSpeed;
		}
		if(speed.y < -this.maxSpeed) {
			speed.y = -this.maxSpeed;
		}
		pos.x += speed.x;
		pos.y += speed.y;
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdatePosition
};
var game_systems_UpdateCamera = function() {
	this.__process__ = new game_systems_UpdateCamera_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateCamera"] = game_systems_UpdateCamera;
game_systems_UpdateCamera.__name__ = ["game","systems","UpdateCamera"];
game_systems_UpdateCamera.__interfaces__ = [edge_ISystem];
game_systems_UpdateCamera.prototype = {
	update: function(camera,pos,size) {
		var rect = { x : pos.x, y : pos.y, w : size.w, h : size.h};
		game_Game.lvl.camera.center(rect);
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateCamera
};
var game_systems_RenderBG = function() {
	this.cloudsX = 0.0;
	this.__process__ = new game_systems_RenderBG_$SystemProcess(this);
};
$hxClasses["game.systems.RenderBG"] = game_systems_RenderBG;
game_systems_RenderBG.__name__ = ["game","systems","RenderBG"];
game_systems_RenderBG.__interfaces__ = [edge_ISystem];
game_systems_RenderBG.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,get_lvl: function() {
		return game_Game.lvl;
	}
	,get_camera: function() {
		return game_Game.lvl.camera;
	}
	,cloudsX: null
	,update: function() {
		var max = this.get_lvl().map.h * this.get_lvl().tileset.tileSize - khm_Screen.h;
		var offY = -max;
		if(max > 0) {
			var cy = -this.get_camera().y;
			var size = max / 5 | 0;
			offY = -Math.round(size * 1.5 - cy / max * size);
		}
		this.get_g().set_color(-6556948);
		this.get_g().fillRect(0,0,khm_Screen.w,khm_Screen.h - offY);
		this.get_g().set_color(-9717077);
		this.get_g().fillRect(0,khm_Screen.h - offY,khm_Screen.w,offY);
		this.get_g().set_color(-1);
		var sea = kha_Assets.images.bg_sea;
		var y = khm_Screen.h - sea.get_height() - offY;
		var x = -Math.round(this.cloudsX);
		var len = Math.ceil(khm_Screen.w / sea.get_width());
		var sx = -Math.ceil(x / sea.get_width());
		var ex = -Math.floor(x / sea.get_width());
		var _g1 = sx;
		var _g = len + ex;
		while(_g1 < _g) {
			var i = _g1++;
			this.get_g().drawImage(sea,x + i * sea.get_width(),y);
		}
		var sky = kha_Assets.images.bg_sky;
		y -= sky.get_height();
		var len1 = Math.ceil(khm_Screen.w / sky.get_width());
		var sx1 = -Math.ceil(0 / sky.get_width());
		var ex1 = -Math.floor(0 / sky.get_width());
		var _g11 = sx1;
		var _g2 = len1 + ex1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.get_g().drawImage(sky,i1 * sky.get_width(),y);
		}
		var clouds = kha_Assets.images.bg_clouds;
		var y1 = khm_Screen.h - sea.get_height() - clouds.get_height() - offY;
		var x1 = Math.round(this.cloudsX);
		var len2 = Math.ceil(khm_Screen.w / clouds.get_width());
		var sx2 = -Math.ceil(x1 / clouds.get_width());
		var ex2 = -Math.floor(x1 / clouds.get_width());
		var _g12 = sx2;
		var _g3 = len2 + ex2;
		while(_g12 < _g3) {
			var i2 = _g12++;
			this.get_g().drawImage(clouds,x1 + i2 * clouds.get_width(),y1);
		}
		this.cloudsX -= 0.1;
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderBG
};
var game_systems_RenderMapBG = function() {
	this.__process__ = new game_systems_RenderMapBG_$SystemProcess(this);
};
$hxClasses["game.systems.RenderMapBG"] = game_systems_RenderMapBG;
game_systems_RenderMapBG.__name__ = ["game","systems","RenderMapBG"];
game_systems_RenderMapBG.__interfaces__ = [edge_ISystem];
game_systems_RenderMapBG.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,update: function() {
		game_Game.lvl.drawLayer(this.get_g(),0);
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderMapBG
};
var game_systems_RenderMapTG = function() {
	this.__process__ = new game_systems_RenderMapTG_$SystemProcess(this);
};
$hxClasses["game.systems.RenderMapTG"] = game_systems_RenderMapTG;
game_systems_RenderMapTG.__name__ = ["game","systems","RenderMapTG"];
game_systems_RenderMapTG.__interfaces__ = [edge_ISystem];
game_systems_RenderMapTG.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,update: function() {
		game_Game.lvl.drawLayer(this.get_g(),1);
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderMapTG
};
var game_systems_RenderAnimations = function() {
	this.__process__ = new game_systems_RenderAnimations_$SystemProcess(this);
};
$hxClasses["game.systems.RenderAnimations"] = game_systems_RenderAnimations;
game_systems_RenderAnimations.__name__ = ["game","systems","RenderAnimations"];
game_systems_RenderAnimations.__interfaces__ = [edge_ISystem];
game_systems_RenderAnimations.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,get_camera: function() {
		return game_Game.lvl.camera;
	}
	,entity: null
	,update: function(anim,sprite,pos,size) {
		var x = sprite.frame % sprite.setW * sprite.w;
		var y = (sprite.frame / sprite.setW | 0) * sprite.h;
		var offx = size.w / 2 - sprite.w / 2;
		this.get_g().drawSubImage(sprite.img,Math.round(pos.x + this.get_camera().x + offx),Math.round(pos.y + this.get_camera().y) - (sprite.h - size.h),x,y,sprite.w,sprite.h);
		sprite.frameDelay++;
		if(sprite.frameDelay >= sprite.frameDelayMax) {
			sprite.frameTypeId++;
			var key = sprite.frameType;
			var _this = sprite.sets;
			var len = (__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]).length;
			if(sprite.frameTypeId == len) {
				sprite.frameTypeId = 0;
			}
			var key1 = sprite.frameType;
			var _this1 = sprite.sets;
			sprite.frame = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1])[sprite.frameTypeId];
			sprite.frameDelay = 0;
		}
		if(sprite.frame == 0 && sprite.frameDelay == 0) {
			anim.repeat--;
			if(anim.repeat == 0) {
				this.entity.destroy();
			}
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderAnimations
};
var game_systems_RenderGameEnd = function(game1) {
	this.animY = 500;
	this.game = game1;
	this.__process__ = new game_systems_RenderGameEnd_$SystemProcess(this);
};
$hxClasses["game.systems.RenderGameEnd"] = game_systems_RenderGameEnd;
game_systems_RenderGameEnd.__name__ = ["game","systems","RenderGameEnd"];
game_systems_RenderGameEnd.__interfaces__ = [edge_ISystem];
game_systems_RenderGameEnd.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,get_lvl: function() {
		return game_Game.lvl;
	}
	,get_camera: function() {
		return game_Game.lvl.camera;
	}
	,game: null
	,animY: null
	,update: function() {
		if(this.game.player != null) {
			var this1 = this.game.player.map;
			var key = Type.getClassName(game_Life);
			var _this = this1;
			if((__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]).alive) {
				return true;
			}
			this.get_g().set_color(1342177280);
			this.get_g().fillRect(0,0,khm_Screen.w,khm_Screen.h);
			this.get_g().set_color(-1);
			this.get_g().set_font(kha_Assets.fonts.OpenSans_Regular);
			this.get_g().set_fontSize(24);
			var s = "Press R to Restart";
			this.get_g().drawString(s,khm_Screen.w / 2 - this.get_g().get_font().width(this.get_g().get_fontSize(),s) / 2,khm_Screen.h / 2 - this.get_g().get_font().height(this.get_g().get_fontSize()) / 2);
			return true;
		}
		var nobody = true;
		var _g = 0;
		var _g1 = this.get_lvl().map.objects;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			var _g2 = o.type;
			if(_g2 == "player") {
				nobody = false;
				break;
			}
		}
		if(nobody) {
			return true;
		}
		this.get_camera().y++;
		if(this.animY > 0) {
			this.animY--;
		}
		if(this.animY < 200) {
			var color = -1;
			var f = 1 - this.animY / 200;
			color = (f * 255 | 0) << 24 | (((color & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((color & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((color & 255) * 0.00392156862745098 * 255 | 0);
			this.get_g().set_color(color);
			this.get_g().set_font(kha_Assets.fonts.OpenSans_Regular);
			this.get_g().set_fontSize(24);
			var s1 = "Game Over";
			this.get_g().drawString(s1,khm_Screen.w / 2 - this.get_g().get_font().width(this.get_g().get_fontSize(),s1) / 2,khm_Screen.h / 2 - this.get_g().get_font().height(this.get_g().get_fontSize()) / 2);
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderGameEnd
};
var game_systems_UpdateBodyPhysic = function() {
	this.__process__ = new game_systems_UpdateBodyPhysic_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateBodyPhysic"] = game_systems_UpdateBodyPhysic;
game_systems_UpdateBodyPhysic.__name__ = ["game","systems","UpdateBodyPhysic"];
game_systems_UpdateBodyPhysic.__interfaces__ = [edge_ISystem];
game_systems_UpdateBodyPhysic.prototype = {
	get_lvl: function() {
		return game_Game.lvl;
	}
	,get_tileSize: function() {
		return game_Game.lvl.tileset.tileSize;
	}
	,update: function(body,pos,size,speed,coll) {
		if(pos.x + speed.x < 0) {
			pos.x = 0;
			speed.x = 0;
		}
		if(pos.x + size.w + speed.x > this.get_lvl().map.w * this.get_tileSize()) {
			pos.x = this.get_lvl().map.w * this.get_tileSize() - size.w;
			speed.x = 0;
		}
		if(coll.down) {
			if(speed.x >= body.friction) {
				speed.x -= body.friction;
			}
			if(speed.x <= -body.friction) {
				speed.x += body.friction;
			}
			if(Math.abs(speed.x) < body.friction) {
				speed.x = 0;
			}
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateBodyPhysic
};
var game_systems_UpdateBodyCollision = function(game1) {
	this.game = game1;
	this.__process__ = new game_systems_UpdateBodyCollision_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateBodyCollision"] = game_systems_UpdateBodyCollision;
game_systems_UpdateBodyCollision.__name__ = ["game","systems","UpdateBodyCollision"];
game_systems_UpdateBodyCollision.__interfaces__ = [edge_ISystem];
game_systems_UpdateBodyCollision.prototype = {
	get_lvl: function() {
		return game_Game.lvl;
	}
	,get_tileSize: function() {
		return game_Game.lvl.tileset.tileSize;
	}
	,targets: null
	,entity: null
	,game: null
	,update: function(body,coll,pos,size,speed,life) {
		if(pos.fixed) {
			return true;
		}
		if(pos.y + size.h > this.get_lvl().map.h * this.get_tileSize()) {
			life.alive = false;
		}
		if(life.damageSkip != 0) {
			life.damageSkip--;
		}
		if(!life.alive) {
			if(this.entity.existsType(game_AI)) {
				var tmp = this.entity;
				var this1 = this.entity.map;
				var key = Type.getClassName(game_AI);
				var _this = this1;
				tmp.remove(__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]);
				var _g1 = 0;
				var _g = 1 + Std.random(3);
				while(_g1 < _g) {
					var i = _g1++;
					this.game.engine.create([new game_Coin(),new game_Body(),new game_Collision(),new game_Sprite(kha_Assets.images.coins,15,15),new game_Position(pos.x,pos.y),new game_Size(15,15),new game_Speed(1 - Math.random() * 2,Math.random() * -3),new game_Gravity(0,0.1),new game_Life(true)]);
				}
				if(Std.random(5) == 0) {
					this.game.engine.create([new game_Hp(),new game_Body(),new game_Collision(),new game_Sprite(kha_Assets.images.lifes,14,12),new game_Position(pos.x,pos.y),new game_Size(14,12),new game_Speed(1 - Math.random() * 2,Math.random() * -3),new game_Gravity(0,0.1),new game_Life(true)]);
				}
			}
			return true;
		}
		var item = this.targets.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			if(this.entity == item1.entity) {
				continue;
			}
			var e = item1.data;
			var a_x = pos.x;
			var a_y = pos.y;
			var a_w = size.w;
			var a_h = size.h;
			var b_x = e.pos.x;
			var b_y = e.pos.y;
			var b_w = e.size.w;
			var b_h = e.size.h;
			if(!(!(a_y + a_h < b_y || a_y > b_y + b_h || a_x + a_w < b_x || a_x > b_x + b_w))) {
				continue;
			}
			if(this.entity.existsType(game_Player) && item1.entity.existsType(game_AI)) {
				if(life.damageSkip == 0) {
					life.hp -= 5;
					if(life.hp <= 0) {
						life.alive = false;
					} else {
						life.damageSkip = 60;
					}
				}
			}
			if(this.entity.existsType(game_AI) && item1.entity.existsType(game_Player)) {
				var this2 = this.entity.map;
				var key1 = Type.getClassName(game_Control);
				var _this1 = this2;
				var keys = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]).keys;
				keys.h[32] = true;
			}
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateBodyCollision
};
var game_systems_RenderBodies = function(game1) {
	this.tempMatrix = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
	this.game = game1;
	this.__process__ = new game_systems_RenderBodies_$SystemProcess(this);
};
$hxClasses["game.systems.RenderBodies"] = game_systems_RenderBodies;
game_systems_RenderBodies.__name__ = ["game","systems","RenderBodies"];
game_systems_RenderBodies.__interfaces__ = [edge_ISystem];
game_systems_RenderBodies.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,get_camera: function() {
		return game_Game.lvl.camera;
	}
	,entity: null
	,game: null
	,tempMatrix: null
	,update: function(sprite,body,pos,size,life) {
		if(!life.alive) {
			var tmp;
			if(sprite.frameType == "death") {
				var _this = sprite.sets;
				tmp = sprite.frameTypeId != (__map_reserved["death"] != null ? _this.getReserved("death") : _this.h["death"]).length - 1;
			} else {
				tmp = true;
			}
			if(tmp) {
				if(sprite.frameType != "death") {
					sprite.frameType = "death";
					sprite.frameTypeId = 0;
					var _this1 = sprite.sets;
					sprite.frame = (__map_reserved["death"] != null ? _this1.getReserved("death") : _this1.h["death"])[0];
					sprite.frameDelay = 0;
				}
				sprite.frameDelay++;
				if(sprite.frameDelay >= sprite.frameDelayMax) {
					sprite.frameTypeId++;
					var key = sprite.frameType;
					var _this2 = sprite.sets;
					var len = (__map_reserved[key] != null ? _this2.getReserved(key) : _this2.h[key]).length;
					if(sprite.frameTypeId == len) {
						sprite.frameTypeId = 0;
					}
					var key1 = sprite.frameType;
					var _this3 = sprite.sets;
					sprite.frame = (__map_reserved[key1] != null ? _this3.getReserved(key1) : _this3.h[key1])[sprite.frameTypeId];
					sprite.frameDelay = 0;
				}
			}
		}
		this.get_g().set_color(-1);
		if(this.entity.existsType(game_AI)) {
			var this1 = this.entity.map;
			var key2 = Type.getClassName(game_AI);
			var _this4 = this1;
			var ai = __map_reserved[key2] != null ? _this4.getReserved(key2) : _this4.h[key2];
			if(ai.frozen > 0) {
				this.get_g().set_color(-7798785);
				if(ai.frozen < 136) {
					var color = this.get_g().get_color();
					var f = (255 - ai.frozen) / 255;
					color = ((color >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (f * 255 | 0) << 16 | (((color & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((color & 255) * 0.00392156862745098 * 255 | 0);
					this.get_g().set_color(color);
				}
			}
			if(ai.shockedAnim) {
				var _g = 0;
				while(_g < 3) {
					var i = _g++;
					var w = 13;
					var h = 13;
					this.game.engine.create([new game_Anim(3),new game_Sprite(kha_Assets.images.electric_sparks2,w,h,3),new game_Position(pos.x + Math.random() * (size.w - w),pos.y + Math.random() * (size.h - h)),new game_Size(w,h)]);
				}
				ai.shockedAnim = false;
			}
			if(ai.blown) {
				var w1 = 18;
				var h1 = 18;
				this.game.engine.create([new game_Anim(),new game_Sprite(kha_Assets.images.explosion,w1,h1),new game_Position(pos.x + size.w / 2 - w1 / 2,pos.y + size.h / 2 - h1 / 2),new game_Size(w1,h1)]);
				ai.blown = false;
			}
		}
		var x = sprite.frame % sprite.setW * sprite.w;
		var y = (sprite.frame / sprite.setW | 0) * sprite.h;
		var offx = size.w / 2 - sprite.w / 2;
		if(sprite.dir == 0) {
			var _this5 = this.tempMatrix;
			var _this6 = this.get_g();
			var m = _this6.transformations[_this6.transformations.length - 1];
			_this5._00 = m._00;
			_this5._10 = m._10;
			_this5._20 = m._20;
			_this5._01 = m._01;
			_this5._11 = m._11;
			_this5._21 = m._21;
			_this5._02 = m._02;
			_this5._12 = m._12;
			_this5._22 = m._22;
			var _this7 = this.get_g();
			var _this8 = this.get_g();
			var _this9 = _this8.transformations[_this8.transformations.length - 1];
			var m__00 = -1;
			var m__10 = 0;
			var m__20 = Math.round(pos.x + this.get_camera().x + offx) * 2 + sprite.w;
			var m__01 = 0;
			var m__11 = 1;
			var m__21 = 0;
			var m__02 = 0;
			var m__12 = 0;
			var m__22 = 1;
			var transformation = new kha_math_FastMatrix3(_this9._00 * m__00 + _this9._10 * m__01 + _this9._20 * m__02,_this9._00 * m__10 + _this9._10 * m__11 + _this9._20 * m__12,_this9._00 * m__20 + _this9._10 * m__21 + _this9._20 * m__22,_this9._01 * m__00 + _this9._11 * m__01 + _this9._21 * m__02,_this9._01 * m__10 + _this9._11 * m__11 + _this9._21 * m__12,_this9._01 * m__20 + _this9._11 * m__21 + _this9._21 * m__22,_this9._02 * m__00 + _this9._12 * m__01 + _this9._22 * m__02,_this9._02 * m__10 + _this9._12 * m__11 + _this9._22 * m__12,_this9._02 * m__20 + _this9._12 * m__21 + _this9._22 * m__22);
			_this7.setTransformation(transformation);
			var _this10 = _this7.transformations[_this7.transformations.length - 1];
			_this10._00 = transformation._00;
			_this10._10 = transformation._10;
			_this10._20 = transformation._20;
			_this10._01 = transformation._01;
			_this10._11 = transformation._11;
			_this10._21 = transformation._21;
			_this10._02 = transformation._02;
			_this10._12 = transformation._12;
			_this10._22 = transformation._22;
		}
		if(life.damageSkip % 16 > 8) {
			this.get_g().set_opacity(0.5);
		}
		this.get_g().drawSubImage(sprite.img,Math.round(pos.x + this.get_camera().x + offx),Math.round(pos.y + this.get_camera().y) - (sprite.h - size.h),x,y,sprite.w,sprite.h);
		if(life.damageSkip % 16 > 8) {
			this.get_g().set_opacity(1);
		}
		if(sprite.dir == 0) {
			var _this11 = this.get_g();
			var transformation1 = this.tempMatrix;
			_this11.setTransformation(transformation1);
			var _this12 = _this11.transformations[_this11.transformations.length - 1];
			_this12._00 = transformation1._00;
			_this12._10 = transformation1._10;
			_this12._20 = transformation1._20;
			_this12._01 = transformation1._01;
			_this12._11 = transformation1._11;
			_this12._21 = transformation1._21;
			_this12._02 = transformation1._02;
			_this12._12 = transformation1._12;
			_this12._22 = transformation1._22;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderBodies
};
var game_systems_UpdateChests = function(game1) {
	this.game = game1;
	this.__process__ = new game_systems_UpdateChests_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateChests"] = game_systems_UpdateChests;
game_systems_UpdateChests.__name__ = ["game","systems","UpdateChests"];
game_systems_UpdateChests.__interfaces__ = [edge_ISystem];
game_systems_UpdateChests.prototype = {
	targets: null
	,entity: null
	,game: null
	,update: function(chest,sprite,pos,size) {
		if(chest.state == 4) {
			return true;
		}
		if(chest.state == 2) {
			sprite.frameDelay++;
			if(sprite.frameDelay >= sprite.frameDelayMax) {
				sprite.frameTypeId++;
				var key = sprite.frameType;
				var _this = sprite.sets;
				var len = (__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]).length;
				if(sprite.frameTypeId == len) {
					sprite.frameTypeId = 0;
				}
				var key1 = sprite.frameType;
				var _this1 = sprite.sets;
				sprite.frame = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1])[sprite.frameTypeId];
				sprite.frameDelay = 0;
			}
			var key2 = sprite.frameType;
			var _this2 = sprite.sets;
			if(sprite.frameTypeId == (__map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2]).length - 1) {
				chest.state = 3;
				if(chest.player != null) {
					var _g = chest.reward;
					switch(_g) {
					case 0:
						var this1 = chest.player.map;
						var key3 = Type.getClassName(game_Life);
						var _this3 = this1;
						(__map_reserved[key3] != null ? _this3.getReserved(key3) : _this3.h[key3]).hp += 10;
						var this2 = chest.player.map;
						var key4 = Type.getClassName(game_Life);
						var _this4 = this2;
						(__map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4]).maxHp += 10;
						break;
					case 1:
						var this3 = chest.player.map;
						var key5 = Type.getClassName(game_Bow);
						var _this5 = this3;
						(__map_reserved[key5] != null ? _this5.getReserved(key5) : _this5.h[key5]).aimLine += 5;
						break;
					case 2:
						var this4 = chest.player.map;
						var key6 = Type.getClassName(game_Player);
						var _this6 = this4;
						var tmp = __map_reserved[key6] != null ? _this6.getReserved(key6) : _this6.h[key6];
						tmp.maxJump++;
						break;
					case 3:
						var this5 = chest.player.map;
						var key7 = Type.getClassName(game_Player);
						var _this7 = this5;
						(__map_reserved[key7] != null ? _this7.getReserved(key7) : _this7.h[key7]).arrowType = 1;
						break;
					case 4:
						var this6 = chest.player.map;
						var key8 = Type.getClassName(game_Player);
						var _this8 = this6;
						(__map_reserved[key8] != null ? _this8.getReserved(key8) : _this8.h[key8]).arrowType = 2;
						break;
					case 5:
						var this7 = chest.player.map;
						var key9 = Type.getClassName(game_Player);
						var _this9 = this7;
						(__map_reserved[key9] != null ? _this9.getReserved(key9) : _this9.h[key9]).arrowType = 3;
						break;
					case 6:
						this.game.gameComplete();
						break;
					}
				}
			}
			return true;
		}
		if(chest.state == 3) {
			if(chest.animY < chest.maxAnimY) {
				chest.animY++;
			} else {
				chest.state = 4;
			}
			return true;
		}
		var item = this.targets.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			var e = item1.data;
			var a_x = pos.x;
			var a_y = pos.y;
			var a_w = size.w;
			var a_h = size.h;
			var b_x = e.pos.x;
			var b_y = e.pos.y;
			var b_w = e.size.w;
			var b_h = e.size.h;
			if(!(!(a_y + a_h < b_y || a_y > b_y + b_h || a_x + a_w < b_x || a_x > b_x + b_w))) {
				continue;
			}
			chest.player = item1.entity;
			chest.state = 2;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateChests
};
var game_systems_RenderChests = function() {
	this.__process__ = new game_systems_RenderChests_$SystemProcess(this);
};
$hxClasses["game.systems.RenderChests"] = game_systems_RenderChests;
game_systems_RenderChests.__name__ = ["game","systems","RenderChests"];
game_systems_RenderChests.__interfaces__ = [edge_ISystem];
game_systems_RenderChests.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,get_camera: function() {
		return game_Game.lvl.camera;
	}
	,update: function(chest,sprite,pos,size) {
		var x = sprite.frame % sprite.setW * sprite.w;
		var y = (sprite.frame / sprite.setW | 0) * sprite.h;
		this.get_g().drawSubImage(sprite.img,Math.round(pos.x + this.get_camera().x),Math.round(pos.y + this.get_camera().y),x,y,sprite.w,sprite.h);
		if(chest.state == 3) {
			this.get_g().set_opacity(3 - chest.animY / chest.maxAnimY * 3);
			this.get_g().drawSubImage(kha_Assets.images.store_items,Math.round(pos.x + size.w / 2 - 9.5 + this.get_camera().x),Math.round(pos.y - chest.animY + this.get_camera().y),chest.reward * 19,0,19,19);
			this.get_g().set_opacity(1);
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderChests
};
var game_systems_UpdateCoinCollision = function() {
	this.__process__ = new game_systems_UpdateCoinCollision_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateCoinCollision"] = game_systems_UpdateCoinCollision;
game_systems_UpdateCoinCollision.__name__ = ["game","systems","UpdateCoinCollision"];
game_systems_UpdateCoinCollision.__interfaces__ = [edge_ISystem];
game_systems_UpdateCoinCollision.prototype = {
	targets: null
	,entity: null
	,update: function(coin,pos,size,speed,life) {
		if(!life.alive) {
			this.entity.destroy();
			return true;
		}
		var item = this.targets.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			if(this.entity == item1.entity) {
				continue;
			}
			var e = item1.data;
			var a_x = pos.x;
			var a_y = pos.y;
			var a_w = size.w;
			var a_h = size.h;
			var b_x = e.pos.x;
			var b_y = e.pos.y;
			var b_w = e.size.w;
			var b_h = e.size.h;
			if(!(!(a_y + a_h < b_y || a_y > b_y + b_h || a_x + a_w < b_x || a_x > b_x + b_w))) {
				continue;
			}
			if(e.life.alive) {
				e.player.money++;
				this.entity.destroy();
			}
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateCoinCollision
};
var game_systems_UpdateHpCollision = function() {
	this.__process__ = new game_systems_UpdateHpCollision_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateHpCollision"] = game_systems_UpdateHpCollision;
game_systems_UpdateHpCollision.__name__ = ["game","systems","UpdateHpCollision"];
game_systems_UpdateHpCollision.__interfaces__ = [edge_ISystem];
game_systems_UpdateHpCollision.prototype = {
	targets: null
	,entity: null
	,update: function(hp,pos,size,speed,life) {
		if(!life.alive) {
			this.entity.destroy();
			return true;
		}
		var item = this.targets.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			if(this.entity == item1.entity) {
				continue;
			}
			var e = item1.data;
			var a_x = pos.x;
			var a_y = pos.y;
			var a_w = size.w;
			var a_h = size.h;
			var b_x = e.pos.x;
			var b_y = e.pos.y;
			var b_w = e.size.w;
			var b_h = e.size.h;
			if(!(!(a_y + a_h < b_y || a_y > b_y + b_h || a_x + a_w < b_x || a_x > b_x + b_w))) {
				continue;
			}
			if(e.life.alive) {
				var _this = e.life;
				_this.hp += 10;
				if(_this.hp > _this.maxHp) {
					_this.hp = _this.maxHp;
				}
				this.entity.destroy();
			}
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateHpCollision
};
var game_systems_UpdateItems = function() {
	this.__process__ = new game_systems_UpdateItems_$SystemProcess(this);
};
$hxClasses["game.systems.UpdateItems"] = game_systems_UpdateItems;
game_systems_UpdateItems.__name__ = ["game","systems","UpdateItems"];
game_systems_UpdateItems.__interfaces__ = [edge_ISystem];
game_systems_UpdateItems.prototype = {
	update: function(coin,sprite,coll,pos,speed,gr) {
		var max = Math.abs(speed.x) > Math.abs(speed.y) ? Math.abs(speed.x) : Math.abs(speed.y);
		var _g1 = 0;
		var _g = max | 0;
		while(_g1 < _g) {
			var i = _g1++;
			sprite.frameDelay++;
			if(sprite.frameDelay >= sprite.frameDelayMax) {
				sprite.frameTypeId++;
				var key = sprite.frameType;
				var _this = sprite.sets;
				var len = (__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]).length;
				if(sprite.frameTypeId == len) {
					sprite.frameTypeId = 0;
				}
				var key1 = sprite.frameType;
				var _this1 = sprite.sets;
				sprite.frame = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1])[sprite.frameTypeId];
				sprite.frameDelay = 0;
			}
		}
		sprite.frameDelay++;
		if(sprite.frameDelay >= sprite.frameDelayMax) {
			sprite.frameTypeId++;
			var key2 = sprite.frameType;
			var _this2 = sprite.sets;
			var len1 = (__map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2]).length;
			if(sprite.frameTypeId == len1) {
				sprite.frameTypeId = 0;
			}
			var key3 = sprite.frameType;
			var _this3 = sprite.sets;
			sprite.frame = (__map_reserved[key3] != null ? _this3.getReserved(key3) : _this3.h[key3])[sprite.frameTypeId];
			sprite.frameDelay = 0;
		}
		if(coll.state) {
			if(coll.down || coll.up) {
				speed.y = -coin.lastSpeed.y / 2;
			}
			if(coll.right || coll.left) {
				speed.x = -coin.lastSpeed.x / 2;
			}
		} else {
			coin.lastSpeed.x = speed.x;
			coin.lastSpeed.y = speed.y;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdateItems
};
var game_systems_UpdatePlayerControl = function() {
	this.__process__ = new game_systems_UpdatePlayerControl_$SystemProcess(this);
};
$hxClasses["game.systems.UpdatePlayerControl"] = game_systems_UpdatePlayerControl;
game_systems_UpdatePlayerControl.__name__ = ["game","systems","UpdatePlayerControl"];
game_systems_UpdatePlayerControl.__interfaces__ = [edge_ISystem];
game_systems_UpdatePlayerControl.prototype = {
	update: function(player,life,body,speed,coll,control) {
		if(!life.alive) {
			return true;
		}
		if(coll.down) {
			player.jump = 0;
		}
		var airJump = player.jump < player.maxJump;
		var keys = control.keys;
		var sx = coll.down ? body.landSX : body.airSX;
		if((keys.h[37] || keys.h[65]) && speed.x > -body.maxRunSX) {
			speed.x -= sx;
		}
		if((keys.h[39] || keys.h[68]) && speed.x < body.maxRunSX) {
			speed.x += sx;
		}
		if((keys.h[38] || keys.h[87] || keys.h[32]) && (coll.down || airJump)) {
			coll.down = false;
			speed.y = body.jump;
			player.jump++;
			keys.h[32] = false;
			var v = false;
			keys.h[87] = v;
			var v1 = v;
			keys.h[38] = v1;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdatePlayerControl
};
var game_systems_UpdatePlayerCollision = function(game1) {
	this.game = game1;
	this.__process__ = new game_systems_UpdatePlayerCollision_$SystemProcess(this);
};
$hxClasses["game.systems.UpdatePlayerCollision"] = game_systems_UpdatePlayerCollision;
game_systems_UpdatePlayerCollision.__name__ = ["game","systems","UpdatePlayerCollision"];
game_systems_UpdatePlayerCollision.__interfaces__ = [edge_ISystem];
game_systems_UpdatePlayerCollision.prototype = {
	get_tileSize: function() {
		return game_Game.lvl.tileset.tileSize;
	}
	,get_lvl: function() {
		return game_Game.lvl;
	}
	,game: null
	,update: function(player,life,coll,pos,size,speed) {
		if(!life.alive) {
			return true;
		}
		this.collision(coll,pos,size);
		return true;
	}
	,collision: function(coll,pos,size) {
		var rect_x = pos.x;
		var rect_y = pos.y;
		var rect_w = size.w;
		var rect_h = size.h;
		var x = rect_x / this.get_tileSize() | 0;
		var y = rect_y / this.get_tileSize() | 0;
		var maxX = Math.ceil((rect_x + rect_w) / this.get_tileSize());
		var maxY = Math.ceil((rect_y + rect_h) / this.get_tileSize());
		var _g1 = y;
		var _g = maxY;
		while(_g1 < _g) {
			var iy = _g1++;
			var _g3 = x;
			var _g2 = maxX;
			while(_g3 < _g2) {
				var ix = _g3++;
				var id = this.get_lvl().getTile(2,ix,iy).id;
				if(id == 2) {
					this.game.levelComplete();
				}
			}
		}
	}
	,__process__: null
	,__class__: game_systems_UpdatePlayerCollision
};
var game_systems_UpdatePlayerAnimation = function() {
	this.__process__ = new game_systems_UpdatePlayerAnimation_$SystemProcess(this);
};
$hxClasses["game.systems.UpdatePlayerAnimation"] = game_systems_UpdatePlayerAnimation;
game_systems_UpdatePlayerAnimation.__name__ = ["game","systems","UpdatePlayerAnimation"];
game_systems_UpdatePlayerAnimation.__interfaces__ = [edge_ISystem];
game_systems_UpdatePlayerAnimation.prototype = {
	get_lvl: function() {
		return game_Game.lvl;
	}
	,get_camera: function() {
		return game_Game.lvl.camera;
	}
	,update: function(player,life,control,sprite,pos,size,speed,body,coll) {
		if(!life.alive) {
			return true;
		}
		var left = false;
		var right = false;
		var up = false;
		var keys = control.keys;
		if(keys.h[37] || keys.h[65]) {
			left = true;
		}
		if(keys.h[39] || keys.h[68]) {
			right = true;
		}
		if(keys.h[38] || keys.h[87]) {
			up = true;
		}
		if(left != right) {
			sprite.dir = left ? 0 : 1;
		}
		var pointer = control.pointers.h[0];
		if(pointer.isDown && coll.down && speed.x == 0) {
			var ang = Math.atan2(pointer.y - pos.y - size.h / 2 - 3 - this.get_camera().y,pointer.x - pos.x - size.w / 2 - this.get_camera().x);
			ang = ang * 180 / Math.PI + 90;
			if(ang < 0 || ang > 180) {
				if(ang < 0) {
					ang = -ang;
				}
				if(ang > 180) {
					ang = 360 - ang;
				}
				sprite.dir = 0;
			} else {
				sprite.dir = 1;
			}
			if(sprite.frameType != "attack") {
				sprite.frameType = "attack";
				sprite.frameTypeId = 0;
				var _this = sprite.sets;
				sprite.frame = (__map_reserved["attack"] != null ? _this.getReserved("attack") : _this.h["attack"])[0];
				sprite.frameDelay = 0;
			}
			var id = (180 - ang - 1) / 20 | 0;
			sprite.frameTypeId = id;
			var key = sprite.frameType;
			var _this1 = sprite.sets;
			sprite.frame = (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key])[id];
			sprite.frameDelay = 0;
			return true;
		}
		if(coll.down) {
			if(left == right) {
				if(speed.x != 0) {
					if(sprite.frameType != "brake") {
						sprite.frameType = "brake";
						sprite.frameTypeId = 0;
						var _this2 = sprite.sets;
						sprite.frame = (__map_reserved["brake"] != null ? _this2.getReserved("brake") : _this2.h["brake"])[0];
						sprite.frameDelay = 0;
					}
					if(speed.x < -body.maxRunSX / 2) {
						sprite.dir = 0;
					} else if(speed.x > body.maxRunSX / 2) {
						sprite.dir = 1;
					}
				} else {
					if(sprite.animCounter == 500) {
						if(sprite.frameType != "standAnim") {
							sprite.frameType = "standAnim";
							sprite.frameTypeId = 0;
							var _this3 = sprite.sets;
							sprite.frame = (__map_reserved["standAnim"] != null ? _this3.getReserved("standAnim") : _this3.h["standAnim"])[0];
							sprite.frameDelay = 0;
						}
						sprite.frameTypeId = 1;
						var key1 = sprite.frameType;
						var _this4 = sprite.sets;
						sprite.frame = (__map_reserved[key1] != null ? _this4.getReserved(key1) : _this4.h[key1])[1];
						sprite.frameDelay = 0;
						sprite.animCounter = 0;
					} else {
						sprite.animCounter++;
					}
					if(sprite.frameType == "standAnim") {
						if(sprite.frameTypeId == 0) {
							if(sprite.frameType != "stand") {
								sprite.frameType = "stand";
								sprite.frameTypeId = 0;
								var _this5 = sprite.sets;
								sprite.frame = (__map_reserved["stand"] != null ? _this5.getReserved("stand") : _this5.h["stand"])[0];
								sprite.frameDelay = 0;
							}
						}
					} else if(sprite.frameType != "stand") {
						sprite.frameType = "stand";
						sprite.frameTypeId = 0;
						var _this6 = sprite.sets;
						sprite.frame = (__map_reserved["stand"] != null ? _this6.getReserved("stand") : _this6.h["stand"])[0];
						sprite.frameDelay = 0;
					}
				}
			} else if(Math.abs(speed.x) > body.landSX) {
				if(sprite.frameType != "run") {
					sprite.frameType = "run";
					sprite.frameTypeId = 0;
					var _this7 = sprite.sets;
					sprite.frame = (__map_reserved["run"] != null ? _this7.getReserved("run") : _this7.h["run"])[0];
					sprite.frameDelay = 0;
				}
			} else if(sprite.frameType != "stand") {
				sprite.frameType = "stand";
				sprite.frameTypeId = 0;
				var _this8 = sprite.sets;
				sprite.frame = (__map_reserved["stand"] != null ? _this8.getReserved("stand") : _this8.h["stand"])[0];
				sprite.frameDelay = 0;
			}
		} else if(speed.y < -this.get_lvl().scale) {
			if(sprite.frameType != "jump") {
				sprite.frameType = "jump";
				sprite.frameTypeId = 0;
				var _this9 = sprite.sets;
				sprite.frame = (__map_reserved["jump"] != null ? _this9.getReserved("jump") : _this9.h["jump"])[0];
				sprite.frameDelay = 0;
			}
		} else if(speed.y > this.get_lvl().scale) {
			if(sprite.frameType != "fall") {
				sprite.frameType = "fall";
				sprite.frameTypeId = 0;
				var _this10 = sprite.sets;
				sprite.frame = (__map_reserved["fall"] != null ? _this10.getReserved("fall") : _this10.h["fall"])[0];
				sprite.frameDelay = 0;
			}
		} else if(sprite.frameType != "soar") {
			sprite.frameType = "soar";
			sprite.frameTypeId = 0;
			var _this11 = sprite.sets;
			sprite.frame = (__map_reserved["soar"] != null ? _this11.getReserved("soar") : _this11.h["soar"])[0];
			sprite.frameDelay = 0;
		}
		sprite.frameDelay++;
		if(sprite.frameDelay >= sprite.frameDelayMax) {
			sprite.frameTypeId++;
			var key2 = sprite.frameType;
			var _this12 = sprite.sets;
			var len = (__map_reserved[key2] != null ? _this12.getReserved(key2) : _this12.h[key2]).length;
			if(sprite.frameTypeId == len) {
				sprite.frameTypeId = 0;
			}
			var key3 = sprite.frameType;
			var _this13 = sprite.sets;
			sprite.frame = (__map_reserved[key3] != null ? _this13.getReserved(key3) : _this13.h[key3])[sprite.frameTypeId];
			sprite.frameDelay = 0;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdatePlayerAnimation
};
var game_systems_UpdatePlayerAim = function(game1) {
	this.game = game1;
	this.__process__ = new game_systems_UpdatePlayerAim_$SystemProcess(this);
};
$hxClasses["game.systems.UpdatePlayerAim"] = game_systems_UpdatePlayerAim;
game_systems_UpdatePlayerAim.__name__ = ["game","systems","UpdatePlayerAim"];
game_systems_UpdatePlayerAim.__interfaces__ = [edge_ISystem];
game_systems_UpdatePlayerAim.prototype = {
	get_camera: function() {
		return game_Game.lvl.camera;
	}
	,game: null
	,entity: null
	,update: function(player,life,sprite,pos,size,speed,gr,bow,control) {
		if(!life.alive) {
			return true;
		}
		var pointer = control.pointers.h[0];
		var reset = true;
		if(pointer.isDown) {
			var x = pointer.x - pos.x - size.w / 2 - this.get_camera().x;
			var y = pointer.y - pos.y - size.h / 2 - 3 - this.get_camera().y;
			bow.ang = Math.atan2(y,x);
			if(bow.arrow == null) {
				bow.arrow = this.game.engine.create([new game_Arrow(player.arrowType,this.entity),new game_Collision(),new game_Position(0,0,true),new game_Size(1,1),new game_Speed(0,0),new game_Gravity(0,0.1),new game_Life(true)]);
			}
			if(bow.tension < bow.tensionMin) {
				bow.tension = bow.tensionMin;
			}
			if(bow.tension < bow.tensionMax) {
				bow.tension += bow.tensionSpeed;
			}
			var sx = Math.cos(bow.ang) * bow.tension;
			var sy = Math.sin(bow.ang) * bow.tension;
			var this1 = bow.arrow.map;
			var key = Type.getClassName(game_Speed);
			var _this = this1;
			var sp = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			sp.x = sx;
			sp.y = sy;
			var sx1 = Math.cos(bow.ang) * 15;
			var sy1 = Math.sin(bow.ang) * 15;
			var this2 = bow.arrow.map;
			var key1 = Type.getClassName(game_Position);
			var _this1 = this2;
			var p = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
			p.x = pos.x + size.w / 2 + sx1;
			p.y = pos.y + size.h / 2 - 3 + sy1;
			var ang = sprite.frameTypeId * 25;
			var side = sprite.dir == 0 ? -1 : 1;
			var _g = sprite.frameTypeId;
			switch(_g) {
			case 0:case 1:
				ang += 5;
				p.x += 2 * side;
				p.y -= 4;
				break;
			case 8:
				ang -= 20;
				break;
			default:
			}
			ang = (90 - ang * side) * Math.PI / 180;
			var this3 = bow.arrow.map;
			var key2 = Type.getClassName(game_Arrow);
			var _this2 = this3;
			var arrow = __map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2];
			arrow.lastSpeedX = sx1;
			arrow.lastSpeedY = sy1;
			arrow.type = player.arrowType;
			arrow.ang = ang;
			arrow.visible = sprite.frameType == "attack";
			reset = false;
		}
		if(reset) {
			if(bow.tension == 0) {
				return true;
			}
			var this4 = bow.arrow.map;
			var key3 = Type.getClassName(game_Position);
			var _this3 = this4;
			(__map_reserved[key3] != null ? _this3.getReserved(key3) : _this3.h[key3]).fixed = false;
			var this5 = bow.arrow.map;
			var key4 = Type.getClassName(game_Arrow);
			var _this4 = this5;
			(__map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4]).visible = true;
			bow.arrow = null;
			bow.tension = 0;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_UpdatePlayerAim
};
var game_systems_RenderAimLine = function() {
	this.__process__ = new game_systems_RenderAimLine_$SystemProcess(this);
};
$hxClasses["game.systems.RenderAimLine"] = game_systems_RenderAimLine;
game_systems_RenderAimLine.__name__ = ["game","systems","RenderAimLine"];
game_systems_RenderAimLine.__interfaces__ = [edge_ISystem];
game_systems_RenderAimLine.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,get_camera: function() {
		return game_Game.lvl.camera;
	}
	,before: function() {
		this.get_g().set_color(-65536);
	}
	,update: function(player,life,control,pos,size,gr,bow) {
		if(!life.alive) {
			return true;
		}
		if(bow.tension == 0) {
			return true;
		}
		var this1 = bow.arrow.map;
		var key = Type.getClassName(game_Position);
		var _this = this1;
		var p = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		var x = p.x + this.get_camera().x;
		var y = p.y + this.get_camera().y;
		var this2 = bow.arrow.map;
		var key1 = Type.getClassName(game_Speed);
		var _this1 = this2;
		var s = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
		var sx = s.x;
		var sy = s.y;
		var this3 = bow.arrow.map;
		var key2 = Type.getClassName(game_Gravity);
		var _this2 = this3;
		var gr1 = __map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2];
		var gx = gr1.x;
		var gy = gr1.y;
		var _g1 = 0;
		var _g = bow.aimLine;
		while(_g1 < _g) {
			var i = _g1++;
			sx += gx;
			sy += gy;
			x += sx;
			y += sy;
			if(i % 2 != 0) {
				continue;
			}
			this.get_g().drawLine(x,y,x + sx,y + sy);
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderAimLine
};
var game_systems_RenderPlayerLifebar = function() {
	this.h = kha_Assets.images.gui_hp.get_height();
	this.__process__ = new game_systems_RenderPlayerLifebar_$SystemProcess(this);
};
$hxClasses["game.systems.RenderPlayerLifebar"] = game_systems_RenderPlayerLifebar;
game_systems_RenderPlayerLifebar.__name__ = ["game","systems","RenderPlayerLifebar"];
game_systems_RenderPlayerLifebar.__interfaces__ = [edge_ISystem];
game_systems_RenderPlayerLifebar.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,h: null
	,before: function() {
		this.get_g().set_color(-1);
	}
	,update: function(player,control,lifebar,life) {
		var x = 10;
		var y = 10;
		var _g1 = 0;
		var _g = life.hp / 10 | 0;
		while(_g1 < _g) {
			var i = _g1++;
			this.get_g().drawSubImage(kha_Assets.images.gui_hp,x,y,0,0,31,this.h);
			x += 30;
		}
		if(life.hp % 10 != 0) {
			this.get_g().drawSubImage(kha_Assets.images.gui_hp,x,y,31,0,31,this.h);
			x += 30;
		}
		var _g11 = 0;
		var _g2 = (life.maxHp - life.hp) / 10 | 0;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.get_g().drawSubImage(kha_Assets.images.gui_hp,x,y,62,0,31,this.h);
			x += 30;
		}
		return true;
	}
	,__process__: null
	,__class__: game_systems_RenderPlayerLifebar
};
var game_systems_RenderPlayerMoneybar = function() {
	this.img = kha_Assets.images.gui_coin;
	this.__process__ = new game_systems_RenderPlayerMoneybar_$SystemProcess(this);
};
$hxClasses["game.systems.RenderPlayerMoneybar"] = game_systems_RenderPlayerMoneybar;
game_systems_RenderPlayerMoneybar.__name__ = ["game","systems","RenderPlayerMoneybar"];
game_systems_RenderPlayerMoneybar.__interfaces__ = [edge_ISystem];
game_systems_RenderPlayerMoneybar.prototype = {
	get_g: function() {
		return khm_Screen.frame.get_g2();
	}
	,img: null
	,before: function() {
		this.get_g().set_color(-1);
	}
	,update: function(player,control,moneybar,life) {
		var x = 10;
		var y = 40;
		this.get_g().drawImage(this.img,x,y);
		this.drawNumber(player.money,x + this.img.get_width() + 3,y + 3);
		return true;
	}
	,drawNumber: function(n,x,y) {
		var w = [0,12,22,34,46,58,70,82,94,106,118,131,144];
		var h = 17;
		var img = kha_Assets.images.gui_number_font;
		var offx = 0;
		var num = n;
		while(num > 0) {
			var digit = num % 10;
			offx += w[digit + 1] - w[digit];
			num = num / 10 | 0;
		}
		if(n == 0) {
			this.get_g().drawSubImage(img,x,y,0,0,w[1],h);
		} else {
			while(n > 0) {
				var digit1 = n % 10;
				offx -= w[digit1 + 1] - w[digit1];
				this.get_g().drawSubImage(img,x + offx,y,w[digit1],0,w[digit1 + 1] - w[digit1],h);
				n = n / 10 | 0;
			}
		}
	}
	,__process__: null
	,__class__: game_systems_RenderPlayerMoneybar
};
var game_systems_RenderAimLine_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.RenderAimLine_SystemProcess"] = game_systems_RenderAimLine_$SystemProcess;
game_systems_RenderAimLine_$SystemProcess.__name__ = ["game","systems","RenderAimLine_SystemProcess"];
game_systems_RenderAimLine_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderAimLine_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		if(this.updateItems.get_count() > 0) {
			this.system.before();
		}
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.player,data.life,data.control,data.pos,data.size,data.gr,data.bow);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 7;
		var o = { player : null, life : null, control : null, pos : null, size : null, gr : null, bow : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Control)) {
				o.control = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Gravity)) {
				o.gr = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Bow)) {
				o.bow = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_RenderAimLine_$SystemProcess
};
var game_systems_RenderAnimations_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.RenderAnimations_SystemProcess"] = game_systems_RenderAnimations_$SystemProcess;
game_systems_RenderAnimations_$SystemProcess.__name__ = ["game","systems","RenderAnimations_SystemProcess"];
game_systems_RenderAnimations_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderAnimations_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			this.system.entity = item1.entity;
			data = item1.data;
			result = this.system.update(data.anim,data.sprite,data.pos,data.size);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 4;
		var o = { anim : null, sprite : null, pos : null, size : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Anim)) {
				o.anim = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Sprite)) {
				o.sprite = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_RenderAnimations_$SystemProcess
};
var game_systems_RenderArrows_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.RenderArrows_SystemProcess"] = game_systems_RenderArrows_$SystemProcess;
game_systems_RenderArrows_$SystemProcess.__name__ = ["game","systems","RenderArrows_SystemProcess"];
game_systems_RenderArrows_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderArrows_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		if(this.updateItems.get_count() > 0) {
			this.system.before();
		}
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.arrow,data.pos,data.size,data.speed);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 4;
		var o = { arrow : null, pos : null, size : null, speed : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Arrow)) {
				o.arrow = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_RenderArrows_$SystemProcess
};
var game_systems_RenderBG_$SystemProcess = function(system) {
	this.system = system;
};
$hxClasses["game.systems.RenderBG_SystemProcess"] = game_systems_RenderBG_$SystemProcess;
game_systems_RenderBG_$SystemProcess.__name__ = ["game","systems","RenderBG_SystemProcess"];
game_systems_RenderBG_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderBG_$SystemProcess.prototype = {
	removeEntity: function(entity) {
	}
	,addEntity: function(entity) {
	}
	,system: null
	,update: function(engine,delta) {
		var result = true;
		result = this.system.update();
		return result;
	}
	,__class__: game_systems_RenderBG_$SystemProcess
};
var game_systems_RenderBodies_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.RenderBodies_SystemProcess"] = game_systems_RenderBodies_$SystemProcess;
game_systems_RenderBodies_$SystemProcess.__name__ = ["game","systems","RenderBodies_SystemProcess"];
game_systems_RenderBodies_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderBodies_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			this.system.entity = item1.entity;
			data = item1.data;
			result = this.system.update(data.sprite,data.body,data.pos,data.size,data.life);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 5;
		var o = { sprite : null, body : null, pos : null, size : null, life : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Sprite)) {
				o.sprite = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_RenderBodies_$SystemProcess
};
var game_systems_RenderChests_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.RenderChests_SystemProcess"] = game_systems_RenderChests_$SystemProcess;
game_systems_RenderChests_$SystemProcess.__name__ = ["game","systems","RenderChests_SystemProcess"];
game_systems_RenderChests_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderChests_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.chest,data.sprite,data.pos,data.size);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 4;
		var o = { chest : null, sprite : null, pos : null, size : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Chest)) {
				o.chest = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Sprite)) {
				o.sprite = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_RenderChests_$SystemProcess
};
var game_systems_RenderGameEnd_$SystemProcess = function(system) {
	this.system = system;
};
$hxClasses["game.systems.RenderGameEnd_SystemProcess"] = game_systems_RenderGameEnd_$SystemProcess;
game_systems_RenderGameEnd_$SystemProcess.__name__ = ["game","systems","RenderGameEnd_SystemProcess"];
game_systems_RenderGameEnd_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderGameEnd_$SystemProcess.prototype = {
	removeEntity: function(entity) {
	}
	,addEntity: function(entity) {
	}
	,system: null
	,update: function(engine,delta) {
		var result = true;
		result = this.system.update();
		return result;
	}
	,__class__: game_systems_RenderGameEnd_$SystemProcess
};
var game_systems_RenderMapBG_$SystemProcess = function(system) {
	this.system = system;
};
$hxClasses["game.systems.RenderMapBG_SystemProcess"] = game_systems_RenderMapBG_$SystemProcess;
game_systems_RenderMapBG_$SystemProcess.__name__ = ["game","systems","RenderMapBG_SystemProcess"];
game_systems_RenderMapBG_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderMapBG_$SystemProcess.prototype = {
	removeEntity: function(entity) {
	}
	,addEntity: function(entity) {
	}
	,system: null
	,update: function(engine,delta) {
		var result = true;
		result = this.system.update();
		return result;
	}
	,__class__: game_systems_RenderMapBG_$SystemProcess
};
var game_systems_RenderMapTG_$SystemProcess = function(system) {
	this.system = system;
};
$hxClasses["game.systems.RenderMapTG_SystemProcess"] = game_systems_RenderMapTG_$SystemProcess;
game_systems_RenderMapTG_$SystemProcess.__name__ = ["game","systems","RenderMapTG_SystemProcess"];
game_systems_RenderMapTG_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderMapTG_$SystemProcess.prototype = {
	removeEntity: function(entity) {
	}
	,addEntity: function(entity) {
	}
	,system: null
	,update: function(engine,delta) {
		var result = true;
		result = this.system.update();
		return result;
	}
	,__class__: game_systems_RenderMapTG_$SystemProcess
};
var game_systems_RenderPlayerLifebar_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.RenderPlayerLifebar_SystemProcess"] = game_systems_RenderPlayerLifebar_$SystemProcess;
game_systems_RenderPlayerLifebar_$SystemProcess.__name__ = ["game","systems","RenderPlayerLifebar_SystemProcess"];
game_systems_RenderPlayerLifebar_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderPlayerLifebar_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		if(this.updateItems.get_count() > 0) {
			this.system.before();
		}
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.player,data.control,data.lifebar,data.life);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 4;
		var o = { player : null, control : null, lifebar : null, life : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Control)) {
				o.control = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Lifebar)) {
				o.lifebar = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_RenderPlayerLifebar_$SystemProcess
};
var game_systems_RenderPlayerMoneybar_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.RenderPlayerMoneybar_SystemProcess"] = game_systems_RenderPlayerMoneybar_$SystemProcess;
game_systems_RenderPlayerMoneybar_$SystemProcess.__name__ = ["game","systems","RenderPlayerMoneybar_SystemProcess"];
game_systems_RenderPlayerMoneybar_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_RenderPlayerMoneybar_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		if(this.updateItems.get_count() > 0) {
			this.system.before();
		}
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.player,data.control,data.moneybar,data.life);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 4;
		var o = { player : null, control : null, moneybar : null, life : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Control)) {
				o.control = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Moneybar)) {
				o.moneybar = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_RenderPlayerMoneybar_$SystemProcess
};
var game_systems_UpdateAIAnimation_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdateAIAnimation_SystemProcess"] = game_systems_UpdateAIAnimation_$SystemProcess;
game_systems_UpdateAIAnimation_$SystemProcess.__name__ = ["game","systems","UpdateAIAnimation_SystemProcess"];
game_systems_UpdateAIAnimation_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateAIAnimation_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.ai,data.control,data.sprite,data.pos,data.size,data.speed,data.body,data.coll);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 8;
		var o = { ai : null, control : null, sprite : null, pos : null, size : null, speed : null, body : null, coll : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_AI)) {
				o.ai = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Control)) {
				o.control = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Sprite)) {
				o.sprite = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateAIAnimation_$SystemProcess
};
var game_systems_UpdateAIControl_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdateAIControl_SystemProcess"] = game_systems_UpdateAIControl_$SystemProcess;
game_systems_UpdateAIControl_$SystemProcess.__name__ = ["game","systems","UpdateAIControl_SystemProcess"];
game_systems_UpdateAIControl_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateAIControl_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.ai,data.control,data.body,data.pos,data.size,data.speed,data.coll);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 7;
		var o = { ai : null, control : null, body : null, pos : null, size : null, speed : null, coll : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_AI)) {
				o.ai = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Control)) {
				o.control = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateAIControl_$SystemProcess
};
var game_systems_UpdateArrowCollision_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
	system.targets = new edge_View();
};
$hxClasses["game.systems.UpdateArrowCollision_SystemProcess"] = game_systems_UpdateArrowCollision_$SystemProcess;
game_systems_UpdateArrowCollision_$SystemProcess.__name__ = ["game","systems","UpdateArrowCollision_SystemProcess"];
game_systems_UpdateArrowCollision_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateArrowCollision_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
		this.system.targets.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.targetsMatchRequirements(entity);
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			this.system.entity = item1.entity;
			data = item1.data;
			result = this.system.update(data.arrow,data.pos,data.size,data.speed,data.life);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,targetsMatchRequirements: function(entity) {
		var removed = this.system.targets.tryRemove(entity);
		var count = 4;
		var o = { size : null, pos : null, life : null, body : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.targets.tryAdd(entity,o);
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 5;
		var o = { arrow : null, pos : null, size : null, speed : null, life : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Arrow)) {
				o.arrow = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateArrowCollision_$SystemProcess
};
var game_systems_UpdateArrows_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
	system.targets = new edge_View();
};
$hxClasses["game.systems.UpdateArrows_SystemProcess"] = game_systems_UpdateArrows_$SystemProcess;
game_systems_UpdateArrows_$SystemProcess.__name__ = ["game","systems","UpdateArrows_SystemProcess"];
game_systems_UpdateArrows_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateArrows_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
		this.system.targets.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.targetsMatchRequirements(entity);
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.arrow,data.coll,data.pos,data.speed,data.gr);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,targetsMatchRequirements: function(entity) {
		var removed = this.system.targets.tryRemove(entity);
		var count = 2;
		var o = { size : null, pos : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.targets.tryAdd(entity,o);
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 5;
		var o = { arrow : null, coll : null, pos : null, speed : null, gr : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Arrow)) {
				o.arrow = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Gravity)) {
				o.gr = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateArrows_$SystemProcess
};
var game_systems_UpdateBodyCollision_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
	system.targets = new edge_View();
};
$hxClasses["game.systems.UpdateBodyCollision_SystemProcess"] = game_systems_UpdateBodyCollision_$SystemProcess;
game_systems_UpdateBodyCollision_$SystemProcess.__name__ = ["game","systems","UpdateBodyCollision_SystemProcess"];
game_systems_UpdateBodyCollision_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateBodyCollision_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
		this.system.targets.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.targetsMatchRequirements(entity);
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			this.system.entity = item1.entity;
			data = item1.data;
			result = this.system.update(data.body,data.coll,data.pos,data.size,data.speed,data.life);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,targetsMatchRequirements: function(entity) {
		var removed = this.system.targets.tryRemove(entity);
		var count = 5;
		var o = { size : null, pos : null, life : null, coll : null, body : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.targets.tryAdd(entity,o);
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 6;
		var o = { body : null, coll : null, pos : null, size : null, speed : null, life : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateBodyCollision_$SystemProcess
};
var game_systems_UpdateBodyPhysic_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdateBodyPhysic_SystemProcess"] = game_systems_UpdateBodyPhysic_$SystemProcess;
game_systems_UpdateBodyPhysic_$SystemProcess.__name__ = ["game","systems","UpdateBodyPhysic_SystemProcess"];
game_systems_UpdateBodyPhysic_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateBodyPhysic_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.body,data.pos,data.size,data.speed,data.coll);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 5;
		var o = { body : null, pos : null, size : null, speed : null, coll : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateBodyPhysic_$SystemProcess
};
var game_systems_UpdateCamera_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdateCamera_SystemProcess"] = game_systems_UpdateCamera_$SystemProcess;
game_systems_UpdateCamera_$SystemProcess.__name__ = ["game","systems","UpdateCamera_SystemProcess"];
game_systems_UpdateCamera_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateCamera_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.camera,data.pos,data.size);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 3;
		var o = { camera : null, pos : null, size : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Camera)) {
				o.camera = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateCamera_$SystemProcess
};
var game_systems_UpdateChests_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
	system.targets = new edge_View();
};
$hxClasses["game.systems.UpdateChests_SystemProcess"] = game_systems_UpdateChests_$SystemProcess;
game_systems_UpdateChests_$SystemProcess.__name__ = ["game","systems","UpdateChests_SystemProcess"];
game_systems_UpdateChests_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateChests_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
		this.system.targets.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.targetsMatchRequirements(entity);
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			this.system.entity = item1.entity;
			data = item1.data;
			result = this.system.update(data.chest,data.sprite,data.pos,data.size);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,targetsMatchRequirements: function(entity) {
		var removed = this.system.targets.tryRemove(entity);
		var count = 3;
		var o = { size : null, pos : null, player : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.targets.tryAdd(entity,o);
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 4;
		var o = { chest : null, sprite : null, pos : null, size : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Chest)) {
				o.chest = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Sprite)) {
				o.sprite = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateChests_$SystemProcess
};
var game_systems_UpdateCoinCollision_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
	system.targets = new edge_View();
};
$hxClasses["game.systems.UpdateCoinCollision_SystemProcess"] = game_systems_UpdateCoinCollision_$SystemProcess;
game_systems_UpdateCoinCollision_$SystemProcess.__name__ = ["game","systems","UpdateCoinCollision_SystemProcess"];
game_systems_UpdateCoinCollision_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateCoinCollision_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
		this.system.targets.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.targetsMatchRequirements(entity);
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			this.system.entity = item1.entity;
			data = item1.data;
			result = this.system.update(data.coin,data.pos,data.size,data.speed,data.life);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,targetsMatchRequirements: function(entity) {
		var removed = this.system.targets.tryRemove(entity);
		var count = 6;
		var o = { size : null, pos : null, player : null, moneybar : null, life : null, body : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Moneybar)) {
				o.moneybar = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.targets.tryAdd(entity,o);
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 5;
		var o = { coin : null, pos : null, size : null, speed : null, life : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Coin)) {
				o.coin = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateCoinCollision_$SystemProcess
};
var game_systems_UpdateGravitation_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdateGravitation_SystemProcess"] = game_systems_UpdateGravitation_$SystemProcess;
game_systems_UpdateGravitation_$SystemProcess.__name__ = ["game","systems","UpdateGravitation_SystemProcess"];
game_systems_UpdateGravitation_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateGravitation_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.pos,data.speed,data.gr);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 3;
		var o = { pos : null, speed : null, gr : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Gravity)) {
				o.gr = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateGravitation_$SystemProcess
};
var game_systems_UpdateHpCollision_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
	system.targets = new edge_View();
};
$hxClasses["game.systems.UpdateHpCollision_SystemProcess"] = game_systems_UpdateHpCollision_$SystemProcess;
game_systems_UpdateHpCollision_$SystemProcess.__name__ = ["game","systems","UpdateHpCollision_SystemProcess"];
game_systems_UpdateHpCollision_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateHpCollision_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
		this.system.targets.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.targetsMatchRequirements(entity);
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			this.system.entity = item1.entity;
			data = item1.data;
			result = this.system.update(data.hp,data.pos,data.size,data.speed,data.life);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,targetsMatchRequirements: function(entity) {
		var removed = this.system.targets.tryRemove(entity);
		var count = 5;
		var o = { size : null, pos : null, player : null, life : null, body : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.targets.tryAdd(entity,o);
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 5;
		var o = { hp : null, pos : null, size : null, speed : null, life : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Hp)) {
				o.hp = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateHpCollision_$SystemProcess
};
var game_systems_UpdateItems_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdateItems_SystemProcess"] = game_systems_UpdateItems_$SystemProcess;
game_systems_UpdateItems_$SystemProcess.__name__ = ["game","systems","UpdateItems_SystemProcess"];
game_systems_UpdateItems_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateItems_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.coin,data.sprite,data.coll,data.pos,data.speed,data.gr);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 6;
		var o = { coin : null, sprite : null, coll : null, pos : null, speed : null, gr : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Item)) {
				o.coin = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Sprite)) {
				o.sprite = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Gravity)) {
				o.gr = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateItems_$SystemProcess
};
var game_systems_UpdatePlayerAim_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdatePlayerAim_SystemProcess"] = game_systems_UpdatePlayerAim_$SystemProcess;
game_systems_UpdatePlayerAim_$SystemProcess.__name__ = ["game","systems","UpdatePlayerAim_SystemProcess"];
game_systems_UpdatePlayerAim_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdatePlayerAim_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			this.system.entity = item1.entity;
			data = item1.data;
			result = this.system.update(data.player,data.life,data.sprite,data.pos,data.size,data.speed,data.gr,data.bow,data.control);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 9;
		var o = { player : null, life : null, sprite : null, pos : null, size : null, speed : null, gr : null, bow : null, control : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Sprite)) {
				o.sprite = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Gravity)) {
				o.gr = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Bow)) {
				o.bow = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Control)) {
				o.control = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdatePlayerAim_$SystemProcess
};
var game_systems_UpdatePlayerAnimation_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdatePlayerAnimation_SystemProcess"] = game_systems_UpdatePlayerAnimation_$SystemProcess;
game_systems_UpdatePlayerAnimation_$SystemProcess.__name__ = ["game","systems","UpdatePlayerAnimation_SystemProcess"];
game_systems_UpdatePlayerAnimation_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdatePlayerAnimation_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.player,data.life,data.control,data.sprite,data.pos,data.size,data.speed,data.body,data.coll);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 9;
		var o = { player : null, life : null, control : null, sprite : null, pos : null, size : null, speed : null, body : null, coll : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Control)) {
				o.control = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Sprite)) {
				o.sprite = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdatePlayerAnimation_$SystemProcess
};
var game_systems_UpdatePlayerCollision_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdatePlayerCollision_SystemProcess"] = game_systems_UpdatePlayerCollision_$SystemProcess;
game_systems_UpdatePlayerCollision_$SystemProcess.__name__ = ["game","systems","UpdatePlayerCollision_SystemProcess"];
game_systems_UpdatePlayerCollision_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdatePlayerCollision_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.player,data.life,data.coll,data.pos,data.size,data.speed);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 6;
		var o = { player : null, life : null, coll : null, pos : null, size : null, speed : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdatePlayerCollision_$SystemProcess
};
var game_systems_UpdatePlayerControl_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdatePlayerControl_SystemProcess"] = game_systems_UpdatePlayerControl_$SystemProcess;
game_systems_UpdatePlayerControl_$SystemProcess.__name__ = ["game","systems","UpdatePlayerControl_SystemProcess"];
game_systems_UpdatePlayerControl_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdatePlayerControl_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.player,data.life,data.body,data.speed,data.coll,data.control);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 6;
		var o = { player : null, life : null, body : null, speed : null, coll : null, control : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Player)) {
				o.player = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Life)) {
				o.life = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Body)) {
				o.body = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Control)) {
				o.control = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdatePlayerControl_$SystemProcess
};
var game_systems_UpdatePosition_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdatePosition_SystemProcess"] = game_systems_UpdatePosition_$SystemProcess;
game_systems_UpdatePosition_$SystemProcess.__name__ = ["game","systems","UpdatePosition_SystemProcess"];
game_systems_UpdatePosition_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdatePosition_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.pos,data.speed);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 2;
		var o = { pos : null, speed : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdatePosition_$SystemProcess
};
var game_systems_UpdateTileCollision_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
$hxClasses["game.systems.UpdateTileCollision_SystemProcess"] = game_systems_UpdateTileCollision_$SystemProcess;
game_systems_UpdateTileCollision_$SystemProcess.__name__ = ["game","systems","UpdateTileCollision_SystemProcess"];
game_systems_UpdateTileCollision_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
game_systems_UpdateTileCollision_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,system: null
	,updateItems: null
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.coll,data.pos,data.size,data.speed,data.gr);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 5;
		var o = { coll : null, pos : null, size : null, speed : null, gr : null};
		var _this = entity.map;
		var component = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(component.hasNext()) {
			var component1 = component.next();
			if((component1 instanceof game_Collision)) {
				o.coll = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Position)) {
				o.pos = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Size)) {
				o.size = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Speed)) {
				o.speed = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if((component1 instanceof game_Gravity)) {
				o.gr = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: game_systems_UpdateTileCollision_$SystemProcess
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g._hx_index) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null ? "null" : "" + v2;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
		case 6:
			var c = _g.c;
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v3 = v;
				var k = v3.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v3.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_List:
				this.buf.b += "l";
				var v4 = v;
				var _g_head = v4.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i1 = val;
					this.serialize(i1);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var k2 = v5.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					var id = Reflect.field(k3,"__id__");
					Reflect.deleteField(k3,"__id__");
					this.serialize(k3);
					k3["__id__"] = id;
					this.serialize(v5.h[k3.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var k4 = v6.keys();
				while(k4.hasNext()) {
					var k5 = k4.next();
					this.serializeString(k5);
					this.serialize(__map_reserved[k5] != null ? v6.getReserved(k5) : v6.h[k5]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i2 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var this1 = new Array(haxe_Serializer.BASE64.length);
					b64 = this1;
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i3 = _g11++;
						b64[i3] = HxOverrides.cca(haxe_Serializer.BASE64,i3);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i2 < max) {
					var b1 = v7.b[i2++];
					var b2 = v7.b[i2++];
					var b3 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i2 == max) {
					var b11 = v7.b[i2++];
					var b21 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i2 == max + 1) {
					var b12 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g.e;
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(Type.getEnumName(e));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v._hx_index);
			} else {
				var e1 = v;
				this.serializeString($hxEnums[e1.__enum__].__constructs__[e1._hx_index]);
			}
			this.buf.b += ":";
			var params = Type.enumParameters(v);
			this.buf.b += Std.string(params.length);
			var _g4 = 0;
			while(_g4 < params.length) {
				var p = params[_g4];
				++_g4;
				this.serialize(p);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Object.create(cl1.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Object.create(cl2.prototype);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = ["haxe","ds","List"];
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = ["haxe","ds","_List","ListNode"];
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["haxe.ds._List.ListIterator"] = haxe_ds__$List_ListIterator;
haxe_ds__$List_ListIterator.__name__ = ["haxe","ds","_List","ListIterator"];
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			var eof1 = (eof instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if((eof1 instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = ["haxe","io","Output"];
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	haxe_io_FPHelper.helper.setInt32(0,i,true);
	return haxe_io_FPHelper.helper.getFloat32(0,true);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = ["haxe","io","_UInt8Array","UInt8Array_Impl_"];
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g11 = 0;
			var _g3 = l;
			while(_g11 < _g3) {
				var i1 = _g11++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if((o instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if((o instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return $hxEnums[o.__enum__] == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		if(s.length == 0) {
			var key = "_hx_" + Math.random();
			s.setItem(key,key);
			s.removeItem(key);
		}
		return s;
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null ? 0 : byteOffset;
	this.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.byteLength = this.length;
	this.byteOffset = this.offset;
	this.buffer = this.buf;
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	buf: null
	,offset: null
	,length: null
	,byteLength: null
	,byteOffset: null
	,buffer: null
	,getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		var i = this.getInt32(byteOffset,littleEndian);
		var sign = 1 - (i >>> 31 << 1);
		var e = i >> 23 & 255;
		if(e == 255) {
			if((i & 8388607) == 0) {
				if(sign > 0) {
					return Infinity;
				} else {
					return -Infinity;
				}
			} else {
				return NaN;
			}
		} else {
			var m = e == 0 ? (i & 8388607) << 1 : i & 8388607 | 8388608;
			return sign * m * Math.pow(2,e - 150);
		}
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		var lo = littleEndian ? a : b;
		var hi = littleEndian ? b : a;
		var sign = 1 - (hi >>> 31 << 1);
		var e = hi >> 20 & 2047;
		if(e == 2047) {
			if(lo == 0 && (hi & 1048575) == 0) {
				if(sign > 0) {
					return Infinity;
				} else {
					return -Infinity;
				}
			} else {
				return NaN;
			}
		} else {
			var m = 2.220446049250313e-16 * ((hi & 1048575) * 4294967296. + (lo >>> 31) * 2147483648. + (lo & 2147483647));
			if(e == 0) {
				m *= 2.0;
			} else {
				m += 1.0;
			}
			return sign * m * Math.pow(2,e - 1023);
		}
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0 ? value + 128 & 255 : value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0 ? value + 65536 : value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		var tmp;
		if(value == 0) {
			tmp = 0;
		} else {
			var af = value < 0 ? -value : value;
			var exp = Math.floor(Math.log(af) / 0.6931471805599453);
			if(exp > 127) {
				tmp = 2139095040;
			} else {
				if(exp <= -127) {
					exp = -127;
					af *= 7.1362384635298e+44;
				} else {
					af = (af / Math.pow(2,exp) - 1.0) * 8388608;
				}
				tmp = (value < 0 ? -2147483648 : 0) | exp + 127 << 23 | Math.round(af);
			}
		}
		this.setUint32(byteOffset,tmp,littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.i64tmp;
		if(value == 0) {
			i64.low = 0;
			i64.high = 0;
		} else if(!isFinite(value)) {
			i64.low = 0;
			i64.high = value > 0 ? 2146435072 : -1048576;
		} else {
			var av = value < 0 ? -value : value;
			var exp = Math.floor(Math.log(av) / 0.6931471805599453);
			if(exp > 1023) {
				i64.low = -1;
				i64.high = 2146435071;
			} else {
				if(exp <= -1023) {
					exp = -1023;
					av /= 2.2250738585072014e-308;
				} else {
					av = av / Math.pow(2,exp) - 1.0;
				}
				var sig = Math.round(av * 4503599627370496.);
				var sig_l = sig | 0;
				var sig_h = sig / 4294967296.0 | 0;
				i64.low = sig_l;
				i64.high = (value < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
			}
		}
		var i641 = i64;
		if(littleEndian) {
			this.setUint32(byteOffset,i641.low,true);
			this.setUint32(byteOffset + 4,i641.high,true);
		} else {
			this.setUint32(byteOffset,i641.high,false);
			this.setUint32(byteOffset + 4,i641.low,false);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if((arg1 instanceof js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(offset == null) {
		offset = 0;
	}
	if((arg.buffer instanceof js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if((arg1 instanceof js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(offset == null) {
		offset = 0;
	}
	if((arg.buffer instanceof js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var kha__$Assets_ImageList = function() {
	this.names = ["GreyMinotaur","HunterOrc","Imp","arrows","chest","coins","electric_sparks2","explosion","lifes","player","store_items","bg_clouds","bg_sea","bg_sky","gui_coin","gui_hp","gui_number_font","icons_arrow","icons_assembly_area","icons_hand","icons_paint_brush","icons_pipette","icons_play","icons_redo","icons_search","icons_undo","tiles_1_bridge","tiles_1_bridge_t_bg","tiles_1_grass2_t","tiles_1_grass2_t_bg","tiles_1_grass_t","tiles_1_grass_t_bg","tiles_1_grass_tl","tiles_1_ground","tiles_1_ground2","tiles_1_ground2_t","tiles_1_ground2_t_bg","tiles_1_ground2_tl","tiles_1_ground3","tiles_1_ground3_t_bg","tiles_1_ground_b","tiles_1_ground_bl","tiles_1_ground_bl2","tiles_1_ground_l","tiles_1_ground_l_bg","tiles_1_ground_t","tiles_1_ground_t_bg","tiles_1_ground_tl","tiles_1_ground_tl_bg","tiles_2_1","tiles_2_2","tiles_2_3","tiles_2_4","tiles_2_5"];
	this.tiles_2_5Description = { name : "tiles_2_5", original_height : 32, original_width : 32, files : ["tiles/2/5.png"], type : "image"};
	this.tiles_2_5Name = "tiles_2_5";
	this.tiles_2_5 = null;
	this.tiles_2_4Description = { name : "tiles_2_4", original_height : 32, original_width : 32, files : ["tiles/2/4.png"], type : "image"};
	this.tiles_2_4Name = "tiles_2_4";
	this.tiles_2_4 = null;
	this.tiles_2_3Description = { name : "tiles_2_3", original_height : 32, original_width : 32, files : ["tiles/2/3.png"], type : "image"};
	this.tiles_2_3Name = "tiles_2_3";
	this.tiles_2_3 = null;
	this.tiles_2_2Description = { name : "tiles_2_2", original_height : 32, original_width : 32, files : ["tiles/2/2.png"], type : "image"};
	this.tiles_2_2Name = "tiles_2_2";
	this.tiles_2_2 = null;
	this.tiles_2_1Description = { name : "tiles_2_1", original_height : 32, original_width : 32, files : ["tiles/2/1.png"], type : "image"};
	this.tiles_2_1Name = "tiles_2_1";
	this.tiles_2_1 = null;
	this.tiles_1_ground_tl_bgDescription = { name : "tiles_1_ground_tl_bg", original_height : 32, original_width : 32, files : ["tiles/1/ground_tl_bg.png"], type : "image"};
	this.tiles_1_ground_tl_bgName = "tiles_1_ground_tl_bg";
	this.tiles_1_ground_tl_bg = null;
	this.tiles_1_ground_tlDescription = { name : "tiles_1_ground_tl", original_height : 32, original_width : 32, files : ["tiles/1/ground_tl.png"], type : "image"};
	this.tiles_1_ground_tlName = "tiles_1_ground_tl";
	this.tiles_1_ground_tl = null;
	this.tiles_1_ground_t_bgDescription = { name : "tiles_1_ground_t_bg", original_height : 32, original_width : 32, files : ["tiles/1/ground_t_bg.png"], type : "image"};
	this.tiles_1_ground_t_bgName = "tiles_1_ground_t_bg";
	this.tiles_1_ground_t_bg = null;
	this.tiles_1_ground_tDescription = { name : "tiles_1_ground_t", original_height : 32, original_width : 32, files : ["tiles/1/ground_t.png"], type : "image"};
	this.tiles_1_ground_tName = "tiles_1_ground_t";
	this.tiles_1_ground_t = null;
	this.tiles_1_ground_l_bgDescription = { name : "tiles_1_ground_l_bg", original_height : 32, original_width : 32, files : ["tiles/1/ground_l_bg.png"], type : "image"};
	this.tiles_1_ground_l_bgName = "tiles_1_ground_l_bg";
	this.tiles_1_ground_l_bg = null;
	this.tiles_1_ground_lDescription = { name : "tiles_1_ground_l", original_height : 32, original_width : 32, files : ["tiles/1/ground_l.png"], type : "image"};
	this.tiles_1_ground_lName = "tiles_1_ground_l";
	this.tiles_1_ground_l = null;
	this.tiles_1_ground_bl2Description = { name : "tiles_1_ground_bl2", original_height : 32, original_width : 32, files : ["tiles/1/ground_bl2.png"], type : "image"};
	this.tiles_1_ground_bl2Name = "tiles_1_ground_bl2";
	this.tiles_1_ground_bl2 = null;
	this.tiles_1_ground_blDescription = { name : "tiles_1_ground_bl", original_height : 32, original_width : 32, files : ["tiles/1/ground_bl.png"], type : "image"};
	this.tiles_1_ground_blName = "tiles_1_ground_bl";
	this.tiles_1_ground_bl = null;
	this.tiles_1_ground_bDescription = { name : "tiles_1_ground_b", original_height : 32, original_width : 32, files : ["tiles/1/ground_b.png"], type : "image"};
	this.tiles_1_ground_bName = "tiles_1_ground_b";
	this.tiles_1_ground_b = null;
	this.tiles_1_ground3_t_bgDescription = { name : "tiles_1_ground3_t_bg", original_height : 32, original_width : 32, files : ["tiles/1/ground3_t_bg.png"], type : "image"};
	this.tiles_1_ground3_t_bgName = "tiles_1_ground3_t_bg";
	this.tiles_1_ground3_t_bg = null;
	this.tiles_1_ground3Description = { name : "tiles_1_ground3", original_height : 32, original_width : 32, files : ["tiles/1/ground3.png"], type : "image"};
	this.tiles_1_ground3Name = "tiles_1_ground3";
	this.tiles_1_ground3 = null;
	this.tiles_1_ground2_tlDescription = { name : "tiles_1_ground2_tl", original_height : 32, original_width : 32, files : ["tiles/1/ground2_tl.png"], type : "image"};
	this.tiles_1_ground2_tlName = "tiles_1_ground2_tl";
	this.tiles_1_ground2_tl = null;
	this.tiles_1_ground2_t_bgDescription = { name : "tiles_1_ground2_t_bg", original_height : 32, original_width : 32, files : ["tiles/1/ground2_t_bg.png"], type : "image"};
	this.tiles_1_ground2_t_bgName = "tiles_1_ground2_t_bg";
	this.tiles_1_ground2_t_bg = null;
	this.tiles_1_ground2_tDescription = { name : "tiles_1_ground2_t", original_height : 32, original_width : 32, files : ["tiles/1/ground2_t.png"], type : "image"};
	this.tiles_1_ground2_tName = "tiles_1_ground2_t";
	this.tiles_1_ground2_t = null;
	this.tiles_1_ground2Description = { name : "tiles_1_ground2", original_height : 32, original_width : 32, files : ["tiles/1/ground2.png"], type : "image"};
	this.tiles_1_ground2Name = "tiles_1_ground2";
	this.tiles_1_ground2 = null;
	this.tiles_1_groundDescription = { name : "tiles_1_ground", original_height : 32, original_width : 32, files : ["tiles/1/ground.png"], type : "image"};
	this.tiles_1_groundName = "tiles_1_ground";
	this.tiles_1_ground = null;
	this.tiles_1_grass_tlDescription = { name : "tiles_1_grass_tl", original_height : 32, original_width : 32, files : ["tiles/1/grass_tl.png"], type : "image"};
	this.tiles_1_grass_tlName = "tiles_1_grass_tl";
	this.tiles_1_grass_tl = null;
	this.tiles_1_grass_t_bgDescription = { name : "tiles_1_grass_t_bg", original_height : 32, original_width : 32, files : ["tiles/1/grass_t_bg.png"], type : "image"};
	this.tiles_1_grass_t_bgName = "tiles_1_grass_t_bg";
	this.tiles_1_grass_t_bg = null;
	this.tiles_1_grass_tDescription = { name : "tiles_1_grass_t", original_height : 32, original_width : 32, files : ["tiles/1/grass_t.png"], type : "image"};
	this.tiles_1_grass_tName = "tiles_1_grass_t";
	this.tiles_1_grass_t = null;
	this.tiles_1_grass2_t_bgDescription = { name : "tiles_1_grass2_t_bg", original_height : 32, original_width : 32, files : ["tiles/1/grass2_t_bg.png"], type : "image"};
	this.tiles_1_grass2_t_bgName = "tiles_1_grass2_t_bg";
	this.tiles_1_grass2_t_bg = null;
	this.tiles_1_grass2_tDescription = { name : "tiles_1_grass2_t", original_height : 32, original_width : 32, files : ["tiles/1/grass2_t.png"], type : "image"};
	this.tiles_1_grass2_tName = "tiles_1_grass2_t";
	this.tiles_1_grass2_t = null;
	this.tiles_1_bridge_t_bgDescription = { name : "tiles_1_bridge_t_bg", original_height : 32, original_width : 32, files : ["tiles/1/bridge_t_bg.png"], type : "image"};
	this.tiles_1_bridge_t_bgName = "tiles_1_bridge_t_bg";
	this.tiles_1_bridge_t_bg = null;
	this.tiles_1_bridgeDescription = { name : "tiles_1_bridge", original_height : 32, original_width : 32, files : ["tiles/1/bridge.png"], type : "image"};
	this.tiles_1_bridgeName = "tiles_1_bridge";
	this.tiles_1_bridge = null;
	this.icons_undoDescription = { name : "icons_undo", original_height : 48, original_width : 48, files : ["icons/undo.png"], type : "image"};
	this.icons_undoName = "icons_undo";
	this.icons_undo = null;
	this.icons_searchDescription = { name : "icons_search", original_height : 48, original_width : 48, files : ["icons/search.png"], type : "image"};
	this.icons_searchName = "icons_search";
	this.icons_search = null;
	this.icons_redoDescription = { name : "icons_redo", original_height : 48, original_width : 48, files : ["icons/redo.png"], type : "image"};
	this.icons_redoName = "icons_redo";
	this.icons_redo = null;
	this.icons_playDescription = { name : "icons_play", original_height : 48, original_width : 48, files : ["icons/play.png"], type : "image"};
	this.icons_playName = "icons_play";
	this.icons_play = null;
	this.icons_pipetteDescription = { name : "icons_pipette", original_height : 48, original_width : 48, files : ["icons/pipette.png"], type : "image"};
	this.icons_pipetteName = "icons_pipette";
	this.icons_pipette = null;
	this.icons_paint_brushDescription = { name : "icons_paint_brush", original_height : 48, original_width : 48, files : ["icons/paint-brush.png"], type : "image"};
	this.icons_paint_brushName = "icons_paint_brush";
	this.icons_paint_brush = null;
	this.icons_handDescription = { name : "icons_hand", original_height : 48, original_width : 48, files : ["icons/hand.png"], type : "image"};
	this.icons_handName = "icons_hand";
	this.icons_hand = null;
	this.icons_assembly_areaDescription = { name : "icons_assembly_area", original_height : 48, original_width : 48, files : ["icons/assembly-area.png"], type : "image"};
	this.icons_assembly_areaName = "icons_assembly_area";
	this.icons_assembly_area = null;
	this.icons_arrowDescription = { name : "icons_arrow", original_height : 48, original_width : 48, files : ["icons/arrow.png"], type : "image"};
	this.icons_arrowName = "icons_arrow";
	this.icons_arrow = null;
	this.gui_number_fontDescription = { name : "gui_number_font", original_height : 34, original_width : 144, files : ["gui/number_font.png"], type : "image"};
	this.gui_number_fontName = "gui_number_font";
	this.gui_number_font = null;
	this.gui_hpDescription = { name : "gui_hp", original_height : 25, original_width : 93, files : ["gui/hp.png"], type : "image"};
	this.gui_hpName = "gui_hp";
	this.gui_hp = null;
	this.gui_coinDescription = { name : "gui_coin", original_height : 22, original_width : 22, files : ["gui/coin.png"], type : "image"};
	this.gui_coinName = "gui_coin";
	this.gui_coin = null;
	this.bg_skyDescription = { name : "bg_sky", original_height : 304, original_width : 112, files : ["bg/sky.png"], type : "image"};
	this.bg_skyName = "bg_sky";
	this.bg_sky = null;
	this.bg_seaDescription = { name : "bg_sea", original_height : 96, original_width : 112, files : ["bg/sea.png"], type : "image"};
	this.bg_seaName = "bg_sea";
	this.bg_sea = null;
	this.bg_cloudsDescription = { name : "bg_clouds", original_height : 236, original_width : 544, files : ["bg/clouds.png"], type : "image"};
	this.bg_cloudsName = "bg_clouds";
	this.bg_clouds = null;
	this.store_itemsDescription = { name : "store_items", original_height : 19, original_width : 133, files : ["store-items.png"], type : "image"};
	this.store_itemsName = "store_items";
	this.store_items = null;
	this.playerDescription = { name : "player", original_height : 160, original_width : 320, files : ["player.png"], type : "image"};
	this.playerName = "player";
	this.player = null;
	this.lifesDescription = { name : "lifes", original_height : 12, original_width : 56, files : ["lifes.png"], type : "image"};
	this.lifesName = "lifes";
	this.lifes = null;
	this.explosionDescription = { name : "explosion", original_height : 54, original_width : 54, files : ["explosion.png"], type : "image"};
	this.explosionName = "explosion";
	this.explosion = null;
	this.electric_sparks2Description = { name : "electric_sparks2", original_height : 39, original_width : 39, files : ["electric-sparks2.png"], type : "image"};
	this.electric_sparks2Name = "electric_sparks2";
	this.electric_sparks2 = null;
	this.coinsDescription = { name : "coins", original_height : 15, original_width : 90, files : ["coins.png"], type : "image"};
	this.coinsName = "coins";
	this.coins = null;
	this.chestDescription = { name : "chest", original_height : 80, original_width : 96, files : ["chest.png"], type : "image"};
	this.chestName = "chest";
	this.chest = null;
	this.arrowsDescription = { name : "arrows", original_height : 12, original_width : 16, files : ["arrows.png"], type : "image"};
	this.arrowsName = "arrows";
	this.arrows = null;
	this.ImpDescription = { name : "Imp", original_height : 160, original_width : 320, files : ["Imp.png"], type : "image"};
	this.ImpName = "Imp";
	this.Imp = null;
	this.HunterOrcDescription = { name : "HunterOrc", original_height : 160, original_width : 320, files : ["HunterOrc.png"], type : "image"};
	this.HunterOrcName = "HunterOrc";
	this.HunterOrc = null;
	this.GreyMinotaurDescription = { name : "GreyMinotaur", original_height : 260, original_width : 480, files : ["GreyMinotaur.png"], type : "image"};
	this.GreyMinotaurName = "GreyMinotaur";
	this.GreyMinotaur = null;
};
$hxClasses["kha._Assets.ImageList"] = kha__$Assets_ImageList;
kha__$Assets_ImageList.__name__ = ["kha","_Assets","ImageList"];
kha__$Assets_ImageList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,GreyMinotaur: null
	,GreyMinotaurName: null
	,GreyMinotaurDescription: null
	,GreyMinotaurLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "GreyMinotaurLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("GreyMinotaur",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "GreyMinotaurLoad"});
	}
	,GreyMinotaurUnload: function() {
		this.GreyMinotaur.unload();
		this.GreyMinotaur = null;
	}
	,HunterOrc: null
	,HunterOrcName: null
	,HunterOrcDescription: null
	,HunterOrcLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "HunterOrcLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("HunterOrc",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "HunterOrcLoad"});
	}
	,HunterOrcUnload: function() {
		this.HunterOrc.unload();
		this.HunterOrc = null;
	}
	,Imp: null
	,ImpName: null
	,ImpDescription: null
	,ImpLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "ImpLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("Imp",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "ImpLoad"});
	}
	,ImpUnload: function() {
		this.Imp.unload();
		this.Imp = null;
	}
	,arrows: null
	,arrowsName: null
	,arrowsDescription: null
	,arrowsLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "arrowsLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("arrows",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "arrowsLoad"});
	}
	,arrowsUnload: function() {
		this.arrows.unload();
		this.arrows = null;
	}
	,chest: null
	,chestName: null
	,chestDescription: null
	,chestLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "chestLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("chest",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "chestLoad"});
	}
	,chestUnload: function() {
		this.chest.unload();
		this.chest = null;
	}
	,coins: null
	,coinsName: null
	,coinsDescription: null
	,coinsLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "coinsLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("coins",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "coinsLoad"});
	}
	,coinsUnload: function() {
		this.coins.unload();
		this.coins = null;
	}
	,electric_sparks2: null
	,electric_sparks2Name: null
	,electric_sparks2Description: null
	,electric_sparks2Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "electric_sparks2Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("electric_sparks2",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "electric_sparks2Load"});
	}
	,electric_sparks2Unload: function() {
		this.electric_sparks2.unload();
		this.electric_sparks2 = null;
	}
	,explosion: null
	,explosionName: null
	,explosionDescription: null
	,explosionLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "explosionLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("explosion",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "explosionLoad"});
	}
	,explosionUnload: function() {
		this.explosion.unload();
		this.explosion = null;
	}
	,lifes: null
	,lifesName: null
	,lifesDescription: null
	,lifesLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "lifesLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("lifes",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "lifesLoad"});
	}
	,lifesUnload: function() {
		this.lifes.unload();
		this.lifes = null;
	}
	,player: null
	,playerName: null
	,playerDescription: null
	,playerLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "playerLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("player",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "playerLoad"});
	}
	,playerUnload: function() {
		this.player.unload();
		this.player = null;
	}
	,store_items: null
	,store_itemsName: null
	,store_itemsDescription: null
	,store_itemsLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "store_itemsLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("store_items",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "store_itemsLoad"});
	}
	,store_itemsUnload: function() {
		this.store_items.unload();
		this.store_items = null;
	}
	,bg_clouds: null
	,bg_cloudsName: null
	,bg_cloudsDescription: null
	,bg_cloudsLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "bg_cloudsLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("bg_clouds",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "bg_cloudsLoad"});
	}
	,bg_cloudsUnload: function() {
		this.bg_clouds.unload();
		this.bg_clouds = null;
	}
	,bg_sea: null
	,bg_seaName: null
	,bg_seaDescription: null
	,bg_seaLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "bg_seaLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("bg_sea",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "bg_seaLoad"});
	}
	,bg_seaUnload: function() {
		this.bg_sea.unload();
		this.bg_sea = null;
	}
	,bg_sky: null
	,bg_skyName: null
	,bg_skyDescription: null
	,bg_skyLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "bg_skyLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("bg_sky",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "bg_skyLoad"});
	}
	,bg_skyUnload: function() {
		this.bg_sky.unload();
		this.bg_sky = null;
	}
	,gui_coin: null
	,gui_coinName: null
	,gui_coinDescription: null
	,gui_coinLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "gui_coinLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("gui_coin",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "gui_coinLoad"});
	}
	,gui_coinUnload: function() {
		this.gui_coin.unload();
		this.gui_coin = null;
	}
	,gui_hp: null
	,gui_hpName: null
	,gui_hpDescription: null
	,gui_hpLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "gui_hpLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("gui_hp",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "gui_hpLoad"});
	}
	,gui_hpUnload: function() {
		this.gui_hp.unload();
		this.gui_hp = null;
	}
	,gui_number_font: null
	,gui_number_fontName: null
	,gui_number_fontDescription: null
	,gui_number_fontLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "gui_number_fontLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("gui_number_font",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "gui_number_fontLoad"});
	}
	,gui_number_fontUnload: function() {
		this.gui_number_font.unload();
		this.gui_number_font = null;
	}
	,icons_arrow: null
	,icons_arrowName: null
	,icons_arrowDescription: null
	,icons_arrowLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_arrowLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_arrow",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_arrowLoad"});
	}
	,icons_arrowUnload: function() {
		this.icons_arrow.unload();
		this.icons_arrow = null;
	}
	,icons_assembly_area: null
	,icons_assembly_areaName: null
	,icons_assembly_areaDescription: null
	,icons_assembly_areaLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_assembly_areaLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_assembly_area",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_assembly_areaLoad"});
	}
	,icons_assembly_areaUnload: function() {
		this.icons_assembly_area.unload();
		this.icons_assembly_area = null;
	}
	,icons_hand: null
	,icons_handName: null
	,icons_handDescription: null
	,icons_handLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_handLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_hand",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_handLoad"});
	}
	,icons_handUnload: function() {
		this.icons_hand.unload();
		this.icons_hand = null;
	}
	,icons_paint_brush: null
	,icons_paint_brushName: null
	,icons_paint_brushDescription: null
	,icons_paint_brushLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_paint_brushLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_paint_brush",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_paint_brushLoad"});
	}
	,icons_paint_brushUnload: function() {
		this.icons_paint_brush.unload();
		this.icons_paint_brush = null;
	}
	,icons_pipette: null
	,icons_pipetteName: null
	,icons_pipetteDescription: null
	,icons_pipetteLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_pipetteLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_pipette",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_pipetteLoad"});
	}
	,icons_pipetteUnload: function() {
		this.icons_pipette.unload();
		this.icons_pipette = null;
	}
	,icons_play: null
	,icons_playName: null
	,icons_playDescription: null
	,icons_playLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_playLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_play",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_playLoad"});
	}
	,icons_playUnload: function() {
		this.icons_play.unload();
		this.icons_play = null;
	}
	,icons_redo: null
	,icons_redoName: null
	,icons_redoDescription: null
	,icons_redoLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_redoLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_redo",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_redoLoad"});
	}
	,icons_redoUnload: function() {
		this.icons_redo.unload();
		this.icons_redo = null;
	}
	,icons_search: null
	,icons_searchName: null
	,icons_searchDescription: null
	,icons_searchLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_searchLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_search",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_searchLoad"});
	}
	,icons_searchUnload: function() {
		this.icons_search.unload();
		this.icons_search = null;
	}
	,icons_undo: null
	,icons_undoName: null
	,icons_undoDescription: null
	,icons_undoLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_undoLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("icons_undo",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "icons_undoLoad"});
	}
	,icons_undoUnload: function() {
		this.icons_undo.unload();
		this.icons_undo = null;
	}
	,tiles_1_bridge: null
	,tiles_1_bridgeName: null
	,tiles_1_bridgeDescription: null
	,tiles_1_bridgeLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_bridgeLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_bridge",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_bridgeLoad"});
	}
	,tiles_1_bridgeUnload: function() {
		this.tiles_1_bridge.unload();
		this.tiles_1_bridge = null;
	}
	,tiles_1_bridge_t_bg: null
	,tiles_1_bridge_t_bgName: null
	,tiles_1_bridge_t_bgDescription: null
	,tiles_1_bridge_t_bgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_bridge_t_bgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_bridge_t_bg",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_bridge_t_bgLoad"});
	}
	,tiles_1_bridge_t_bgUnload: function() {
		this.tiles_1_bridge_t_bg.unload();
		this.tiles_1_bridge_t_bg = null;
	}
	,tiles_1_grass2_t: null
	,tiles_1_grass2_tName: null
	,tiles_1_grass2_tDescription: null
	,tiles_1_grass2_tLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass2_tLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_grass2_t",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass2_tLoad"});
	}
	,tiles_1_grass2_tUnload: function() {
		this.tiles_1_grass2_t.unload();
		this.tiles_1_grass2_t = null;
	}
	,tiles_1_grass2_t_bg: null
	,tiles_1_grass2_t_bgName: null
	,tiles_1_grass2_t_bgDescription: null
	,tiles_1_grass2_t_bgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass2_t_bgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_grass2_t_bg",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass2_t_bgLoad"});
	}
	,tiles_1_grass2_t_bgUnload: function() {
		this.tiles_1_grass2_t_bg.unload();
		this.tiles_1_grass2_t_bg = null;
	}
	,tiles_1_grass_t: null
	,tiles_1_grass_tName: null
	,tiles_1_grass_tDescription: null
	,tiles_1_grass_tLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass_tLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_grass_t",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass_tLoad"});
	}
	,tiles_1_grass_tUnload: function() {
		this.tiles_1_grass_t.unload();
		this.tiles_1_grass_t = null;
	}
	,tiles_1_grass_t_bg: null
	,tiles_1_grass_t_bgName: null
	,tiles_1_grass_t_bgDescription: null
	,tiles_1_grass_t_bgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass_t_bgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_grass_t_bg",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass_t_bgLoad"});
	}
	,tiles_1_grass_t_bgUnload: function() {
		this.tiles_1_grass_t_bg.unload();
		this.tiles_1_grass_t_bg = null;
	}
	,tiles_1_grass_tl: null
	,tiles_1_grass_tlName: null
	,tiles_1_grass_tlDescription: null
	,tiles_1_grass_tlLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass_tlLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_grass_tl",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_grass_tlLoad"});
	}
	,tiles_1_grass_tlUnload: function() {
		this.tiles_1_grass_tl.unload();
		this.tiles_1_grass_tl = null;
	}
	,tiles_1_ground: null
	,tiles_1_groundName: null
	,tiles_1_groundDescription: null
	,tiles_1_groundLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_groundLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_groundLoad"});
	}
	,tiles_1_groundUnload: function() {
		this.tiles_1_ground.unload();
		this.tiles_1_ground = null;
	}
	,tiles_1_ground2: null
	,tiles_1_ground2Name: null
	,tiles_1_ground2Description: null
	,tiles_1_ground2Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground2Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground2",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground2Load"});
	}
	,tiles_1_ground2Unload: function() {
		this.tiles_1_ground2.unload();
		this.tiles_1_ground2 = null;
	}
	,tiles_1_ground2_t: null
	,tiles_1_ground2_tName: null
	,tiles_1_ground2_tDescription: null
	,tiles_1_ground2_tLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground2_tLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground2_t",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground2_tLoad"});
	}
	,tiles_1_ground2_tUnload: function() {
		this.tiles_1_ground2_t.unload();
		this.tiles_1_ground2_t = null;
	}
	,tiles_1_ground2_t_bg: null
	,tiles_1_ground2_t_bgName: null
	,tiles_1_ground2_t_bgDescription: null
	,tiles_1_ground2_t_bgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground2_t_bgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground2_t_bg",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground2_t_bgLoad"});
	}
	,tiles_1_ground2_t_bgUnload: function() {
		this.tiles_1_ground2_t_bg.unload();
		this.tiles_1_ground2_t_bg = null;
	}
	,tiles_1_ground2_tl: null
	,tiles_1_ground2_tlName: null
	,tiles_1_ground2_tlDescription: null
	,tiles_1_ground2_tlLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground2_tlLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground2_tl",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground2_tlLoad"});
	}
	,tiles_1_ground2_tlUnload: function() {
		this.tiles_1_ground2_tl.unload();
		this.tiles_1_ground2_tl = null;
	}
	,tiles_1_ground3: null
	,tiles_1_ground3Name: null
	,tiles_1_ground3Description: null
	,tiles_1_ground3Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground3Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground3",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground3Load"});
	}
	,tiles_1_ground3Unload: function() {
		this.tiles_1_ground3.unload();
		this.tiles_1_ground3 = null;
	}
	,tiles_1_ground3_t_bg: null
	,tiles_1_ground3_t_bgName: null
	,tiles_1_ground3_t_bgDescription: null
	,tiles_1_ground3_t_bgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground3_t_bgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground3_t_bg",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground3_t_bgLoad"});
	}
	,tiles_1_ground3_t_bgUnload: function() {
		this.tiles_1_ground3_t_bg.unload();
		this.tiles_1_ground3_t_bg = null;
	}
	,tiles_1_ground_b: null
	,tiles_1_ground_bName: null
	,tiles_1_ground_bDescription: null
	,tiles_1_ground_bLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_bLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_b",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_bLoad"});
	}
	,tiles_1_ground_bUnload: function() {
		this.tiles_1_ground_b.unload();
		this.tiles_1_ground_b = null;
	}
	,tiles_1_ground_bl: null
	,tiles_1_ground_blName: null
	,tiles_1_ground_blDescription: null
	,tiles_1_ground_blLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_blLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_bl",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_blLoad"});
	}
	,tiles_1_ground_blUnload: function() {
		this.tiles_1_ground_bl.unload();
		this.tiles_1_ground_bl = null;
	}
	,tiles_1_ground_bl2: null
	,tiles_1_ground_bl2Name: null
	,tiles_1_ground_bl2Description: null
	,tiles_1_ground_bl2Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_bl2Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_bl2",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_bl2Load"});
	}
	,tiles_1_ground_bl2Unload: function() {
		this.tiles_1_ground_bl2.unload();
		this.tiles_1_ground_bl2 = null;
	}
	,tiles_1_ground_l: null
	,tiles_1_ground_lName: null
	,tiles_1_ground_lDescription: null
	,tiles_1_ground_lLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_lLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_l",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_lLoad"});
	}
	,tiles_1_ground_lUnload: function() {
		this.tiles_1_ground_l.unload();
		this.tiles_1_ground_l = null;
	}
	,tiles_1_ground_l_bg: null
	,tiles_1_ground_l_bgName: null
	,tiles_1_ground_l_bgDescription: null
	,tiles_1_ground_l_bgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_l_bgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_l_bg",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_l_bgLoad"});
	}
	,tiles_1_ground_l_bgUnload: function() {
		this.tiles_1_ground_l_bg.unload();
		this.tiles_1_ground_l_bg = null;
	}
	,tiles_1_ground_t: null
	,tiles_1_ground_tName: null
	,tiles_1_ground_tDescription: null
	,tiles_1_ground_tLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_tLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_t",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_tLoad"});
	}
	,tiles_1_ground_tUnload: function() {
		this.tiles_1_ground_t.unload();
		this.tiles_1_ground_t = null;
	}
	,tiles_1_ground_t_bg: null
	,tiles_1_ground_t_bgName: null
	,tiles_1_ground_t_bgDescription: null
	,tiles_1_ground_t_bgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_t_bgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_t_bg",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_t_bgLoad"});
	}
	,tiles_1_ground_t_bgUnload: function() {
		this.tiles_1_ground_t_bg.unload();
		this.tiles_1_ground_t_bg = null;
	}
	,tiles_1_ground_tl: null
	,tiles_1_ground_tlName: null
	,tiles_1_ground_tlDescription: null
	,tiles_1_ground_tlLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_tlLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_tl",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_tlLoad"});
	}
	,tiles_1_ground_tlUnload: function() {
		this.tiles_1_ground_tl.unload();
		this.tiles_1_ground_tl = null;
	}
	,tiles_1_ground_tl_bg: null
	,tiles_1_ground_tl_bgName: null
	,tiles_1_ground_tl_bgDescription: null
	,tiles_1_ground_tl_bgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_tl_bgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_1_ground_tl_bg",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_1_ground_tl_bgLoad"});
	}
	,tiles_1_ground_tl_bgUnload: function() {
		this.tiles_1_ground_tl_bg.unload();
		this.tiles_1_ground_tl_bg = null;
	}
	,tiles_2_1: null
	,tiles_2_1Name: null
	,tiles_2_1Description: null
	,tiles_2_1Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_1Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_2_1",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_1Load"});
	}
	,tiles_2_1Unload: function() {
		this.tiles_2_1.unload();
		this.tiles_2_1 = null;
	}
	,tiles_2_2: null
	,tiles_2_2Name: null
	,tiles_2_2Description: null
	,tiles_2_2Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_2Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_2_2",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_2Load"});
	}
	,tiles_2_2Unload: function() {
		this.tiles_2_2.unload();
		this.tiles_2_2 = null;
	}
	,tiles_2_3: null
	,tiles_2_3Name: null
	,tiles_2_3Description: null
	,tiles_2_3Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_3Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_2_3",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_3Load"});
	}
	,tiles_2_3Unload: function() {
		this.tiles_2_3.unload();
		this.tiles_2_3 = null;
	}
	,tiles_2_4: null
	,tiles_2_4Name: null
	,tiles_2_4Description: null
	,tiles_2_4Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_4Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_2_4",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_4Load"});
	}
	,tiles_2_4Unload: function() {
		this.tiles_2_4.unload();
		this.tiles_2_4 = null;
	}
	,tiles_2_5: null
	,tiles_2_5Name: null
	,tiles_2_5Description: null
	,tiles_2_5Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_5Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadImage("tiles_2_5",function(image) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.ImageList", methodName : "tiles_2_5Load"});
	}
	,tiles_2_5Unload: function() {
		this.tiles_2_5.unload();
		this.tiles_2_5 = null;
	}
	,names: null
	,__class__: kha__$Assets_ImageList
};
var kha__$Assets_SoundList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.SoundList"] = kha__$Assets_SoundList;
kha__$Assets_SoundList.__name__ = ["kha","_Assets","SoundList"];
kha__$Assets_SoundList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,names: null
	,__class__: kha__$Assets_SoundList
};
var kha__$Assets_BlobList = function() {
	this.names = ["MoltenCrater_mp3","player_json","tiles_json","langs_en_json","langs_ru_json","maps_0_json","maps_1_json","maps_2_json","maps_3_json","maps_4_json","maps_5_json","maps_6_json","maps_7_json"];
	this.maps_7_jsonDescription = { name : "maps_7_json", files : ["maps/7.json"], type : "blob"};
	this.maps_7_jsonName = "maps_7_json";
	this.maps_7_json = null;
	this.maps_6_jsonDescription = { name : "maps_6_json", files : ["maps/6.json"], type : "blob"};
	this.maps_6_jsonName = "maps_6_json";
	this.maps_6_json = null;
	this.maps_5_jsonDescription = { name : "maps_5_json", files : ["maps/5.json"], type : "blob"};
	this.maps_5_jsonName = "maps_5_json";
	this.maps_5_json = null;
	this.maps_4_jsonDescription = { name : "maps_4_json", files : ["maps/4.json"], type : "blob"};
	this.maps_4_jsonName = "maps_4_json";
	this.maps_4_json = null;
	this.maps_3_jsonDescription = { name : "maps_3_json", files : ["maps/3.json"], type : "blob"};
	this.maps_3_jsonName = "maps_3_json";
	this.maps_3_json = null;
	this.maps_2_jsonDescription = { name : "maps_2_json", files : ["maps/2.json"], type : "blob"};
	this.maps_2_jsonName = "maps_2_json";
	this.maps_2_json = null;
	this.maps_1_jsonDescription = { name : "maps_1_json", files : ["maps/1.json"], type : "blob"};
	this.maps_1_jsonName = "maps_1_json";
	this.maps_1_json = null;
	this.maps_0_jsonDescription = { name : "maps_0_json", files : ["maps/0.json"], type : "blob"};
	this.maps_0_jsonName = "maps_0_json";
	this.maps_0_json = null;
	this.langs_ru_jsonDescription = { name : "langs_ru_json", files : ["langs/ru.json"], type : "blob"};
	this.langs_ru_jsonName = "langs_ru_json";
	this.langs_ru_json = null;
	this.langs_en_jsonDescription = { name : "langs_en_json", files : ["langs/en.json"], type : "blob"};
	this.langs_en_jsonName = "langs_en_json";
	this.langs_en_json = null;
	this.tiles_jsonDescription = { name : "tiles_json", files : ["tiles.json"], type : "blob"};
	this.tiles_jsonName = "tiles_json";
	this.tiles_json = null;
	this.player_jsonDescription = { name : "player_json", files : ["player.json"], type : "blob"};
	this.player_jsonName = "player_json";
	this.player_json = null;
	this.MoltenCrater_mp3Description = { name : "MoltenCrater_mp3", files : ["MoltenCrater.mp3"], type : "blob"};
	this.MoltenCrater_mp3Name = "MoltenCrater_mp3";
	this.MoltenCrater_mp3 = null;
};
$hxClasses["kha._Assets.BlobList"] = kha__$Assets_BlobList;
kha__$Assets_BlobList.__name__ = ["kha","_Assets","BlobList"];
kha__$Assets_BlobList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,MoltenCrater_mp3: null
	,MoltenCrater_mp3Name: null
	,MoltenCrater_mp3Description: null
	,MoltenCrater_mp3Load: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "MoltenCrater_mp3Load"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("MoltenCrater_mp3",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "MoltenCrater_mp3Load"});
	}
	,MoltenCrater_mp3Unload: function() {
		this.MoltenCrater_mp3.unload();
		this.MoltenCrater_mp3 = null;
	}
	,player_json: null
	,player_jsonName: null
	,player_jsonDescription: null
	,player_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "player_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("player_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "player_jsonLoad"});
	}
	,player_jsonUnload: function() {
		this.player_json.unload();
		this.player_json = null;
	}
	,tiles_json: null
	,tiles_jsonName: null
	,tiles_jsonDescription: null
	,tiles_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "tiles_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("tiles_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "tiles_jsonLoad"});
	}
	,tiles_jsonUnload: function() {
		this.tiles_json.unload();
		this.tiles_json = null;
	}
	,langs_en_json: null
	,langs_en_jsonName: null
	,langs_en_jsonDescription: null
	,langs_en_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "langs_en_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("langs_en_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "langs_en_jsonLoad"});
	}
	,langs_en_jsonUnload: function() {
		this.langs_en_json.unload();
		this.langs_en_json = null;
	}
	,langs_ru_json: null
	,langs_ru_jsonName: null
	,langs_ru_jsonDescription: null
	,langs_ru_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "langs_ru_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("langs_ru_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "langs_ru_jsonLoad"});
	}
	,langs_ru_jsonUnload: function() {
		this.langs_ru_json.unload();
		this.langs_ru_json = null;
	}
	,maps_0_json: null
	,maps_0_jsonName: null
	,maps_0_jsonDescription: null
	,maps_0_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_0_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("maps_0_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_0_jsonLoad"});
	}
	,maps_0_jsonUnload: function() {
		this.maps_0_json.unload();
		this.maps_0_json = null;
	}
	,maps_1_json: null
	,maps_1_jsonName: null
	,maps_1_jsonDescription: null
	,maps_1_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_1_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("maps_1_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_1_jsonLoad"});
	}
	,maps_1_jsonUnload: function() {
		this.maps_1_json.unload();
		this.maps_1_json = null;
	}
	,maps_2_json: null
	,maps_2_jsonName: null
	,maps_2_jsonDescription: null
	,maps_2_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_2_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("maps_2_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_2_jsonLoad"});
	}
	,maps_2_jsonUnload: function() {
		this.maps_2_json.unload();
		this.maps_2_json = null;
	}
	,maps_3_json: null
	,maps_3_jsonName: null
	,maps_3_jsonDescription: null
	,maps_3_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_3_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("maps_3_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_3_jsonLoad"});
	}
	,maps_3_jsonUnload: function() {
		this.maps_3_json.unload();
		this.maps_3_json = null;
	}
	,maps_4_json: null
	,maps_4_jsonName: null
	,maps_4_jsonDescription: null
	,maps_4_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_4_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("maps_4_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_4_jsonLoad"});
	}
	,maps_4_jsonUnload: function() {
		this.maps_4_json.unload();
		this.maps_4_json = null;
	}
	,maps_5_json: null
	,maps_5_jsonName: null
	,maps_5_jsonDescription: null
	,maps_5_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_5_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("maps_5_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_5_jsonLoad"});
	}
	,maps_5_jsonUnload: function() {
		this.maps_5_json.unload();
		this.maps_5_json = null;
	}
	,maps_6_json: null
	,maps_6_jsonName: null
	,maps_6_jsonDescription: null
	,maps_6_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_6_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("maps_6_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_6_jsonLoad"});
	}
	,maps_6_jsonUnload: function() {
		this.maps_6_json.unload();
		this.maps_6_json = null;
	}
	,maps_7_json: null
	,maps_7_jsonName: null
	,maps_7_jsonDescription: null
	,maps_7_jsonLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_7_jsonLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("maps_7_json",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "maps_7_jsonLoad"});
	}
	,maps_7_jsonUnload: function() {
		this.maps_7_json.unload();
		this.maps_7_json = null;
	}
	,names: null
	,__class__: kha__$Assets_BlobList
};
var kha__$Assets_FontList = function() {
	this.names = ["OpenSans_Regular"];
	this.OpenSans_RegularDescription = { name : "OpenSans_Regular", files : ["OpenSans_Regular.ttf"], type : "font"};
	this.OpenSans_RegularName = "OpenSans_Regular";
	this.OpenSans_Regular = null;
};
$hxClasses["kha._Assets.FontList"] = kha__$Assets_FontList;
kha__$Assets_FontList.__name__ = ["kha","_Assets","FontList"];
kha__$Assets_FontList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,OpenSans_Regular: null
	,OpenSans_RegularName: null
	,OpenSans_RegularDescription: null
	,OpenSans_RegularLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 142, className : "kha._Assets.FontList", methodName : "OpenSans_RegularLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadFont("OpenSans_Regular",function(font) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 142, className : "kha._Assets.FontList", methodName : "OpenSans_RegularLoad"});
	}
	,OpenSans_RegularUnload: function() {
		this.OpenSans_Regular.unload();
		this.OpenSans_Regular = null;
	}
	,names: null
	,__class__: kha__$Assets_FontList
};
var kha__$Assets_VideoList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.VideoList"] = kha__$Assets_VideoList;
kha__$Assets_VideoList.__name__ = ["kha","_Assets","VideoList"];
kha__$Assets_VideoList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,names: null
	,__class__: kha__$Assets_VideoList
};
var kha_Assets = function() { };
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = ["kha","Assets"];
kha_Assets.loadEverything = function(callback,filter,uncompressSoundsFilter,failed) {
	var fileCount = 0;
	var _g = 0;
	var _g1 = Type.getInstanceFields(kha__$Assets_BlobList);
	while(_g < _g1.length) {
		var blob = _g1[_g];
		++_g;
		if(StringTools.endsWith(blob,"Load")) {
			fileCount += 1;
		}
	}
	var _g2 = 0;
	var _g11 = Type.getInstanceFields(kha__$Assets_ImageList);
	while(_g2 < _g11.length) {
		var image = _g11[_g2];
		++_g2;
		if(StringTools.endsWith(image,"Load")) {
			fileCount += 1;
		}
	}
	var _g3 = 0;
	var _g12 = Type.getInstanceFields(kha__$Assets_SoundList);
	while(_g3 < _g12.length) {
		var sound = _g12[_g3];
		++_g3;
		if(StringTools.endsWith(sound,"Load")) {
			fileCount += 1;
		}
	}
	var _g4 = 0;
	var _g13 = Type.getInstanceFields(kha__$Assets_FontList);
	while(_g4 < _g13.length) {
		var font = _g13[_g4];
		++_g4;
		if(StringTools.endsWith(font,"Load")) {
			fileCount += 1;
		}
	}
	var _g5 = 0;
	var _g14 = Type.getInstanceFields(kha__$Assets_VideoList);
	while(_g5 < _g14.length) {
		var video = _g14[_g5];
		++_g5;
		if(StringTools.endsWith(video,"Load")) {
			fileCount += 1;
		}
	}
	if(fileCount == 0) {
		callback();
		return;
	}
	var filesLeft = fileCount;
	var onLoaded = function() {
		filesLeft -= 1;
		kha_Assets.progress = 1 - filesLeft / fileCount;
		if(filesLeft == 0) {
			callback();
		}
	};
	var _g6 = 0;
	var _g15 = Type.getInstanceFields(kha__$Assets_BlobList);
	while(_g6 < _g15.length) {
		var blob1 = _g15[_g6];
		++_g6;
		if(StringTools.endsWith(blob1,"Load")) {
			var name = HxOverrides.substr(blob1,0,blob1.length - 4);
			var description = Reflect.field(kha_Assets.blobs,name + "Description");
			if(filter == null || filter(description)) {
				(Reflect.field(kha_Assets.blobs,blob1))(onLoaded,function(err) {
					if(failed == null) {
						var f = haxe_Log.trace;
						var infos = { fileName : "kha/Assets.hx", lineNumber : 134, className : "kha.Assets", methodName : "loadEverything"};
					}
					onLoaded();
				});
			} else {
				onLoaded();
			}
		}
	}
	var _g7 = 0;
	var _g16 = Type.getInstanceFields(kha__$Assets_ImageList);
	while(_g7 < _g16.length) {
		var image1 = _g16[_g7];
		++_g7;
		if(StringTools.endsWith(image1,"Load")) {
			var name1 = HxOverrides.substr(image1,0,image1.length - 4);
			var description1 = Reflect.field(kha_Assets.images,name1 + "Description");
			if(filter == null || filter(description1)) {
				(Reflect.field(kha_Assets.images,image1))(onLoaded,function(err1) {
					if(failed == null) {
						var f1 = haxe_Log.trace;
						var infos1 = { fileName : "kha/Assets.hx", lineNumber : 150, className : "kha.Assets", methodName : "loadEverything"};
					}
					onLoaded();
				});
			} else {
				onLoaded();
			}
		}
	}
	var _g8 = 0;
	var _g17 = Type.getInstanceFields(kha__$Assets_SoundList);
	while(_g8 < _g17.length) {
		var sound1 = [_g17[_g8]];
		++_g8;
		if(StringTools.endsWith(sound1[0],"Load")) {
			var name2 = HxOverrides.substr(sound1[0],0,sound1[0].length - 4);
			var description2 = [Reflect.field(kha_Assets.sounds,name2 + "Description")];
			if(filter == null || filter(description2[0])) {
				(Reflect.field(kha_Assets.sounds,sound1[0]))((function(description3,sound2) {
					return function() {
						if(uncompressSoundsFilter == null || uncompressSoundsFilter(description3[0])) {
							var sound3 = Reflect.field(kha_Assets.sounds,sound2[0].substring(0,sound2[0].length - 4));
							sound3.uncompress(onLoaded);
						} else {
							onLoaded();
						}
					};
				})(description2,sound1),failed != null ? failed : (function(infos2,f2) {
					return function(v) {
						f2[0](v,infos2[0]);
					};
				})([{ fileName : "kha/Assets.hx", lineNumber : 172, className : "kha.Assets", methodName : "loadEverything"}],[haxe_Log.trace]));
			} else {
				onLoaded();
			}
		}
	}
	var _g9 = 0;
	var _g18 = Type.getInstanceFields(kha__$Assets_FontList);
	while(_g9 < _g18.length) {
		var font1 = _g18[_g9];
		++_g9;
		if(StringTools.endsWith(font1,"Load")) {
			var name3 = HxOverrides.substr(font1,0,font1.length - 4);
			var description4 = Reflect.field(kha_Assets.fonts,name3 + "Description");
			if(filter == null || filter(description4)) {
				(Reflect.field(kha_Assets.fonts,font1))(onLoaded,function(err2) {
					if(failed == null) {
						var f3 = haxe_Log.trace;
						var infos3 = { fileName : "kha/Assets.hx", lineNumber : 185, className : "kha.Assets", methodName : "loadEverything"};
					}
					onLoaded();
				});
			} else {
				onLoaded();
			}
		}
	}
	var _g10 = 0;
	var _g19 = Type.getInstanceFields(kha__$Assets_VideoList);
	while(_g10 < _g19.length) {
		var video1 = _g19[_g10];
		++_g10;
		if(StringTools.endsWith(video1,"Load")) {
			var name4 = HxOverrides.substr(video1,0,video1.length - 4);
			var description5 = Reflect.field(kha_Assets.videos,name4 + "Description");
			if(filter == null || filter(description5)) {
				(Reflect.field(kha_Assets.videos,video1))(onLoaded,function(err3) {
					if(failed == null) {
						var f4 = haxe_Log.trace;
						var infos4 = { fileName : "kha/Assets.hx", lineNumber : 200, className : "kha.Assets", methodName : "loadEverything"};
					}
					onLoaded();
				});
			} else {
				onLoaded();
			}
		}
	}
};
kha_Assets.loadImage = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.images,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadImageFromDescription(description,function(image) {
		kha_Assets.images[name] = image;
		done(image);
	},tmp);
};
kha_Assets.loadImageFromPath = function(path,readable,done,failed,pos) {
	var description = { files : [path], readable : readable};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadImageFromDescription(description,done,tmp);
};
kha_Assets.get_imageFormats = function() {
	return kha_LoaderImpl.getImageFormats();
};
kha_Assets.loadBlob = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.blobs,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadBlobFromDescription(description,function(blob) {
		kha_Assets.blobs[name] = blob;
		done(blob);
	},tmp);
};
kha_Assets.loadBlobFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadBlobFromDescription(description,done,tmp);
};
kha_Assets.loadSound = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.sounds,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadSoundFromDescription(description,function(sound) {
		kha_Assets.sounds[name] = sound;
		done(sound);
	},tmp);
	return;
};
kha_Assets.loadSoundFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadSoundFromDescription(description,done,tmp);
	return;
};
kha_Assets.get_soundFormats = function() {
	return kha_LoaderImpl.getSoundFormats();
};
kha_Assets.loadFont = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.fonts,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadFontFromDescription(description,function(font) {
		kha_Assets.fonts[name] = font;
		done(font);
	},tmp);
	return;
};
kha_Assets.loadFontFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadFontFromDescription(description,done,tmp);
	return;
};
kha_Assets.get_fontFormats = function() {
	return ["ttf"];
};
kha_Assets.loadVideo = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.videos,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadVideoFromDescription(description,function(video) {
		kha_Assets.videos[name] = video;
		done(video);
	},tmp);
	return;
};
kha_Assets.loadVideoFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadVideoFromDescription(description,done,tmp);
	return;
};
kha_Assets.get_videoFormats = function() {
	return kha_LoaderImpl.getVideoFormats();
};
kha_Assets.reporter = function(custom,pos) {
	if(custom != null) {
		return custom;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		return function(v) {
			f(v,infos);
		};
	}
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = ["kha","Canvas"];
kha_Canvas.prototype = {
	get_g4: null
	,get_g2: null
	,get_height: null
	,get_width: null
	,__class__: kha_Canvas
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = ["kha","Resource"];
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = ["kha","Image"];
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0,1);
	}
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil,antiAliasingSamples);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false,0,1);
		img1.image = image;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0,1);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	return null;
};
kha_Image.fromVideo = function(video) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(video.element.videoWidth,video.element.videoHeight,kha_graphics4_TextureFormat.RGBA32,false);
		img.video = video.element;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(video.element.videoWidth,video.element.videoHeight,kha_graphics4_TextureFormat.RGBA32,false,0,1);
		img1.video = video.element;
		img1.createTexture();
		return img1;
	}
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.prototype = {
	unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_realWidth: function() {
		return 0;
	}
	,get_realHeight: function() {
		return 0;
	}
	,get_g2: function() {
		return null;
	}
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = ["kha","CanvasImage"];
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,data: null
	,myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,frameBuffer: null
	,g2canvas: null
	,get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context);
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,texture: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.format == kha_graphics4_TextureFormat.RGBA32 ? 4 * this.get_width() * this.get_height() : this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g1 = 0;
				var _g = this.get_height();
				while(_g1 < _g) {
					var y = _g1++;
					var _g3 = 0;
					var _g2 = this.get_width();
					while(_g3 < _g2) {
						var x = _g3++;
						var _this = this.bytes;
						var pos = y * this.get_width() + x;
						var value = _this.b[pos];
						var pos1 = y * this.get_width() * 4 + x * 4;
						rgbaBytes.b[pos1] = value & 255;
						var pos2 = y * this.get_width() * 4 + x * 4 + 1;
						rgbaBytes.b[pos2] = value & 255;
						var pos3 = y * this.get_width() * 4 + x * 4 + 2;
						rgbaBytes.b[pos3] = value & 255;
						var pos4 = y * this.get_width() * 4 + x * 4 + 3;
						rgbaBytes.b[pos4] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha__$Color_Color_$Impl_$ = $hx_exports["kha"]["_Color"]["Color_Impl_"] = {};
$hxClasses["kha._Color.Color_Impl_"] = kha__$Color_Color_$Impl_$;
kha__$Color_Color_$Impl_$.__name__ = ["kha","_Color","Color_Impl_"];
kha__$Color_Color_$Impl_$.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
};
kha__$Color_Color_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
var kha_CompilerDefines = function() { };
$hxClasses["kha.CompilerDefines"] = kha_CompilerDefines;
kha_CompilerDefines.__name__ = ["kha","CompilerDefines"];
var kha_Display = function() {
};
$hxClasses["kha.Display"] = kha_Display;
kha_Display.__name__ = ["kha","Display"];
kha_Display.get_primary = function() {
	return kha_Display.instance;
};
kha_Display.prototype = {
	get_frequency: function() {
		return 60;
	}
	,__class__: kha_Display
};
var kha_DisplayMode = function() { };
$hxClasses["kha.DisplayMode"] = kha_DisplayMode;
kha_DisplayMode.__name__ = ["kha","DisplayMode"];
var kha_Framebuffer = function($window,g1,g2,g4,g5) {
	this.window = $window;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
	this.graphics5 = g5;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = ["kha","Framebuffer"];
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	window: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,graphics5: null
	,init: function(g1,g2,g4,g5) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
		this.graphics5 = g5;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,get_width: function() {
		return kha_System.windowWidth(this.window);
	}
	,get_height: function() {
		return kha_System.windowHeight(this.window);
	}
	,__class__: kha_Framebuffer
};
var kha_FramebufferOptions = function(frequency,verticalSync,colorBufferBits,depthBufferBits,stencilBufferBits,samplesPerPixel) {
	if(samplesPerPixel == null) {
		samplesPerPixel = 1;
	}
	if(stencilBufferBits == null) {
		stencilBufferBits = 8;
	}
	if(depthBufferBits == null) {
		depthBufferBits = 16;
	}
	if(colorBufferBits == null) {
		colorBufferBits = 32;
	}
	if(verticalSync == null) {
		verticalSync = true;
	}
	if(frequency == null) {
		frequency = 60;
	}
	this.samplesPerPixel = 1;
	this.stencilBufferBits = 8;
	this.depthBufferBits = 16;
	this.colorBufferBits = 32;
	this.verticalSync = true;
	this.frequency = 60;
	this.frequency = frequency;
	this.verticalSync = verticalSync;
	this.colorBufferBits = colorBufferBits;
	this.depthBufferBits = depthBufferBits;
	this.stencilBufferBits = stencilBufferBits;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.FramebufferOptions"] = kha_FramebufferOptions;
kha_FramebufferOptions.__name__ = ["kha","FramebufferOptions"];
kha_FramebufferOptions.prototype = {
	frequency: null
	,verticalSync: null
	,colorBufferBits: null
	,depthBufferBits: null
	,stencilBufferBits: null
	,samplesPerPixel: null
	,__class__: kha_FramebufferOptions
};
var kha_AlignedQuad = function() {
};
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = ["kha","AlignedQuad"];
kha_AlignedQuad.prototype = {
	x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,xadvance: null
	,__class__: kha_AlignedQuad
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) {
		var char = chars[_g];
		++_g;
		char.yoff += this.baseline;
	}
	this.texture = kha_Image.create(width,height,kha_graphics4_TextureFormat.L8);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g1 = 0;
	var _g2 = height;
	while(_g1 < _g2) {
		var y = _g1++;
		var _g3 = 0;
		var _g21 = width;
		while(_g3 < _g21) {
			var x = _g3++;
			var v = pixels.readU8(pos);
			bytes.b[pos] = v & 255;
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = ["kha","KravurImage"];
kha_KravurImage.prototype = {
	mySize: null
	,chars: null
	,texture: null
	,width: null
	,height: null
	,baseline: null
	,getTexture: function() {
		return this.texture;
	}
	,getBakedQuad: function(q,char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		var ipw = 1.0 / this.width;
		var iph = 1.0 / this.height;
		var b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		var round_x = Math.round(xpos + b.xoff);
		var round_y = Math.round(ypos + b.yoff);
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	,getCharWidth: function(charIndex) {
		if(this.chars.length == 0) {
			return 0;
		}
		var offset = kha_KravurImage.charBlocks[0];
		if(charIndex < offset) {
			return this.chars[0].xadvance;
		}
		var _g1 = 1;
		var _g = kha_KravurImage.charBlocks.length / 2 | 0;
		while(_g1 < _g) {
			var i = _g1++;
			var prevEnd = kha_KravurImage.charBlocks[i * 2 - 1];
			var start = kha_KravurImage.charBlocks[i * 2];
			if(charIndex > start - 1) {
				offset += start - 1 - prevEnd;
			}
		}
		if(charIndex - offset >= this.chars.length) {
			return this.chars[0].xadvance;
		}
		return this.chars[charIndex - offset].xadvance;
	}
	,getHeight: function() {
		return this.mySize;
	}
	,stringWidth: function(string) {
		var str = new String(string);
		var width = 0;
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) {
			var c = _g1++;
			width += this.getCharWidth(HxOverrides.cca(str,c));
		}
		return width;
	}
	,charactersWidth: function(characters,start,length) {
		var width = 0;
		var _g1 = start;
		var _g = start + length;
		while(_g1 < _g) {
			var i = _g1++;
			width += this.getCharWidth(characters[i]);
		}
		return width;
	}
	,getBaselinePosition: function() {
		return this.baseline;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = ["kha","Kravur"];
kha_Kravur.__interfaces__ = [kha_Resource];
kha_Kravur.prototype = {
	oldGlyphs: null
	,blob: null
	,images: null
	,_get: function(fontSize) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		if(glyphs != this.oldGlyphs) {
			this.oldGlyphs = glyphs;
			kha_KravurImage.charBlocks = [glyphs[0]];
			var nextChar = kha_KravurImage.charBlocks[0] + 1;
			var _g1 = 1;
			var _g = glyphs.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(glyphs[i] != nextChar) {
					kha_KravurImage.charBlocks.push(glyphs[i - 1]);
					kha_KravurImage.charBlocks.push(glyphs[i]);
					nextChar = glyphs[i] + 1;
				} else {
					++nextChar;
				}
			}
			kha_KravurImage.charBlocks.push(glyphs[glyphs.length - 1]);
		}
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var width = 64;
			var height = 32;
			var this1 = new Array(glyphs.length);
			var baked = this1;
			var _g11 = 0;
			var _g2 = baked.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				baked[i1] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			}
			var pixels = null;
			var status = -1;
			while(status <= 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,0,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,0);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var ascent = Math.round(metrics.ascent * scale);
			var descent = Math.round(metrics.descent * scale);
			var lineGap = Math.round(metrics.lineGap * scale);
			var image = new kha_KravurImage(fontSize | 0,ascent,descent,lineGap,width,height,baked,pixels);
			this.images.h[imageIndex] = image;
			return image;
		}
		return this.images.h[imageIndex];
	}
	,height: function(fontSize) {
		return this._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this._get(fontSize).stringWidth(str);
	}
	,unload: function() {
		this.blob = null;
		this.images = null;
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = ["kha","LoaderImpl"];
kha_LoaderImpl.getImageFormats = function() {
	return ["png","jpg","hdr"];
};
kha_LoaderImpl.loadImageFromDescription = function(desc,done,failed) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			var tmp = kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,kha_graphics4_TextureFormat.RGBA128,readable ? kha_graphics4_Usage.DynamicUsage : kha_graphics4_Usage.StaticUsage);
			done(tmp);
		},failed);
	} else {
		var img = window.document.createElement("img");
		img.onerror = function(event) {
			failed({ url : desc.files[0], error : event});
		};
		img.onload = function(event1) {
			var tmp1 = kha_Image.fromImage(img,readable);
			done(tmp1);
		};
		img.src = desc.files[0];
		img.crossOrigin = "";
	}
};
kha_LoaderImpl.getSoundFormats = function() {
	var element = window.document.createElement("audio");
	var formats = [];
	if(element.canPlayType("audio/mp4") != "") {
		formats.push("mp4");
	}
	if(element.canPlayType("audio/mp3") != "") {
		formats.push("mp3");
	}
	if(kha_SystemImpl._hasWebAudio || element.canPlayType("audio/ogg") != "") {
		formats.push("ogg");
	}
	return formats;
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done,failed) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g1 = 0;
			var _g = desc.files.length;
			while(_g1 < _g) {
				var i = _g1++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g11 = 0;
			var _g2 = desc.files.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var file1 = desc.files[i1];
				if(StringTools.endsWith(file1,".mp3")) {
					new kha_js_WebAudioSound(file1,done,failed);
					return;
				}
			}
		}
		var _g12 = 0;
		var _g3 = desc.files.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var file2 = desc.files[i2];
			if(StringTools.endsWith(file2,".ogg")) {
				new kha_js_WebAudioSound(file2,done,failed);
				return;
			}
		}
	} else if(kha_SystemImpl.mobile) {
		var element1 = window.document.createElement("audio");
		if(element1.canPlayType("audio/mp4") != "") {
			var _g13 = 0;
			var _g4 = desc.files.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				var file3 = desc.files[i3];
				if(StringTools.endsWith(file3,".mp4")) {
					new kha_js_MobileWebAudioSound(file3,done,failed);
					return;
				}
			}
		}
		if(element1.canPlayType("audio/mp3") != "") {
			var _g14 = 0;
			var _g5 = desc.files.length;
			while(_g14 < _g5) {
				var i4 = _g14++;
				var file4 = desc.files[i4];
				if(StringTools.endsWith(file4,".mp3")) {
					new kha_js_MobileWebAudioSound(file4,done,failed);
					return;
				}
			}
		}
		var _g15 = 0;
		var _g6 = desc.files.length;
		while(_g15 < _g6) {
			var i5 = _g15++;
			var file5 = desc.files[i5];
			if(StringTools.endsWith(file5,".ogg")) {
				new kha_js_MobileWebAudioSound(file5,done,failed);
				return;
			}
		}
	} else {
		new kha_js_Sound(desc.files,done,failed);
	}
};
kha_LoaderImpl.getVideoFormats = function() {
	return ["mp4","webm"];
};
kha_LoaderImpl.loadVideoFromDescription = function(desc,done,failed) {
	kha_js_Video.fromFile(desc.files,done);
};
kha_LoaderImpl.loadRemote = function(desc,done,failed) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = haxe_io_Bytes.ofData(byteArray);
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g1 = 0;
				var _g = data.length;
				while(_g1 < _g) {
					var i = _g1++;
					bytes.b[i] = data[i] & 255;
				}
			} else {
				failed({ url : desc.files[0]});
				return;
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			failed({ url : desc.files[0]});
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadRemote(desc,done,failed);
};
kha_LoaderImpl.loadFontFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
		done(new kha_Kravur(blob));
	},failed);
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = ["kha","TimeTask"];
kha_TimeTask.prototype = {
	task: null
	,start: null
	,period: null
	,duration: null
	,next: null
	,id: null
	,groupId: null
	,active: null
	,paused: null
	,__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = ["kha","FrameTask"];
kha_FrameTask.prototype = {
	task: null
	,priority: null
	,id: null
	,active: null
	,paused: null
	,__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = ["kha","Scheduler"];
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g1 = 0;
	var _g = kha_Scheduler.DIF_COUNT;
	while(_g1 < _g) {
		var i = _g1++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_Window.get(0).get_vSynced();
	var hz = kha_Display.get_primary().get_frequency();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g1 = 0;
	var _g = kha_Scheduler.DIF_COUNT;
	while(_g1 < _g) {
		var i = _g1++;
		kha_Scheduler.deltas[i] = 0;
	}
	if(restartTimers) {
		var _g2 = 0;
		var _g11 = kha_Scheduler.timeTasks;
		while(_g2 < _g11.length) {
			var timeTask = _g11[_g2];
			++_g2;
			timeTask.paused = false;
		}
		var _g3 = 0;
		var _g12 = kha_Scheduler.frameTasks;
		while(_g3 < _g12.length) {
			var frameTask = _g12[_g3];
			++_g3;
			frameTask.paused = false;
		}
	}
};
kha_Scheduler.executeFrame = function() {
	var now = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var delta = now - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.current;
	if(delta >= 0) {
		if(kha_network_Session.the() == null) {
			if(delta > kha_Scheduler.maxframetime) {
				kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
				delta = kha_Scheduler.maxframetime;
				frameEnd += delta;
			} else if(kha_Scheduler.vsync) {
				var realdif = kha_Scheduler.onedifhz;
				while(realdif < delta - kha_Scheduler.onedifhz) realdif += kha_Scheduler.onedifhz;
				delta = realdif;
				var _g1 = 0;
				var _g = kha_Scheduler.DIF_COUNT - 2;
				while(_g1 < _g) {
					var i = _g1++;
					delta += kha_Scheduler.deltas[i];
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
				delta /= kha_Scheduler.DIF_COUNT;
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
				frameEnd += delta;
			} else {
				var _g11 = 0;
				var _g2 = kha_Scheduler.DIF_COUNT - 1;
				while(_g11 < _g2) {
					var i1 = _g11++;
					kha_Scheduler.deltas[i1] = kha_Scheduler.deltas[i1 + 1];
				}
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
				var next = 0;
				var _g12 = 0;
				var _g3 = kha_Scheduler.DIF_COUNT;
				while(_g12 < _g3) {
					var i2 = _g12++;
					next += kha_Scheduler.deltas[i2];
				}
				next /= kha_Scheduler.DIF_COUNT;
				frameEnd += next;
			}
		} else {
			frameEnd += delta;
		}
		kha_Scheduler.lastTime = frameEnd;
		if(!kha_Scheduler.stopped) {
			kha_Scheduler.current = frameEnd;
		}
		var _g4 = 0;
		var _g13 = kha_Scheduler.pausedTimeTasks;
		while(_g4 < _g13.length) {
			var pausedTask = _g13[_g4];
			++_g4;
			pausedTask.next += delta;
		}
		if(kha_Scheduler.stopped) {
			var _g5 = 0;
			var _g14 = kha_Scheduler.timeTasks;
			while(_g5 < _g14.length) {
				var timeTask = _g14[_g5];
				++_g5;
				timeTask.next += delta;
			}
		}
		kha_Scheduler.executeTimeTasks(frameEnd);
		var _g6 = 0;
		var _g15 = kha_Scheduler.outdatedTimeTasks;
		while(_g6 < _g15.length) {
			var task = _g15[_g6];
			++_g6;
			if(task.next < frameEnd - 10.0) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g7 = 0;
		var _g16 = kha_Scheduler.timeTasksScratchpad;
		while(_g7 < _g16.length) {
			var task1 = _g16[_g7];
			++_g7;
			HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task1);
		}
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	}
	kha_Scheduler.sortFrameTasks();
	var _g8 = 0;
	var _g17 = kha_Scheduler.frameTasks;
	while(_g8 < _g17.length) {
		var frameTask = _g17[_g8];
		++_g8;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g9 = 0;
	var _g18 = kha_Scheduler.frameTasks;
	while(_g9 < _g18.length) {
		var frameTask1 = _g18[_g9];
		++_g9;
		if(!frameTask1.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask1);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.executeTimeTasks = function(until) {
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= until) {
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				} else {
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
				kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
};
kha_Scheduler.archiveTimeTask = function(timeTask,frameEnd) {
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g11 = 0;
	var _g2 = kha_Scheduler.DIF_COUNT;
	while(_g11 < _g2) {
		var i = _g11++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.getTimeTask = function(id) {
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		return kha_Scheduler.activeTimeTask;
	}
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.id == id) {
			return timeTask;
		}
	}
	var _g2 = 0;
	var _g11 = kha_Scheduler.pausedTimeTasks;
	while(_g2 < _g11.length) {
		var timeTask1 = _g11[_g2];
		++_g2;
		if(timeTask1.id == id) {
			return timeTask1;
		}
	}
	return null;
};
kha_Scheduler.removeTimeTask = function(id) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		timeTask.active = false;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
	}
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_ScreenRotation = $hxEnums["kha.ScreenRotation"] = { __ename__ : ["kha","ScreenRotation"], __constructs__ : ["RotationNone","Rotation90","Rotation180","Rotation270"]
	,RotationNone: {_hx_index:0,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation90: {_hx_index:1,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation180: {_hx_index:2,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation270: {_hx_index:3,__enum__:"kha.ScreenRotation",toString:$estr}
};
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = ["kha","Shaders"];
kha_Shaders.init = function() {
	var blobs = [];
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var data = Reflect.field(kha_Shaders,"painter_colored_fragData" + i);
		var bytes = haxe_Unserializer.run(data);
		blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	}
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs,["painter-colored.frag.essl","painter-colored-relaxed.frag.essl","painter-colored-webgl2.frag.essl"]);
	var blobs1 = [];
	var _g1 = 0;
	while(_g1 < 3) {
		var i1 = _g1++;
		var data1 = Reflect.field(kha_Shaders,"painter_colored_vertData" + i1);
		var bytes1 = haxe_Unserializer.run(data1);
		blobs1.push(kha_internal_BytesBlob.fromBytes(bytes1));
	}
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs1,["painter-colored.vert.essl","painter-colored-relaxed.vert.essl","painter-colored-webgl2.vert.essl"]);
	var blobs2 = [];
	var _g2 = 0;
	while(_g2 < 3) {
		var i2 = _g2++;
		var data2 = Reflect.field(kha_Shaders,"painter_image_fragData" + i2);
		var bytes2 = haxe_Unserializer.run(data2);
		blobs2.push(kha_internal_BytesBlob.fromBytes(bytes2));
	}
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs2,["painter-image.frag.essl","painter-image-relaxed.frag.essl","painter-image-webgl2.frag.essl"]);
	var blobs3 = [];
	var _g3 = 0;
	while(_g3 < 3) {
		var i3 = _g3++;
		var data3 = Reflect.field(kha_Shaders,"painter_image_vertData" + i3);
		var bytes3 = haxe_Unserializer.run(data3);
		blobs3.push(kha_internal_BytesBlob.fromBytes(bytes3));
	}
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs3,["painter-image.vert.essl","painter-image-relaxed.vert.essl","painter-image-webgl2.vert.essl"]);
	var blobs4 = [];
	var _g4 = 0;
	while(_g4 < 3) {
		var i4 = _g4++;
		var data4 = Reflect.field(kha_Shaders,"painter_text_fragData" + i4);
		var bytes4 = haxe_Unserializer.run(data4);
		blobs4.push(kha_internal_BytesBlob.fromBytes(bytes4));
	}
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs4,["painter-text.frag.essl","painter-text-relaxed.frag.essl","painter-text-webgl2.frag.essl"]);
	var blobs5 = [];
	var _g5 = 0;
	while(_g5 < 3) {
		var i5 = _g5++;
		var data5 = Reflect.field(kha_Shaders,"painter_text_vertData" + i5);
		var bytes5 = haxe_Unserializer.run(data5);
		blobs5.push(kha_internal_BytesBlob.fromBytes(bytes5));
	}
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs5,["painter-text.vert.essl","painter-text-relaxed.vert.essl","painter-text-webgl2.vert.essl"]);
	var blobs6 = [];
	var _g6 = 0;
	while(_g6 < 3) {
		var i6 = _g6++;
		var data6 = Reflect.field(kha_Shaders,"painter_video_fragData" + i6);
		var bytes6 = haxe_Unserializer.run(data6);
		blobs6.push(kha_internal_BytesBlob.fromBytes(bytes6));
	}
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs6,["painter-video.frag.essl","painter-video-relaxed.frag.essl","painter-video-webgl2.frag.essl"]);
	var blobs7 = [];
	var _g7 = 0;
	while(_g7 < 3) {
		var i7 = _g7++;
		var data7 = Reflect.field(kha_Shaders,"painter_video_vertData" + i7);
		var bytes7 = haxe_Unserializer.run(data7);
		blobs7.push(kha_internal_BytesBlob.fromBytes(bytes7));
	}
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs7,["painter-video.vert.essl","painter-video-relaxed.vert.essl","painter-video-webgl2.vert.essl"]);
};
var kha_Sound = function() {
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = ["kha","Sound"];
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	compressedData: null
	,uncompressedData: null
	,uncompress: function(done) {
		if(this.uncompressedData != null) {
			done();
			return;
		}
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			var this1 = new Float32Array(count * 2);
			this.uncompressedData = this1;
			var _g1 = 0;
			var _g = count;
			while(_g1 < _g) {
				var i = _g1++;
				this.uncompressedData[i * 2] = soundBytes.getFloat(i * 4);
				this.uncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);
			}
		} else {
			var this2 = new Float32Array(count);
			this.uncompressedData = this2;
			var _g11 = 0;
			var _g2 = count;
			while(_g11 < _g2) {
				var i1 = _g11++;
				this.uncompressedData[i1] = soundBytes.getFloat(i1 * 4);
			}
		}
		this.compressedData = null;
		done();
	}
	,__class__: kha_Sound
};
var kha_StorageFile = function() { };
$hxClasses["kha.StorageFile"] = kha_StorageFile;
kha_StorageFile.__name__ = ["kha","StorageFile"];
kha_StorageFile.prototype = {
	read: function() {
		return null;
	}
	,write: function(data) {
	}
	,writeString: function(data) {
		var bytes = haxe_io_Bytes.ofString(data);
		this.write(kha_internal_BytesBlob.fromBytes(bytes));
	}
	,readString: function() {
		var blob = this.read();
		if(blob == null) {
			return null;
		} else {
			return blob.toString();
		}
	}
	,writeObject: function(object) {
		this.writeString(haxe_Serializer.run(object));
	}
	,readObject: function() {
		var s = this.readString();
		if(s == null) {
			return null;
		}
		try {
			return haxe_Unserializer.run(s);
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			return null;
		}
	}
	,__class__: kha_StorageFile
};
var kha_LocalStorageFile = function(name) {
	this.name = name;
};
$hxClasses["kha.LocalStorageFile"] = kha_LocalStorageFile;
kha_LocalStorageFile.__name__ = ["kha","LocalStorageFile"];
kha_LocalStorageFile.encode = function(source) {
	var reserved = [0,10,13,61];
	var output = "";
	var converted;
	var ele;
	var bytes = new Uint8Array(source);
	var _g1 = 0;
	var _g = bytes.length;
	while(_g1 < _g) {
		var i = _g1++;
		ele = bytes[i];
		converted = (ele + 42) % 256;
		if(!Lambda.has(reserved,converted)) {
			output += String.fromCharCode(converted);
		} else {
			converted = (converted + 64) % 256;
			output += "=" + String.fromCharCode(converted);
		}
	}
	return output;
};
kha_LocalStorageFile.decode = function(source) {
	var output = new haxe_io_BytesBuffer();
	var ck = false;
	var c;
	var _g1 = 0;
	var _g = source.length;
	while(_g1 < _g) {
		var i = _g1++;
		c = source.charCodeAt(i);
		if(c == 13 || c == 10) {
			continue;
		}
		if(c == 61 && !ck) {
			ck = true;
			continue;
		}
		if(ck) {
			ck = false;
			c -= 64;
		}
		if(c < 42 && c > 0) {
			output.addByte(c + 214);
		} else {
			output.addByte(c - 42);
		}
	}
	return output.getBytes();
};
kha_LocalStorageFile.__super__ = kha_StorageFile;
kha_LocalStorageFile.prototype = $extend(kha_StorageFile.prototype,{
	name: null
	,read: function() {
		var storage = js_Browser.getLocalStorage();
		if(storage == null) {
			return null;
		}
		var value = storage.getItem(kha_System.get_title() + "_" + this.name);
		if(value == null) {
			return null;
		} else {
			return kha_internal_BytesBlob.fromBytes(kha_LocalStorageFile.decode(value));
		}
	}
	,write: function(data) {
		var storage = js_Browser.getLocalStorage();
		if(storage == null) {
			return;
		}
		storage.setItem(kha_System.get_title() + "_" + this.name,kha_LocalStorageFile.encode(data.bytes.b.bufferValue));
	}
	,__class__: kha_LocalStorageFile
});
var kha_Storage = function() { };
$hxClasses["kha.Storage"] = kha_Storage;
kha_Storage.__name__ = ["kha","Storage"];
kha_Storage.namedFile = function(name) {
	return new kha_LocalStorageFile(name);
};
kha_Storage.defaultFile = function() {
	return kha_Storage.namedFile("default.kha");
};
var kha_SystemOptions = function(title,width,height,$window,framebuffer) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(title == null) {
		title = "Kha";
	}
	this.framebuffer = null;
	this.window = null;
	this.height = -1;
	this.width = -1;
	this.title = "Kha";
	this.title = title;
	this.window = $window == null ? new kha_WindowOptions(null,null,null,null,null,null,null,null,null) : $window;
	if(width > 0) {
		this.window.width = width;
		this.width = width;
	} else {
		this.width = this.window.width;
	}
	if(height > 0) {
		this.window.height = height;
		this.height = height;
	} else {
		this.height = this.window.height;
	}
	if(this.window.title == null) {
		this.window.title = title;
	}
	this.framebuffer = framebuffer == null ? new kha_FramebufferOptions(null,null,null,null,null,null) : framebuffer;
};
$hxClasses["kha.SystemOptions"] = kha_SystemOptions;
kha_SystemOptions.__name__ = ["kha","SystemOptions"];
kha_SystemOptions.prototype = {
	title: null
	,width: null
	,height: null
	,window: null
	,framebuffer: null
	,__class__: kha_SystemOptions
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = ["kha","System"];
kha_System.start = function(options,callback) {
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.get_title = function() {
	return kha_System.theTitle;
};
kha_System.notifyOnFrames = function(listener) {
	kha_System.renderListeners.push(listener);
};
kha_System.removeFramesListener = function(listener) {
	HxOverrides.remove(kha_System.renderListeners,listener);
};
kha_System.render = function(framebuffers) {
	var _g = 0;
	var _g1 = kha_System.renderListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(framebuffers);
	}
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get($window).get_width();
};
kha_System.windowHeight = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get_all()[$window].get_height();
};
kha_System.get_language = function() {
	return kha_SystemImpl.getLanguage();
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = ["kha","GamepadStates"];
kha_GamepadStates.prototype = {
	axes: null
	,buttons: null
	,__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = ["kha","SystemImpl"];
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.ios = kha_SystemImpl.isIOS();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.firefox = kha_SystemImpl.isFirefox();
	kha_SystemImpl.ie = kha_SystemImpl.isIE();
	kha_SystemImpl.initSecondStep(callback);
};
kha_SystemImpl.initSecondStep = function(callback) {
	kha_SystemImpl.init2(kha_SystemImpl.options.window.width,kha_SystemImpl.options.window.height);
	callback(kha_SystemImpl.window);
	if(kha_SystemImpl.ios) {
		window.ondevicemotion = function(event) {
			kha_input_Sensor._changed(0,-event.accelerationIncludingGravity.x,-event.accelerationIncludingGravity.y,-event.accelerationIncludingGravity.z);
		};
	} else {
		window.ondevicemotion = function(event1) {
			kha_input_Sensor._changed(0,event1.accelerationIncludingGravity.x,event1.accelerationIncludingGravity.y,event1.accelerationIncludingGravity.z);
		};
	}
	window.ondeviceorientation = function(event2) {
		kha_input_Sensor._changed(1,event2.beta,event2.gamma,event2.alpha);
	};
};
kha_SystemImpl.isMobile = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	}
	if(kha_SystemImpl.isIOS()) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIOS = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isChrome = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Chrome") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isFirefox = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Firefox") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIE = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("MSIE ") >= 0 || agent.indexOf("Trident/") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getTime = function() {
	var performance = window.performance ? window.performance : window.Date;
	return performance.now() / 1000;
};
kha_SystemImpl.getLanguage = function() {
	return window.navigator.language;
};
kha_SystemImpl.init2 = function(defaultWidth,defaultHeight,backbufferFormat) {
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		kha_SystemImpl.gamepads[i] = new kha_input_Gamepad(i);
		kha_SystemImpl.gamepadStates[i] = new kha_GamepadStates();
	}
	window.addEventListener("gamepadconnected",function(e_) {
		kha_input_Gamepad.sendConnectEvent(e_.gamepad.index);
	});
	window.addEventListener("gamepaddisconnected",function(e_1) {
		kha_input_Gamepad.sendDisconnectEvent(e_1.gamepad.index);
	});
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys = [];
		var _g1 = 0;
		while(_g1 < 256) {
			var i1 = _g1++;
			kha_SystemImpl.pressedKeys.push(false);
		}
		var _g2 = 0;
		while(_g2 < 256) {
			var i2 = _g2++;
			kha_SystemImpl.pressedKeys.push(null);
		}
	}
	window.document.addEventListener("copy",function(e_2) {
		var e = e_2;
		if(kha_System.copyListener != null) {
			var data = kha_System.copyListener();
			if(data != null) {
				e.clipboardData.setData("text/plain",data);
			}
			e.preventDefault();
		}
	});
	window.document.addEventListener("cut",function(e_3) {
		var e1 = e_3;
		if(kha_System.cutListener != null) {
			var data1 = kha_System.cutListener();
			if(data1 != null) {
				e1.clipboardData.setData("text/plain",data1);
			}
			e1.preventDefault();
		}
	});
	window.document.addEventListener("paste",function(e_4) {
		var e2 = e_4;
		if(kha_System.pasteListener != null) {
			var tmp = e2.clipboardData.getData("text/plain");
			kha_System.pasteListener(tmp);
			e2.preventDefault();
		}
	});
	kha_CanvasImage.init();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished(defaultWidth,defaultHeight);
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g1 = 0;
	var _g = pad.axes.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(pad.axes[i] != null) {
			var axis = pad.axes[i];
			if(i % 2 == 1) {
				axis = -axis;
			}
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != axis) {
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g11 = 0;
	var _g2 = pad.buttons.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		if(pad.buttons[i1] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i1] != pad.buttons[i1].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i1] = pad.buttons[i1].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i1,pad.buttons[i1].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.loadFinished = function(defaultWidth,defaultHeight) {
	var canvas = kha_SystemImpl.khanvas;
	if(canvas == null) {
		canvas = window.document.getElementById(kha_CompilerDefines.canvas_id);
	}
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("webgl2",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
		kha_SystemImpl.gl.pixelStorei(37441,1);
		kha_SystemImpl.halfFloat = { HALF_FLOAT_OES : 5131};
		kha_SystemImpl.depthTexture = { UNSIGNED_INT_24_8_WEBGL : 34042};
		kha_SystemImpl.drawBuffers = { COLOR_ATTACHMENT0_WEBGL : 36064};
		kha_SystemImpl.elementIndexUint = true;
		kha_SystemImpl.gl.getExtension("EXT_color_buffer_float");
		kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
		kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
		kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
		if(kha_SystemImpl.anisotropicFilter == null) {
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
		}
		gl = true;
		kha_SystemImpl.gl2 = true;
		kha_Shaders.init();
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		haxe_Log.trace("Could not initialize WebGL 2, falling back to WebGL.",{ fileName : "kha/SystemImpl.hx", lineNumber : 331, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	if(!kha_SystemImpl.gl2) {
		try {
			kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.pixelStorei(37441,1);
				kha_SystemImpl.gl.getExtension("OES_texture_float");
				kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
				kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
				kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
				kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
				kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
				kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
				if(kha_SystemImpl.anisotropicFilter == null) {
					kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
				}
				kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
				kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
				gl = true;
				kha_Shaders.init();
			}
		} catch( e2 ) {
			var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
			haxe_Log.trace("Could not initialize WebGL, falling back to Canvas.",{ fileName : "kha/SystemImpl.hx", lineNumber : 355, className : "kha.SystemImpl", methodName : "loadFinished"});
		}
	}
	kha_SystemImpl.setCanvas(canvas);
	kha_SystemImpl.window = new kha_Window(defaultWidth,defaultHeight,canvas);
	if(gl) {
		var g4 = new kha_js_graphics4_Graphics();
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		kha_js_Font.Kravur = kha_Kravur; kha_Kravur = kha_js_Font;
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_AudioElementAudio._compile();
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	kha_Scheduler.start();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var animate = null;
	animate = function(timestamp) {
		var window1 = window;
		if(requestAnimationFrame == null) {
			window1.setTimeout(animate,16.6666666666666679);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = kha_SystemImpl.getGamepads();
		if(sysGamepads != null) {
			var _g1 = 0;
			var _g = sysGamepads.length;
			while(_g1 < _g) {
				var i = _g1++;
				var pad = sysGamepads[i];
				if(pad != null) {
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render([kha_SystemImpl.frame]);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	if(requestAnimationFrame == null) {
		$window.setTimeout(animate,16.6666666666666679);
	} else {
		requestAnimationFrame(animate);
	}
	canvas.focus();
	canvas.oncontextmenu = function(event) {
		event.stopPropagation();
		event.preventDefault();
	};
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
		canvas.onkeypress = kha_SystemImpl.keyPress;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	canvas.addEventListener("touchcancel",kha_SystemImpl.touchCancel,false);
	window.addEventListener("unload",function() {
		kha_System.shutdown();
	});
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockiOSSound = function() {
	if(!kha_SystemImpl.ios || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	source.start();
	source.stop();
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.unlockSound = function() {
	if(!kha_SystemImpl.soundEnabled) {
		var context = kha_audio2_Audio._context;
		if(context == null) {
			context = kha_audio2_Audio1._context;
		}
		if(context != null) {
			context.resume().then(function(c) {
				kha_SystemImpl.soundEnabled = true;
			})["catch"](function(err) {
				haxe_Log.trace(err,{ fileName : "kha/SystemImpl.hx", lineNumber : 595, className : "kha.SystemImpl", methodName : "unlockSound"});
			});
		}
	}
	kha_SystemImpl.unlockiOSSound();
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.preventDefault();
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	kha_SystemImpl.insideInputEvent = false;
	return false;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		if(event.ctrlKey) {
			kha_SystemImpl.leftMouseCtrlDown = true;
			kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		} else {
			kha_SystemImpl.leftMouseCtrlDown = false;
			kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		}
		if(kha_SystemImpl.khanvas.setCapture != null) {
			kha_SystemImpl.khanvas.setCapture();
		} else {
			kha_SystemImpl.khanvas.ownerDocument.addEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
		}
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(kha_SystemImpl.khanvas.releaseCapture != null) {
		kha_SystemImpl.khanvas.ownerDocument.releaseCapture();
	} else {
		kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
	}
	if(kha_SystemImpl.leftMouseCtrlDown) {
		kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	} else {
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	}
	kha_SystemImpl.leftMouseCtrlDown = false;
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.documentMouseMove = function(event) {
	event.stopPropagation();
	kha_SystemImpl.mouseMove(event);
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		movementX = event.mozMovementX != null ? event.mozMovementX : event.webkitMovementX != null ? event.webkitMovementX : kha_SystemImpl.mouseX - lastMouseX;
		movementY = event.mozMovementY != null ? event.mozMovementY : event.webkitMovementY != null ? event.webkitMovementY : kha_SystemImpl.mouseY - lastMouseY;
	}
	if(kha_SystemImpl.firefox) {
		movementX = movementX * window.devicePixelRatio | 0;
		movementY = movementY * window.devicePixelRatio | 0;
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.stopPropagation();
	event.preventDefault();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(-1);
			if(id == -1) {
				id = kha_SystemImpl.iosTouchs.length;
			}
			kha_SystemImpl.iosTouchs[id] = touch.identifier;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
			kha_SystemImpl.iosTouchs[id] = -1;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.surface.sendMoveEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchCancel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.iosTouchs = [];
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keyDown = function(event) {
	if((event.keyCode < 112 || event.keyCode > 123) && (event.key != null && event.key.length != 1)) {
		event.preventDefault();
	}
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		if(kha_SystemImpl.pressedKeys[event.keyCode]) {
			event.preventDefault();
			return;
		}
		kha_SystemImpl.pressedKeys[event.keyCode] = true;
	} else if(event.repeat) {
		event.preventDefault();
		return;
	}
	kha_SystemImpl.keyboard.sendDownEvent(event.keyCode);
};
kha_SystemImpl.keyUp = function(event) {
	event.preventDefault();
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys[event.keyCode] = false;
	}
	kha_SystemImpl.keyboard.sendUpEvent(event.keyCode);
};
kha_SystemImpl.keyPress = function(event) {
	if(event.which == 0) {
		return;
	}
	event.preventDefault();
	event.stopPropagation();
	kha_SystemImpl.keyboard.sendPressEvent(String.fromCharCode(event.which));
};
kha_SystemImpl.getGamepads = function() {
	if(kha_SystemImpl.chrome && kha_vr_VrInterface.instance.IsVrEnabled()) {
		return null;
	}
	if(navigator.getGamepads) {
		return window.navigator.getGamepads();
	} else {
		return null;
	}
};
var kha_Video = function() {
};
$hxClasses["kha.Video"] = kha_Video;
kha_Video.__name__ = ["kha","Video"];
kha_Video.__interfaces__ = [kha_Resource];
kha_Video.prototype = {
	__class__: kha_Video
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat,samples) {
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.samples = samples;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = ["kha","WebGLImage"];
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		kha_WebGLImage.canvas = window.document.createElement("canvas");
		if(kha_WebGLImage.canvas != null) {
			kha_WebGLImage.context = kha_WebGLImage.canvas.getContext("2d");
			kha_WebGLImage.canvas.width = 4096;
			kha_WebGLImage.canvas.height = 4096;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format._hx_index) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,samples: null
	,frameBuffer: null
	,renderBuffer: null
	,texture: null
	,depthTexture: null
	,graphics2: null
	,graphics4: null
	,depthStencilFormat: null
	,get_g2: function() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_js_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			var _g = this.format;
			switch(_g._hx_index) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			if(kha_SystemImpl.gl.checkFramebufferStatus(36160) != 36053) {
				haxe_Log.trace("WebGL error: Framebuffer incomplete",{ fileName : "kha/WebGLImage.hx", lineNumber : 225, className : "kha.WebGLImage", methodName : "createTexture"});
			}
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			var _g1 = this.format;
			switch(_g1._hx_index) {
			case 0:
				if((this.image instanceof Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				if(depthStencilFormat == 1) {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				}
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,bytesToArray: function(bytes) {
		var _g = this.format;
		switch(_g._hx_index) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			var _g = this.format;
			switch(_g._hx_index) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g1 = 0;
					var _g2 = this.get_height();
					while(_g1 < _g2) {
						var y = _g1++;
						var _g3 = 0;
						var _g21 = this.get_width();
						while(_g3 < _g21) {
							var x = _g3++;
							var _this = this.bytes;
							var pos = y * this.get_width() + x;
							var value = _this.b[pos];
							var pos1 = y * this.get_width() * 4 + x * 4;
							rgbaBytes.b[pos1] = value & 255;
							var pos2 = y * this.get_width() * 4 + x * 4 + 1;
							rgbaBytes.b[pos2] = value & 255;
							var pos3 = y * this.get_width() * 4 + x * 4 + 2;
							rgbaBytes.b[pos3] = value & 255;
							var pos4 = y * this.get_width() * 4 + x * 4 + 3;
							rgbaBytes.b[pos4] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
	}
	,__class__: kha_WebGLImage
});
var kha_Window = function(defaultWidth,defaultHeight,canvas) {
	this.canvas = canvas;
	this.defaultWidth = defaultWidth;
	this.defaultHeight = defaultHeight;
	kha_Window.windows.push(this);
};
$hxClasses["kha.Window"] = kha_Window;
kha_Window.__name__ = ["kha","Window"];
kha_Window.get = function(index) {
	return kha_Window.windows[index];
};
kha_Window.get_all = function() {
	return kha_Window.windows;
};
kha_Window.prototype = {
	canvas: null
	,defaultWidth: null
	,defaultHeight: null
	,get_width: function() {
		if(this.canvas.width == 0) {
			return this.defaultWidth;
		} else {
			return this.canvas.width;
		}
	}
	,get_height: function() {
		if(this.canvas.height == 0) {
			return this.defaultHeight;
		} else {
			return this.canvas.height;
		}
	}
	,get_vSynced: function() {
		return true;
	}
	,__class__: kha_Window
};
var kha_WindowOptions = function(title,x,y,width,height,display,visible,windowFeatures,mode) {
	if(mode == null) {
		mode = 0;
	}
	if(windowFeatures == null) {
		windowFeatures = 7;
	}
	if(visible == null) {
		visible = true;
	}
	if(height == null) {
		height = 600;
	}
	if(width == null) {
		width = 800;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	this.mode = 0;
	this.windowFeatures = 7;
	this.visible = true;
	this.display = null;
	this.height = 600;
	this.width = 800;
	this.y = -1;
	this.x = -1;
	this.title = null;
	this.title = title;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.display = display == null ? kha_Display.get_primary() : display;
	this.visible = visible;
	this.windowFeatures = windowFeatures;
	this.mode = mode;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = ["kha","WindowOptions"];
kha_WindowOptions.prototype = {
	title: null
	,x: null
	,y: null
	,width: null
	,height: null
	,display: null
	,visible: null
	,windowFeatures: null
	,mode: null
	,__class__: kha_WindowOptions
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = ["kha","audio1","AudioChannel"];
kha_audio1_AudioChannel.prototype = {
	__class__: kha_audio1_AudioChannel
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = ["kha","audio2","Audio"];
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	var bufferSize = 2048;
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(bufferSize * 4,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(bufferSize,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.audioCallback(e.outputBuffer.length * 2,kha_audio2_Audio.buffer);
			var _g1 = 0;
			var _g = e.outputBuffer.length;
			while(_g1 < _g) {
				var i = _g1++;
				output1[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g11 = 0;
			var _g2 = e.outputBuffer.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				output1[i1] = 0;
				output2[i1] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = ["kha","audio2","Audio1"];
kha_audio2_Audio1._init = function() {
	var this1 = new Array(16);
	kha_audio2_Audio1.soundChannels = this1;
	var this2 = new Array(16);
	kha_audio2_Audio1.streamChannels = this2;
	var this3 = new Array(16);
	kha_audio2_Audio1.internalSoundChannels = this3;
	var this4 = new Array(16);
	kha_audio2_Audio1.internalStreamChannels = this4;
	var this5 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache1 = this5;
	var this6 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache2 = this6;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
};
kha_audio2_Audio1.mix = function(samples,buffer) {
	if(kha_audio2_Audio1.sampleCache1.length < samples) {
		var this1 = new Float32Array(samples);
		kha_audio2_Audio1.sampleCache1 = this1;
		var this2 = new Float32Array(samples);
		kha_audio2_Audio1.sampleCache2 = this2;
	}
	var _g1 = 0;
	var _g = samples;
	while(_g1 < _g) {
		var i = _g1++;
		kha_audio2_Audio1.sampleCache2[i] = 0;
	}
	var _g2 = 0;
	while(_g2 < 16) {
		var i1 = _g2++;
		kha_audio2_Audio1.internalSoundChannels[i1] = kha_audio2_Audio1.soundChannels[i1];
	}
	var _g3 = 0;
	while(_g3 < 16) {
		var i2 = _g3++;
		kha_audio2_Audio1.internalStreamChannels[i2] = kha_audio2_Audio1.streamChannels[i2];
	}
	var _g4 = 0;
	var _g11 = kha_audio2_Audio1.internalSoundChannels;
	while(_g4 < _g11.length) {
		var channel = _g11[_g4];
		++_g4;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g31 = 0;
		var _g21 = samples;
		while(_g31 < _g21) {
			var i3 = _g31++;
			var _g41 = i3;
			var _g5 = kha_audio2_Audio1.sampleCache2;
			_g5[_g41] += kha_audio2_Audio1.sampleCache1[i3] * channel.get_volume();
		}
	}
	var _g6 = 0;
	var _g12 = kha_audio2_Audio1.internalStreamChannels;
	while(_g6 < _g12.length) {
		var channel1 = _g12[_g6];
		++_g6;
		if(channel1 == null || channel1.get_finished()) {
			continue;
		}
		channel1.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g32 = 0;
		var _g22 = samples;
		while(_g32 < _g22) {
			var i4 = _g32++;
			var _g42 = i4;
			var _g51 = kha_audio2_Audio1.sampleCache2;
			_g51[_g42] += kha_audio2_Audio1.sampleCache1[i4] * channel1.get_volume();
		}
	}
	var _g13 = 0;
	var _g7 = samples;
	while(_g13 < _g7) {
		var i5 = _g13++;
		var a = kha_audio2_Audio1.sampleCache2[i5];
		var a1 = a < 1.0 ? a : 1.0;
		buffer.data[buffer.writeLocation] = a1 > -1.0 ? a1 : -1.0;
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
var kha_audio2_AudioChannel = function(looping) {
	this.paused = false;
	this.looping = looping;
	this.myVolume = 1;
	this.myPosition = 0;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = ["kha","audio2","AudioChannel"];
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	data: null
	,myVolume: null
	,myPosition: null
	,paused: null
	,looping: null
	,nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g1 = 0;
			var _g = length;
			while(_g1 < _g) {
				var i = _g1++;
				samples[i] = 0;
			}
			return;
		}
		var w_ptr = 0;
		var chk_ptr = 0;
		while(w_ptr < length) {
			var addressable_data = this.data.length - this.myPosition;
			var next_chunk = addressable_data < length - w_ptr ? addressable_data : length - w_ptr;
			while(chk_ptr < next_chunk) {
				samples[w_ptr] = this.data[this.myPosition];
				++this.myPosition;
				++chk_ptr;
				++w_ptr;
			}
			if(!this.looping) {
				break;
			} else {
				chk_ptr = 0;
				if(this.myPosition >= this.data.length) {
					this.myPosition = 0;
				}
			}
		}
		while(w_ptr < length) {
			samples[w_ptr] = 0;
			++w_ptr;
		}
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,get_finished: function() {
		return this.myPosition >= this.data.length;
	}
	,__class__: kha_audio2_AudioChannel
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	var this1 = new Float32Array(size);
	this.data = this1;
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = ["kha","audio2","Buffer"];
kha_audio2_Buffer.prototype = {
	channels: null
	,samplesPerSecond: null
	,data: null
	,size: null
	,readLocation: null
	,writeLocation: null
	,__class__: kha_audio2_Buffer
};
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = ["kha","audio2","StreamChannel"];
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	reader: null
	,atend: null
	,loop: null
	,myVolume: null
	,paused: null
	,nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g1 = 0;
			var _g = length;
			while(_g1 < _g) {
				var i = _g1++;
				samples[i] = 0;
			}
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g11 = count;
			var _g2 = length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				samples[i1] = 0;
			}
		}
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = ["kha","audio2","ogg","tools","Crc32"];
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	var this1 = new Array(256);
	kha_audio2_ogg_tools_Crc32.table = this1;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		var _g1 = 0;
		while(_g1 < 8) {
			var j = _g1++;
			s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		}
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = ["kha","audio2","ogg","vorbis","Reader"];
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var bytes1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var bytes1 = input;
	decoder.setupSampleNumber(function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
	var header = decoder.header;
	var count = 0;
	var bufferSize = 4096;
	var this1 = new Float32Array(bufferSize * header.channel);
	var buffer = this1;
	while(true) {
		var n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
		var _g1 = 0;
		var _g = n * header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			output.writeFloat(buffer[i]);
		}
		if(n == 0) {
			break;
		}
		count += n;
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	decoder: null
	,get_header: function() {
		return this.decoder.header;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		var samples = this.get_currentSample();
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,set_currentMillisecond: function(value) {
		var _g = value / 1000;
		var _g1 = this.get_header().sampleRate;
		this.set_currentSample(Math.floor(_$UInt_UInt_$Impl_$.toFloat(_g1) * _g));
		return this.get_currentMillisecond();
	}
	,loopStart: null
	,loopLength: null
	,seekFunc: null
	,inputLength: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = ["kha","audio2","ogg","vorbis","VorbisDecodeState"];
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	page: null
	,eof: null
	,pFirst: null
	,pLast: null
	,validBits: null
	,inputPosition: null
	,input: null
	,discardSamplesDeferred: null
	,segments: null
	,bytesInSeg: null
	,firstDecode: null
	,nextSeg: null
	,acc: null
	,lastSeg: null
	,lastSegWhich: null
	,endSegWithKnownLoc: null
	,knownLocForPacket: null
	,error: null
	,currentLoc: null
	,currentLocValid: null
	,firstAudioPageOffset: null
	,setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var this1 = new Array(segmentCount);
		var vec = this1;
		var _g1 = 0;
		var _g = segmentCount;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i1 = segmentCount - 1;
			while(i1 >= 0) {
				if(this.segments[i1] < 255) {
					break;
				}
				if(i1 >= 0) {
					this.endSegWithKnownLoc = i1;
					this.knownLocForPacket = loc0;
				}
				--i1;
			}
		}
		if(this.firstDecode) {
			var i2 = 0;
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g11 = 0;
			var _g2 = segmentCount;
			while(_g11 < _g2) {
				var i3 = _g11++;
				len += this.segments[i3];
			}
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Object.create(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( e ) {
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
				if((e1 instanceof kha_audio2_ogg_vorbis_data_ReaderError)) {
					this.lastSeg = true;
					this.error = e1;
					return 0;
				} else {
					throw e;
				}
			}
			if((this.page.flag & 1) == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( e ) {
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
				if((e1 instanceof haxe_io_Eof)) {
					var e2 = e1;
					eof = true;
					x = 0;
				} else {
					throw e;
				}
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z1 = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z1;
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 308, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 311, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		} else {
			var tmp = previousLength == 0 && currentLocValid;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = _$UInt_UInt_$Impl_$.gte(inputLength,65536) && _$UInt_UInt_$Impl_$.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g._hx_index) {
		case 0:
			var l = _g.last;
			var e = _g.end;
			end = e;
			last = l;
			break;
		case 1:
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		var lastPageLoc = this.inputPosition;
		_hx_loop1: while(!last) {
			seekFunc(this.inputPosition = end);
			var _g1 = this.findPage(seekFunc,inputLength);
			switch(_g1._hx_index) {
			case 0:
				var l1 = _g1.last;
				var e1 = _g1.end;
				end = e1;
				last = l1;
				break;
			case 1:
				break _hx_loop1;
			}
			previousSafe = lastPageLoc + 1;
			lastPageLoc = this.inputPosition;
		}
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var this1 = new Array(6);
		var vec = this1;
		var _g11 = 0;
		var _g2 = 6;
		while(_g11 < _g2) {
			var i = _g11++;
			vec[i] = this.input.readByte();
		}
		var vorbisHeader = vec;
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 553, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				var n = this.input.readByte();
				if(n == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var this1 = new Array(27);
					var header = this1;
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					var _g = 4;
					while(_g < 27) {
						var i = _g++;
						this.inputPosition += 1;
						header[i] = this.input.readByte();
					}
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					var _g1 = 22;
					while(_g1 < 26) {
						var i1 = _g1++;
						header[i1] = 0;
					}
					var crc = 0;
					var _g2 = 0;
					while(_g2 < 27) {
						var i2 = _g2++;
						crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[i2] ^ crc >>> 24];
					}
					var len = 0;
					try {
						var _g11 = 0;
						var _g3 = header[26];
						while(_g11 < _g3) {
							var i3 = _g11++;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g12 = 0;
						var _g4 = len;
						while(_g12 < _g4) {
							var i4 = _g12++;
							this.inputPosition += 1;
							var byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
						}
					} catch( e ) {
						var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
						if((e1 instanceof haxe_io_Eof)) {
							var e2 = e1;
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else {
							throw e;
						}
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( e3 ) {
			var e4 = (e3 instanceof js__$Boot_HaxeError) ? e3.val : e3;
			if((e4 instanceof haxe_io_Eof)) {
				var e5 = e4;
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else {
				throw e3;
			}
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var this1 = new Array(255);
		var packetType = this1;
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var this2 = new Array(27);
		var vec = this2;
		var _g1 = 0;
		var _g = 27;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
		var pageHeader = vec;
		var n = pageHeader[26];
		this.inputPosition += n;
		var this3 = new Array(n);
		var vec1 = this3;
		var _g11 = 0;
		var _g2 = n;
		while(_g11 < _g2) {
			var i1 = _g11++;
			vec1[i1] = this.input.readByte();
		}
		var lacing = vec1;
		var len = 0;
		var _g12 = 0;
		var _g3 = pageHeader[26];
		while(_g12 < _g3) {
			var i2 = _g12++;
			len += lacing[i2];
		}
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (pageHeader[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g13 = 0;
		var _g4 = pageHeader[26];
		while(_g13 < _g4) {
			var i3 = _g13++;
			if(packetStart) {
				if(lacing[i3] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n1 = this.input.readByte();
				if((n1 & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n1 >>= 1;
				var n2 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				var b = n2 < 16384 ? n2 < 16 ? log2_4[n2] : n2 < 512 ? 5 + log2_4[n2 >> 5] : 10 + log2_4[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_4[n2 >> 15] : 20 + log2_4[n2 >> 20] : n2 < 536870912 ? 25 + log2_4[n2 >> 25] : n2 < -2147483648 ? 30 + log2_4[n2 >> 30] : 0;
				n1 &= (1 << b) - 1;
				if(n1 >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n1].blockflag;
				var len1 = lacing[i3] - 1;
				this.inputPosition += len1;
				var this4 = new Array(len1);
				var vec2 = this4;
				var _g14 = 0;
				var _g5 = len1;
				while(_g14 < _g5) {
					var i4 = _g14++;
					vec2[i4] = this.input.readByte();
				}
			} else {
				var len2 = lacing[i3];
				this.inputPosition += len2;
				var this5 = new Array(len2);
				var vec3 = this5;
				var _g15 = 0;
				var _g6 = len2;
				while(_g15 < _g6) {
					var i5 = _g15++;
					vec3[i5] = this.input.readByte();
				}
			}
			packetStart = lacing[i3] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i6 = numPacket - 2;
		while(i6 >= 1) {
			--i6;
			if(packetType[i6]) {
				if(packetType[i6 + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i6;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n1 = c.sortedEntries;
			while(n1 > 1) {
				var m = x + (n1 >> 1);
				if(_$UInt_UInt_$Impl_$.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var _g1 = 0;
		var _g = c.entries;
		while(_g1 < _g) {
			var i = _g1++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 847, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxEnums["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : ["kha","audio2","ogg","vorbis","_VorbisDecodeState","FindPageResult"], __constructs__ : ["Found","NotFound"]
	,Found: ($_=function(end,last) { return {_hx_index:0,end:end,last:last,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}; },$_.__params__ = ["end","last"],$_)
	,NotFound: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}
};
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	var this1 = new Array(header.channel);
	this.channelBuffers = this1;
	var this2 = new Array(header.channel);
	this.previousWindow = this2;
	var this3 = new Array(header.channel);
	this.finalY = this3;
	var _g1 = 0;
	var _g = header.channel;
	while(_g1 < _g) {
		var i = _g1++;
		var this4 = this.channelBuffers;
		var this5 = new Array(header.blocksize1);
		var vec = this5;
		this4[i] = vec;
		var this6 = this.previousWindow;
		var this7 = new Array(header.blocksize1 / 2 | 0);
		var vec1 = this7;
		this6[i] = vec1;
		this.finalY[i] = [];
	}
	var this8 = new Array(2);
	this.a = this8;
	var this9 = new Array(2);
	this.b = this9;
	var this10 = new Array(2);
	this.c = this10;
	var this11 = new Array(2);
	this.window = this11;
	var this12 = new Array(2);
	this.bitReverseData = this12;
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = ["kha","audio2","ogg","vorbis","VorbisDecoder"];
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var header = kha_audio2_ogg_vorbis_data_Header.read(decodeState);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(header,decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	previousWindow: null
	,previousLength: null
	,finalY: null
	,a: null
	,b: null
	,c: null
	,window: null
	,bitReverseData: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,header: null
	,currentSample: null
	,totalSample: null
	,decodeState: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		var b = this.header.sampleRate;
		if((_$UInt_UInt_$Impl_$.toFloat(sampleRate) % _$UInt_UInt_$Impl_$.toFloat(b) | 0) != 0) {
			throw new js__$Boot_HaxeError("Unsupported sampleRate : can't convert " + Std.string(_$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate)) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw new js__$Boot_HaxeError("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var b1 = this.header.sampleRate;
		var sampleRepeat = _$UInt_UInt_$Impl_$.toFloat(sampleRate) / _$UInt_UInt_$Impl_$.toFloat(b1) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g1 = this.channelBufferStart;
			var _g = this.channelBufferStart + k;
			while(_g1 < _g) {
				var j = _g1++;
				var _g3 = 0;
				var _g2 = sampleRepeat;
				while(_g3 < _g2) {
					var sr = _g3++;
					var _g5 = 0;
					var _g4 = this.header.channel;
					while(_g5 < _g4) {
						var i = _g5++;
						var _g7 = 0;
						var _g6 = channelRepeat;
						while(_g7 < _g6) {
							var cr = _g7++;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output[index] = value;
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g11 = n;
		var _g8 = len;
		while(_g11 < _g8) {
			var j1 = _g11++;
			var _g31 = 0;
			var _g21 = sampleRepeat;
			while(_g31 < _g21) {
				var sr1 = _g31++;
				var _g51 = 0;
				var _g41 = this.header.channel;
				while(_g51 < _g41) {
					var i1 = _g51++;
					var _g71 = 0;
					var _g61 = channelRepeat;
					while(_g71 < _g61) {
						var cr1 = _g71++;
						if(useFloat) {
							output[index] = 0;
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(_$UInt_UInt_$Impl_$.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(_$UInt_UInt_$Impl_$.toFloat(endOffset - startOffset) / _$UInt_UInt_$Impl_$.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					probe = attempts >= 8 ? probe2 : _$UInt_UInt_$Impl_$.gt(probe2,probe) ? probe + (probe2 - probe >>> 1) : probe2 + (probe - probe2 >>> 1);
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				var _g = this.decodeState.findPage(seekFunc,inputLength);
				switch(_g._hx_index) {
				case 0:
					break;
				case 1:
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g1 = 0;
			var _g = this.header.channel;
			while(_g1 < _g) {
				var i = _g1++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g3 = 0;
				var _g2 = n;
				while(_g3 < _g2) {
					var j = _g3++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g11 = 0;
		var _g4 = this.header.channel;
		while(_g11 < _g4) {
			var i1 = _g11++;
			var pw1 = this.previousWindow[i1];
			var cb1 = this.channelBuffers[i1];
			var _g31 = 0;
			var _g21 = len - right;
			while(_g31 < _g21) {
				var j1 = _g31++;
				pw1[j1] = cb1[right + j1];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = this.a;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this3 = this.b;
		var this4 = new Array(n2);
		this3[bs] = this4;
		var this5 = this.c;
		var this6 = new Array(n4);
		this5[bs] = this6;
		var this7 = this.window;
		var this8 = new Array(n2);
		this7[bs] = this8;
		var this9 = this.bitReverseData;
		var this10 = new Array(n8);
		this9[bs] = this10;
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = new Array(n2);
		var buf2 = this1;
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		var eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var u = buffer;
		var v = buf2;
		var aaOffset1 = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset1 >= 0) {
			var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			var v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
			var _g = eeOffset0;
			var _g1 = u;
			_g1[_g] = _g1[_g] + u[eeOffset2];
			var _g2 = eeOffset0 + -1;
			var _g11 = u;
			_g11[_g2] = _g11[_g2] + u[eeOffset2 + -1];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
			k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
			var _g3 = eeOffset0 + -2;
			var _g12 = u;
			_g12[_g3] = _g12[_g3] + u[eeOffset2 + -2];
			var _g4 = eeOffset0 + -3;
			var _g13 = u;
			_g13[_g4] = _g13[_g4] + u[eeOffset2 + -3];
			u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
			k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
			var _g5 = eeOffset0 + -4;
			var _g14 = u;
			_g14[_g5] = _g14[_g5] + u[eeOffset2 + -4];
			var _g6 = eeOffset0 + -5;
			var _g15 = u;
			_g15[_g6] = _g15[_g6] + u[eeOffset2 + -5];
			u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
			k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
			var _g7 = eeOffset0 + -6;
			var _g16 = u;
			_g16[_g7] = _g16[_g7] + u[eeOffset2 + -6];
			var _g8 = eeOffset0 + -7;
			var _g17 = u;
			_g17[_g8] = _g17[_g8] + u[eeOffset2 + -7];
			u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off1 = n2 - 1 - n4;
		var eeOffset01 = i_off1;
		var eeOffset21 = i_off1 + -(n >> 3);
		var aOffset1 = 0;
		var i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			var k00_201 = u[eeOffset01] - u[eeOffset21];
			var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
			var _g9 = eeOffset01;
			var _g18 = u;
			_g18[_g9] = _g18[_g9] + u[eeOffset21];
			var _g10 = eeOffset01 + -1;
			var _g19 = u;
			_g19[_g10] = _g19[_g10] + u[eeOffset21 + -1];
			u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
			k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
			var _g20 = eeOffset01 + -2;
			var _g110 = u;
			_g110[_g20] = _g110[_g20] + u[eeOffset21 + -2];
			var _g21 = eeOffset01 + -3;
			var _g111 = u;
			_g111[_g21] = _g111[_g21] + u[eeOffset21 + -3];
			u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
			k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
			var _g22 = eeOffset01 + -4;
			var _g112 = u;
			_g112[_g22] = _g112[_g22] + u[eeOffset21 + -4];
			var _g23 = eeOffset01 + -5;
			var _g113 = u;
			_g113[_g23] = _g113[_g23] + u[eeOffset21 + -5];
			u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
			k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
			var _g24 = eeOffset01 + -6;
			var _g114 = u;
			_g114[_g24] = _g114[_g24] + u[eeOffset21 + -6];
			var _g25 = eeOffset01 + -7;
			var _g115 = u;
			_g115[_g25] = _g115[_g25] + u[eeOffset21 + -7];
			u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset2 = 0;
		var eOffset01 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			var k00_202 = u[eOffset01] - u[eOffset2];
			var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
			var _g26 = eOffset01;
			var _g116 = u;
			_g116[_g26] = _g116[_g26] + u[eOffset2];
			var _g27 = eOffset01 + -1;
			var _g117 = u;
			_g117[_g27] = _g117[_g27] + u[eOffset2 + -1];
			u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
			k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
			var _g28 = eOffset01 + -2;
			var _g118 = u;
			_g118[_g28] = _g118[_g28] + u[eOffset2 + -2];
			var _g29 = eOffset01 + -3;
			var _g119 = u;
			_g119[_g29] = _g119[_g29] + u[eOffset2 + -3];
			u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
			k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
			var _g30 = eOffset01 + -4;
			var _g120 = u;
			_g120[_g30] = _g120[_g30] + u[eOffset2 + -4];
			var _g31 = eOffset01 + -5;
			var _g121 = u;
			_g121[_g31] = _g121[_g31] + u[eOffset2 + -5];
			u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
			k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
			var _g32 = eOffset01 + -6;
			var _g122 = u;
			_g122[_g32] = _g122[_g32] + u[eOffset2 + -6];
			var _g33 = eOffset01 + -7;
			var _g123 = u;
			_g123[_g33] = _g123[_g33] + u[eOffset2 + -7];
			u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		var d01 = n2 - 1 - n8;
		var aOffset3 = 0;
		var eOffset02 = d01;
		var eOffset21 = d01 + -(n >> 4);
		var i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			var k00_203 = u[eOffset02] - u[eOffset21];
			var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
			var _g34 = eOffset02;
			var _g124 = u;
			_g124[_g34] = _g124[_g34] + u[eOffset21];
			var _g35 = eOffset02 + -1;
			var _g125 = u;
			_g125[_g35] = _g125[_g35] + u[eOffset21 + -1];
			u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
			k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
			var _g36 = eOffset02 + -2;
			var _g126 = u;
			_g126[_g36] = _g126[_g36] + u[eOffset21 + -2];
			var _g37 = eOffset02 + -3;
			var _g127 = u;
			_g127[_g37] = _g127[_g37] + u[eOffset21 + -3];
			u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
			k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
			var _g38 = eOffset02 + -4;
			var _g128 = u;
			_g128[_g38] = _g128[_g38] + u[eOffset21 + -4];
			var _g39 = eOffset02 + -5;
			var _g129 = u;
			_g129[_g39] = _g129[_g39] + u[eOffset21 + -5];
			u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
			k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
			var _g40 = eOffset02 + -6;
			var _g130 = u;
			_g130[_g40] = _g130[_g40] + u[eOffset21 + -6];
			var _g41 = eOffset02 + -7;
			var _g131 = u;
			_g131[_g41] = _g131[_g41] + u[eOffset21 + -7];
			u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		var d02 = n2 - 1 - n8 * 2;
		var aOffset4 = 0;
		var eOffset03 = d02;
		var eOffset22 = d02 + -(n >> 4);
		var i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			var k00_204 = u[eOffset03] - u[eOffset22];
			var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
			var _g42 = eOffset03;
			var _g132 = u;
			_g132[_g42] = _g132[_g42] + u[eOffset22];
			var _g43 = eOffset03 + -1;
			var _g133 = u;
			_g133[_g43] = _g133[_g43] + u[eOffset22 + -1];
			u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
			k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
			var _g44 = eOffset03 + -2;
			var _g134 = u;
			_g134[_g44] = _g134[_g44] + u[eOffset22 + -2];
			var _g45 = eOffset03 + -3;
			var _g135 = u;
			_g135[_g45] = _g135[_g45] + u[eOffset22 + -3];
			u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
			k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
			var _g46 = eOffset03 + -4;
			var _g136 = u;
			_g136[_g46] = _g136[_g46] + u[eOffset22 + -4];
			var _g47 = eOffset03 + -5;
			var _g137 = u;
			_g137[_g47] = _g137[_g47] + u[eOffset22 + -5];
			u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
			k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
			var _g48 = eOffset03 + -6;
			var _g138 = u;
			_g138[_g48] = _g138[_g48] + u[eOffset22 + -6];
			var _g49 = eOffset03 + -7;
			var _g139 = u;
			_g139[_g49] = _g139[_g49] + u[eOffset22 + -7];
			u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		var d03 = n2 - 1 - n8 * 3;
		var aOffset5 = 0;
		var eOffset04 = d03;
		var eOffset23 = d03 + -(n >> 4);
		var i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			var k00_205 = u[eOffset04] - u[eOffset23];
			var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
			var _g50 = eOffset04;
			var _g140 = u;
			_g140[_g50] = _g140[_g50] + u[eOffset23];
			var _g51 = eOffset04 + -1;
			var _g141 = u;
			_g141[_g51] = _g141[_g51] + u[eOffset23 + -1];
			u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
			k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
			var _g52 = eOffset04 + -2;
			var _g142 = u;
			_g142[_g52] = _g142[_g52] + u[eOffset23 + -2];
			var _g53 = eOffset04 + -3;
			var _g143 = u;
			_g143[_g53] = _g143[_g53] + u[eOffset23 + -3];
			u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
			k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
			var _g54 = eOffset04 + -4;
			var _g144 = u;
			_g144[_g54] = _g144[_g54] + u[eOffset23 + -4];
			var _g55 = eOffset04 + -5;
			var _g145 = u;
			_g145[_g55] = _g145[_g55] + u[eOffset23 + -5];
			u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
			k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
			var _g56 = eOffset04 + -6;
			var _g146 = u;
			_g146[_g56] = _g146[_g56] + u[eOffset23 + -6];
			var _g57 = eOffset04 + -7;
			var _g147 = u;
			_g147[_g57] = _g147[_g57] + u[eOffset23 + -7];
			u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		var _g148 = 2;
		var _g58 = ld - 3 >> 1;
		while(_g148 < _g58) {
			var l = _g148++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g310 = 0;
			var _g210 = lim;
			while(_g310 < _g210) {
				var i6 = _g310++;
				var d04 = n2 - 1 - k0 * i6;
				var k1 = 1 << l + 3;
				var aOffset6 = 0;
				var eOffset05 = d04;
				var eOffset24 = d04 + -k0_2;
				var i7 = (n >> l + 4 >> 2) + 1;
				while(--i7 > 0) {
					var k00_206 = u[eOffset05] - u[eOffset24];
					var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
					var _g59 = eOffset05;
					var _g149 = u;
					_g149[_g59] = _g149[_g59] + u[eOffset24];
					var _g60 = eOffset05 + -1;
					var _g150 = u;
					_g150[_g60] = _g150[_g60] + u[eOffset24 + -1];
					u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
					k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
					var _g61 = eOffset05 + -2;
					var _g151 = u;
					_g151[_g61] = _g151[_g61] + u[eOffset24 + -2];
					var _g62 = eOffset05 + -3;
					var _g152 = u;
					_g152[_g62] = _g152[_g62] + u[eOffset24 + -3];
					u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
					k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
					var _g63 = eOffset05 + -4;
					var _g153 = u;
					_g153[_g63] = _g153[_g63] + u[eOffset24 + -4];
					var _g64 = eOffset05 + -5;
					var _g154 = u;
					_g154[_g64] = _g154[_g64] + u[eOffset24 + -5];
					u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
					k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
					var _g65 = eOffset05 + -6;
					var _g155 = u;
					_g155[_g65] = _g155[_g65] + u[eOffset24 + -6];
					var _g66 = eOffset05 + -7;
					var _g156 = u;
					_g156[_g66] = _g156[_g66] + u[eOffset24 + -7];
					u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					eOffset05 -= 8;
					eOffset24 -= 8;
					aOffset6 += k1;
				}
			}
		}
		var _g157 = ld - 3 >> 1;
		var _g67 = ld - 6;
		while(_g157 < _g67) {
			var l1 = _g157++;
			var k01 = n >> l1 + 2;
			var k11 = 1 << l1 + 3;
			var k0_21 = k01 >> 1;
			var rlim = n >> l1 + 6;
			var lim1 = 1 << l1 + 1;
			var aOffset7 = 0;
			var i_off2 = n2 - 1;
			var r = rlim + 1;
			while(--r > 0) {
				var A0 = a[aOffset7];
				var A1 = a[aOffset7 + 1];
				var A2 = a[aOffset7 + k11];
				var A3 = a[aOffset7 + k11 + 1];
				var A4 = a[aOffset7 + k11 * 2];
				var A5 = a[aOffset7 + k11 * 2 + 1];
				var A6 = a[aOffset7 + k11 * 3];
				var A7 = a[aOffset7 + k11 * 3 + 1];
				var eeOffset02 = i_off2;
				var eeOffset22 = i_off2 + -k0_21;
				var i8 = lim1 + 1;
				while(--i8 > 0) {
					var k00 = u[eeOffset02] - u[eeOffset22];
					var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
					u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
					u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
					u[eeOffset22] = k00 * A0 - k111 * A1;
					u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
					k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
					k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
					u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
					u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
					u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
					u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
					k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
					k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
					u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
					u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
					u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
					u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
					k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
					k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
					u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
					u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
					u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
					u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
					eeOffset02 -= k01;
					eeOffset22 -= k01;
				}
				aOffset7 += k11 * 4;
				i_off2 -= 8;
			}
		}
		var i_off3 = n2 - 1;
		var A21 = a[n >> 3];
		var zOffset = i_off3;
		var baseOffset = i_off3 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = u[zOffset];
			var t1 = u[zOffset + -8];
			u[zOffset + -8] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + -1];
			t1 = u[zOffset + -9];
			u[zOffset + -9] = t0 - t1;
			u[zOffset + -1] = t0 + t1;
			t0 = u[zOffset + -2];
			t1 = u[zOffset + -10];
			var k001 = t0 - t1;
			u[zOffset + -2] = t0 + t1;
			t0 = u[zOffset + -3];
			t1 = u[zOffset + -11];
			var k112 = t0 - t1;
			u[zOffset + -3] = t0 + t1;
			u[zOffset + -10] = (k001 + k112) * A21;
			u[zOffset + -11] = (k112 - k001) * A21;
			t0 = u[zOffset + -4];
			t1 = u[zOffset + -12];
			k001 = t1 - t0;
			u[zOffset + -4] = t0 + t1;
			t0 = u[zOffset + -5];
			t1 = u[zOffset + -13];
			k112 = t0 - t1;
			u[zOffset + -5] = t0 + t1;
			u[zOffset + -12] = k112;
			u[zOffset + -13] = k001;
			t0 = u[zOffset + -6];
			t1 = u[zOffset + -14];
			k001 = t1 - t0;
			u[zOffset + -6] = t0 + t1;
			t0 = u[zOffset + -7];
			t1 = u[zOffset + -15];
			k112 = t0 - t1;
			u[zOffset + -7] = t0 + t1;
			u[zOffset + -14] = (k001 + k112) * A21;
			u[zOffset + -15] = (k001 - k112) * A21;
			var t01 = u[zOffset];
			var t11 = u[zOffset + -4];
			var k002 = t01 - t11;
			var y0 = t01 + t11;
			t01 = u[zOffset + -2];
			t11 = u[zOffset + -6];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + -2] = y0 - y2;
			var k33 = u[zOffset + -3] - u[zOffset + -7];
			u[zOffset + -4] = k002 + k33;
			u[zOffset + -6] = k002 - k33;
			t01 = u[zOffset + -1];
			t11 = u[zOffset + -5];
			var k113 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = u[zOffset + -3] + u[zOffset + -7];
			u[zOffset + -1] = y1 + y3;
			u[zOffset + -3] = y1 - y3;
			u[zOffset + -5] = k113 - k22;
			u[zOffset + -7] = k113 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = u[zOffset1];
			var t12 = u[zOffset1 + -4];
			var k003 = t02 - t12;
			var y01 = t02 + t12;
			t02 = u[zOffset1 + -2];
			t12 = u[zOffset1 + -6];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + -2] = y01 - y21;
			var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
			u[zOffset1 + -4] = k003 + k331;
			u[zOffset1 + -6] = k003 - k331;
			t02 = u[zOffset1 + -1];
			t12 = u[zOffset1 + -5];
			var k114 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
			u[zOffset1 + -1] = y11 + y31;
			u[zOffset1 + -3] = y11 - y31;
			u[zOffset1 + -5] = k114 - k221;
			u[zOffset1 + -7] = k114 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset01 = n4 - 4;
		var dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			var k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset2 = 0;
		var eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			var a02 = v[dOffset2] - v[eOffset3 + 2];
			var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = v[dOffset2] + v[eOffset3 + 2];
			var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset4 = n2 - 8;
		var dOffset02 = 0;
		var dOffset12 = n2 - 4;
		var dOffset21 = n2;
		var dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		var rest = this.decodePacketRest(result);
		return rest;
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			if(this.decodeState.readBits(1) != 0) {
				while(true) {
					var _this = this.decodeState;
					var x;
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						x = -1;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						x = _this.input.readByte();
					}
					_this.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var i = this.decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
		if(i == -1 || i >= this.header.modes.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n1;
		var prev;
		var next;
		if(m.blockflag) {
			n1 = this.header.blocksize1;
			prev = this.decodeState.readBits(1);
			next = this.decodeState.readBits(1);
		} else {
			next = 0;
			prev = next;
			n1 = this.header.blocksize0;
		}
		var windowCenter = n1 >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n1 - this.header.blocksize0 >> 2, end : n1 + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n1 * 3 - this.header.blocksize0 >> 2, end : n1 * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n1}};
	}
	,decodePacketRest: function(r) {
		var len = 0;
		var m = this.header.modes[r.mode];
		var this1 = new Array(256);
		var zeroChannel = this1;
		var this2 = new Array(256);
		var reallyZeroChannel = this2;
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g1 = 0;
		var _g = this.header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				if(this.decodeState.readBits(1) != 0) {
					var fy = [];
					var this3 = new Array(256);
					var step2Flag = this3;
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[0] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1);
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[1] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1);
					var _g3 = 0;
					var _g2 = g.partitions;
					while(_g3 < _g2) {
						var j = _g3++;
						var pclass = g.partitionClassList[j];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this = this.decodeState;
							if(_this.validBits < 10) {
								_this.prepHuffman();
							}
							var i1 = c.fastHuffman[_this.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this.acc = _this.acc >>> l;
								_this.validBits -= l;
								if(_this.validBits < 0) {
									_this.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g5 = 0;
						var _g4 = cdim;
						while(_g5 < _g4) {
							var k = _g5++;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp = offset++;
							var tmp1;
							if(book >= 0) {
								var _this1 = this.decodeState;
								var c1 = codebooks[book];
								if(_this1.validBits < 10) {
									_this1.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this1.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this1.acc = _this1.acc >>> l1;
									_this1.validBits -= l1;
									if(_this1.validBits < 0) {
										_this1.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this1.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp1 = val1;
							} else {
								tmp1 = 0;
							}
							fy[tmp] = tmp1;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g31 = 2;
					var _g21 = g.values;
					while(_g31 < _g21) {
						var j1 = _g31++;
						var low = naighbors[j1][0];
						var high = naighbors[j1][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var adx = xlist[high] - x0;
						var err = Math.abs(dy) * (xlist[j1] - x0);
						var off = err / adx | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j1];
						var highroom = range - lowroom;
						var room = highroom < lowroom ? highroom * 2 : lowroom * 2;
						if(val2 != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j1] = true;
							if(val2 >= room) {
								if(highroom > lowroom) {
									fy[j1] = val2 - lowroom + lowroom;
								} else {
									fy[j1] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j1] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j1] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j1] = false;
							fy[j1] = lowroom;
						}
					}
					var _g32 = 0;
					var _g22 = g.values;
					while(_g32 < _g22) {
						var j2 = _g32++;
						if(!step2Flag[j2]) {
							fy[j2] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g11 = 0;
		var _g6 = this.header.channel;
		while(_g11 < _g6) {
			var i3 = _g11++;
			reallyZeroChannel[i3] = zeroChannel[i3];
		}
		var _g12 = 0;
		var _g7 = map.couplingSteps;
		while(_g12 < _g7) {
			var i4 = _g12++;
			if(!zeroChannel[map.chan[i4].magnitude] || !zeroChannel[map.chan[i4].angle]) {
				zeroChannel[map.chan[i4].magnitude] = zeroChannel[map.chan[i4].angle] = false;
			}
		}
		var _g13 = 0;
		var _g8 = map.submaps;
		while(_g13 < _g8) {
			var i5 = _g13++;
			var this4 = new Array(this.header.channel);
			var residueBuffers = this4;
			var this5 = new Array(256);
			var doNotDecode = this5;
			var ch = 0;
			var _g33 = 0;
			var _g23 = this.header.channel;
			while(_g33 < _g23) {
				var j3 = _g33++;
				if(map.chan[j3].mux == i5) {
					if(zeroChannel[j3]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j3];
					}
					++ch;
				}
			}
			var r1 = map.submapResidue[i5];
			var residue = this.header.residueConfig[r1];
			residue.decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i6 = map.couplingSteps;
		var n21 = n >> 1;
		while(--i6 >= 0) {
			var m1 = this.channelBuffers[map.chan[i6].magnitude];
			var a = this.channelBuffers[map.chan[i6].angle];
			var _g14 = 0;
			var _g9 = n21;
			while(_g14 < _g9) {
				var j4 = _g14++;
				var a2;
				var m2;
				if(m1[j4] > 0) {
					if(a[j4] > 0) {
						m2 = m1[j4];
						a2 = m1[j4] - a[j4];
					} else {
						a2 = m1[j4];
						m2 = m1[j4] + a[j4];
					}
				} else if(a[j4] > 0) {
					m2 = m1[j4];
					a2 = m1[j4] + a[j4];
				} else {
					a2 = m1[j4];
					m2 = m1[j4] - a[j4];
				}
				m1[j4] = m2;
				a[j4] = a2;
			}
		}
		var _g15 = 0;
		var _g10 = this.header.channel;
		while(_g15 < _g10) {
			var i7 = _g15++;
			if(reallyZeroChannel[i7]) {
				var _g34 = 0;
				var _g24 = n21;
				while(_g34 < _g24) {
					var j5 = _g34++;
					this.channelBuffers[i7][j5] = 0;
				}
			} else {
				map.doFloor(this.header.floorConfig,i7,n,this.channelBuffers[i7],this.finalY[i7],null);
			}
		}
		var _g16 = 0;
		var _g17 = this.header.channel;
		while(_g16 < _g17) {
			var i8 = _g16++;
			this.inverseMdct(this.channelBuffers[i8],n,m.blockflag);
		}
		var _this2 = this.decodeState;
		while(_this2.bytesInSeg != 0 || !_this2.lastSeg && _this2.next() != 0) {
			_this2.bytesInSeg--;
			_this2.inputPosition += 1;
			_this2.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = ["kha","audio2","ogg","vorbis","VorbisTools"];
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,$window) {
	var n2 = n >> 1;
	var _g1 = 0;
	var _g = n2;
	while(_g1 < _g) {
		var i = _g1++;
		$window[i] = Math.sin(1.57079632679489656 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g1 = 0;
	var _g = n8;
	while(_g1 < _g) {
		var i = _g1++;
		var n1 = i;
		n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
		n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
		n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
		n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
		rev[i] = (n1 >>> 16 | n1 << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g1 = 0;
	var _g = n4;
	while(_g1 < _g) {
		var k = _g1++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k21 = 0;
	var _g11 = 0;
	var _g2 = n8;
	while(_g11 < _g2) {
		var k1 = _g11++;
		cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		k21 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		var this1 = new Array(32);
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = this1;
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			var this2 = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable;
			var this3 = new Array(64);
			this2[i] = this3;
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var x = x0;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		sy = dy < 0 ? base - 1 : base + 1;
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	var _g2 = x;
	var _g11 = output;
	_g11[_g2] = _g11[_g2] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	var _g12 = x + 1;
	var _g3 = x1;
	while(_g12 < _g3) {
		var i1 = _g12++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		var _g21 = i1;
		var _g31 = output;
		_g31[_g21] = _g31[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = ["kha","audio2","ogg","vorbis","data","Codebook"];
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	if(decodeState.readBits(8) != 66 || decodeState.readBits(8) != 67 || decodeState.readBits(8) != 86) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x = decodeState.readBits(8);
	c.dimensions = (decodeState.readBits(8) << 8) + x;
	var x1 = decodeState.readBits(8);
	var y = decodeState.readBits(8);
	c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x1;
	var ordered = decodeState.readBits(1);
	c.sparse = ordered != 0 ? false : decodeState.readBits(1) != 0;
	var this1 = new Array(c.entries);
	var lengths = this1;
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength = decodeState.readBits(5) + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = decodeState.readBits(limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0);
			if(currentEntry + n > c.entries) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g1 = 0;
			var _g = n;
			while(_g1 < _g) {
				var i = _g1++;
				lengths[currentEntry + i] = currentLength;
			}
			currentEntry += n;
			++currentLength;
		}
	} else {
		var _g11 = 0;
		var _g2 = c.entries;
		while(_g11 < _g2) {
			var j = _g11++;
			var present = c.sparse ? decodeState.readBits(1) : 1;
			if(present != 0) {
				lengths[j] = decodeState.readBits(5) + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp;
	if(c.sparse) {
		tmp = total;
	} else {
		var sortedCount = 0;
		var _g12 = 0;
		var _g3 = c.entries;
		while(_g12 < _g3) {
			var j1 = _g12++;
			var l = lengths[j1];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp = sortedCount;
	}
	c.sortedEntries = tmp;
	var values = null;
	if(!c.sparse) {
		var this2 = new Array(c.entries);
		c.codewords = this2;
	} else {
		if(c.sortedEntries != 0) {
			var this3 = new Array(c.sortedEntries);
			c.codewordLengths = this3;
			var this4 = new Array(c.entries);
			c.codewords = this4;
			var this5 = new Array(c.entries);
			values = this5;
		}
		var size = c.entries + 64 * c.sortedEntries;
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		var this6 = new Array(c.sortedEntries);
		c.sortedValues = this6;
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		values = null;
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	c.lookupType = decodeState.readBits(4);
	if(c.lookupType > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x2 = decodeState.readBits(32);
		var mantissa = _$UInt_UInt_$Impl_$.toFloat(x2 & 2097151);
		var sign = x2 & -2147483648;
		var exp = (x2 & 2145386496) >>> 21;
		var res = sign != 0 ? -mantissa : mantissa;
		c.minimumValue = res * Math.pow(2,exp - 788);
		var x3 = decodeState.readBits(32);
		var mantissa1 = _$UInt_UInt_$Impl_$.toFloat(x3 & 2097151);
		var sign1 = x3 & -2147483648;
		var exp1 = (x3 & 2145386496) >>> 21;
		var res1 = sign1 != 0 ? -mantissa1 : mantissa1;
		c.deltaValue = res1 * Math.pow(2,exp1 - 788);
		c.valueBits = decodeState.readBits(4) + 1;
		c.sequenceP = decodeState.readBits(1) != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var this7 = new Array(c.lookupValues);
		var mults = this7;
		var _g13 = 0;
		var _g4 = c.lookupValues;
		while(_g13 < _g4) {
			var j2 = _g13++;
			var q = decodeState.readBits(c.valueBits);
			if(q == -1) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j2] = q;
		}
		var this8 = new Array(c.lookupValues);
		c.multiplicands = this8;
		var _g14 = 0;
		var _g5 = c.lookupValues;
		while(_g14 < _g5) {
			var j3 = _g14++;
			c.multiplicands[j3] = mults[j3] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g15 = 1;
			var _g6 = c.lookupValues;
			while(_g15 < _g6) {
				var j4 = _g15++;
				c.multiplicands[j4] = c.multiplicands[j4 - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	dimensions: null
	,entries: null
	,codewordLengths: null
	,minimumValue: null
	,deltaValue: null
	,valueBits: null
	,lookupType: null
	,sequenceP: null
	,sparse: null
	,lookupValues: null
	,multiplicands: null
	,codewords: null
	,fastHuffman: null
	,sortedCodewords: null
	,sortedValues: null
	,sortedEntries: null
	,computeCodewords: function(len,n,values) {
		var this1 = new Array(32);
		var available = this1;
		var _g = 0;
		while(_g < 32) {
			var x = _g++;
			available[x] = 0;
		}
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			return true;
		}
		var m = 0;
		var count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count1 = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count1] = huffCode;
				this.codewordLengths[count1] = len[i];
				values[count1] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g1 = 0;
			var _g = this.entries;
			while(_g1 < _g) {
				var i = _g1++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
		} else {
			var _g11 = 0;
			var _g2 = this.sortedEntries;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var n1 = this.codewords[i1];
				n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
				n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
				n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
				n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
				this.sortedCodewords[i1] = n1 >>> 16 | n1 << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var len1 = this.sparse ? this.sortedEntries : this.entries;
		var _g12 = 0;
		var _g3 = len1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var huffLen = this.sparse ? lengths[values[i2]] : lengths[i2];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n2 = this.codewords[i2];
				n2 = (n2 & -1431655766) >>> 1 | (n2 & 1431655765) << 1;
				n2 = (n2 & -858993460) >>> 2 | (n2 & 858993459) << 2;
				n2 = (n2 & -252645136) >>> 4 | (n2 & 252645135) << 4;
				n2 = (n2 & -16711936) >>> 8 | (n2 & 16711935) << 8;
				var code = n2 >>> 16 | n2 << 16;
				var x = 0;
				var n3 = this.sortedEntries;
				while(n3 > 1) {
					var m = x + (n3 >> 1);
					if(_$UInt_UInt_$Impl_$.gte(code,this.sortedCodewords[m])) {
						x = m;
						n3 -= n3 >> 1;
					} else {
						n3 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i2];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i2;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		var this1 = new Array(1024);
		this.fastHuffman = this1;
		this.fastHuffman[0] = -1;
		var _g1 = 0;
		var _g = 1024;
		while(_g1 < _g) {
			var i = _g1++;
			this.fastHuffman[i] = -1;
		}
		var len = this.sparse ? this.sortedEntries : this.entries;
		var _g11 = 0;
		var _g2 = len;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.codewordLengths[i1] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i1];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i1];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i1;
					z += 1 << this.codewordLengths[i1];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i1 = _g1++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1;
				var _g3 = output;
				_g3[_g2] = _g3[_g2] + val1;
				if(sequenceP) {
					last = val1 + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last1 = 0.0;
			var _g11 = 0;
			var _g4 = len;
			while(_g11 < _g4) {
				var i2 = _g11++;
				var val2 = multiplicands[z + i2] + last1;
				var _g21 = offset + i2;
				var _g31 = output;
				_g31[_g21] = _g31[_g21] + val2;
				last1 = val2 + minimumValue;
			}
		} else {
			var last2 = 0.0;
			var _g12 = 0;
			var _g5 = len;
			while(_g12 < _g5) {
				var i3 = _g12++;
				var _g22 = offset + i3;
				var _g32 = output;
				_g32[_g22] = _g32[_g22] + (multiplicands[z + i3] + last2);
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i1 = _g1++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1 * step;
				var _g3 = output;
				_g3[_g2] = _g3[_g2] + val1;
				if(sequenceP) {
					last = val1;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g11 = 0;
		var _g4 = len;
		while(_g11 < _g4) {
			var i2 = _g11++;
			var val2 = multiplicands[z + i2] + last;
			var _g21 = offset + i2 * step;
			var _g31 = output;
			_g31[_g21] = _g31[_g21] + val2;
			if(sequenceP) {
				last = val2;
			}
		}
		return true;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g1 = 0;
					var _g = effective;
					while(_g1 < _g) {
						var i1 = _g1++;
						var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val1 = multiplicands[off] + last;
						var _g2 = pInter;
						var _g3 = residueBuffers[cInter];
						_g3[_g2] = _g3[_g2] + val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g11 = 0;
					var _g4 = effective;
					while(_g11 < _g4) {
						var i2 = _g11++;
						var off1 = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val2 = multiplicands[off1] + last;
						var _g21 = pInter;
						var _g31 = residueBuffers[cInter];
						_g31[_g21] = _g31[_g21] + val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g12 = 0;
					var _g5 = effective;
					while(_g12 < _g5) {
						var i3 = _g12++;
						var val3 = multiplicands[z + i3] + last;
						var _g22 = pInter;
						var _g32 = residueBuffers[cInter];
						_g32[_g22] = _g32[_g22] + val3;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val3;
					}
				} else {
					var _g13 = 0;
					var _g6 = effective;
					while(_g13 < _g6) {
						var i4 = _g13++;
						var val4 = multiplicands[z + i4] + last;
						var _g23 = pInter;
						var _g33 = residueBuffers[cInter];
						_g33[_g23] = _g33[_g23] + val4;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g1 = 0;
			var _g = step;
			while(_g1 < _g) {
				var k = _g1++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k1 = 0;
			while(k1 < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k1)) {
					return false;
				}
				k1 += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = ["kha","audio2","ogg","vorbis","data","Comment"];
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	data: null
	,get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			(__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).push(value);
		} else {
			var v = [value];
			var _this2 = this.data;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,v);
			} else {
				_this2.h[key] = v;
			}
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key])[0];
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = ["kha","audio2","ogg","vorbis","data","Floor"];
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	floor.type = decodeState.readBits(16);
	if(floor.type > 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		g.order = decodeState.readBits(8);
		g.rate = decodeState.readBits(16);
		g.barkMapSize = decodeState.readBits(16);
		g.amplitudeBits = decodeState.readBits(6);
		g.amplitudeOffset = decodeState.readBits(8);
		g.numberOfBooks = decodeState.readBits(4) + 1;
		var _g1 = 0;
		var _g = g.numberOfBooks;
		while(_g1 < _g) {
			var j = _g1++;
			g.bookList[j] = decodeState.readBits(8);
		}
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g1 = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		g1.partitions = decodeState.readBits(5);
		var this1 = new Array(g1.partitions);
		g1.partitionClassList = this1;
		var _g11 = 0;
		var _g2 = g1.partitions;
		while(_g11 < _g2) {
			var j1 = _g11++;
			g1.partitionClassList[j1] = decodeState.readBits(4);
			if(g1.partitionClassList[j1] > maxClass) {
				maxClass = g1.partitionClassList[j1];
			}
		}
		var this2 = new Array(maxClass + 1);
		g1.classDimensions = this2;
		var this3 = new Array(maxClass + 1);
		g1.classMasterbooks = this3;
		var this4 = new Array(maxClass + 1);
		g1.classSubclasses = this4;
		var this5 = new Array(maxClass + 1);
		g1.subclassBooks = this5;
		var _g12 = 0;
		var _g3 = maxClass + 1;
		while(_g12 < _g3) {
			var j2 = _g12++;
			g1.classDimensions[j2] = decodeState.readBits(3) + 1;
			g1.classSubclasses[j2] = decodeState.readBits(2);
			if(g1.classSubclasses[j2] != 0) {
				g1.classMasterbooks[j2] = decodeState.readBits(8);
				if(g1.classMasterbooks[j2] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g1.classSubclasses[j2];
			var this6 = g1.subclassBooks;
			var this7 = new Array(kl);
			this6[j2] = this7;
			var _g31 = 0;
			var _g21 = kl;
			while(_g31 < _g21) {
				var k = _g31++;
				g1.subclassBooks[j2][k] = decodeState.readBits(8) - 1;
				if(g1.subclassBooks[j2][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		g1.floor1Multiplier = decodeState.readBits(2) + 1;
		g1.rangebits = decodeState.readBits(4);
		var this8 = new Array(250);
		g1.xlist = this8;
		g1.xlist[0] = 0;
		g1.xlist[1] = 1 << g1.rangebits;
		g1.values = 2;
		var _g13 = 0;
		var _g4 = g1.partitions;
		while(_g13 < _g4) {
			var j3 = _g13++;
			var c = g1.partitionClassList[j3];
			var _g32 = 0;
			var _g22 = g1.classDimensions[c];
			while(_g32 < _g22) {
				var k1 = _g32++;
				g1.xlist[g1.values] = decodeState.readBits(g1.rangebits);
				g1.values++;
			}
		}
		var _g14 = 0;
		var _g5 = g1.values;
		while(_g14 < _g5) {
			var j4 = _g14++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j4].x = g1.xlist[j4];
			p[j4].y = j4;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		var this9 = new Array(g1.values);
		g1.sortedOrder = this9;
		var _g15 = 0;
		var _g6 = g1.values;
		while(_g15 < _g6) {
			var j5 = _g15++;
			g1.sortedOrder[j5] = p[j5].y;
		}
		var this10 = new Array(g1.values);
		g1.neighbors = this10;
		var _g16 = 2;
		var _g7 = g1.values;
		while(_g16 < _g7) {
			var j6 = _g16++;
			var x = g1.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g17 = 0;
			var _g8 = j6;
			while(_g17 < _g8) {
				var i = _g17++;
				if(x[i] > low && x[i] < x[j6]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j6]) {
					phigh = i;
					high = x[i];
				}
			}
			var ne_low = plow;
			var ne_high = phigh;
			var this11 = g1.neighbors;
			var this12 = new Array(g1.values);
			this11[j6] = this12;
			g1.neighbors[j6][0] = ne_low;
			g1.neighbors[j6][1] = ne_high;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	floor0: null
	,floor1: null
	,type: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = ["kha","audio2","ogg","vorbis","data","Floor0"];
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	order: null
	,rate: null
	,barkMapSize: null
	,amplitudeBits: null
	,amplitudeOffset: null
	,numberOfBooks: null
	,bookList: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = ["kha","audio2","ogg","vorbis","data","Floor1"];
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	partitions: null
	,partitionClassList: null
	,classDimensions: null
	,classSubclasses: null
	,classMasterbooks: null
	,subclassBooks: null
	,xlist: null
	,sortedOrder: null
	,neighbors: null
	,floor1Multiplier: null
	,rangebits: null
	,values: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = ["kha","audio2","ogg","vorbis","data","Header"];
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		var x;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[i] = x & 255;
	}
	if(header.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header1.channel = decodeState.input.readByte();
	if(header1.channel == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header1.channel > 16) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.sampleRate = decodeState.input.readInt32();
	if(header1.sampleRate == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x1 = decodeState.input.readByte();
	var log0 = x1 & 15;
	var log1 = x1 >> 4;
	header1.blocksize0 = 1 << log0;
	header1.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x2 = decodeState.input.readByte();
	if((x2 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	var vendorLength = packetInput.readInt32();
	header1.vendor = packetInput.readString(vendorLength);
	header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g1 = 0;
	var _g2 = commentCount;
	while(_g1 < _g2) {
		var i1 = _g1++;
		var n = packetInput.readInt32();
		var str = packetInput.readString(n);
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	var x3 = packetInput.readByte();
	if((x3 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x4;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x4 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x4 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x4 != 5) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header2 = new haxe_io_Bytes(new ArrayBuffer(6));
	var _g3 = 0;
	while(_g3 < 6) {
		var i2 = _g3++;
		var x5;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x5 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x5 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[i2] = x5 & 255;
	}
	if(header2.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount = decodeState.readBits(8) + 1;
	var this1 = new Array(codebookCount);
	header1.codebooks = this1;
	var _g11 = 0;
	var _g4 = codebookCount;
	while(_g11 < _g4) {
		var i3 = _g11++;
		header1.codebooks[i3] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	}
	x2 = decodeState.readBits(6) + 1;
	var _g12 = 0;
	var _g5 = x2;
	while(_g12 < _g5) {
		var i4 = _g12++;
		if(decodeState.readBits(16) != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount = decodeState.readBits(6) + 1;
	var this2 = new Array(floorCount);
	header1.floorConfig = this2;
	var _g13 = 0;
	var _g6 = floorCount;
	while(_g13 < _g6) {
		var i5 = _g13++;
		header1.floorConfig[i5] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
	}
	var residueCount = decodeState.readBits(6) + 1;
	var this3 = new Array(residueCount);
	header1.residueConfig = this3;
	var _g14 = 0;
	var _g7 = residueCount;
	while(_g14 < _g7) {
		var i6 = _g14++;
		header1.residueConfig[i6] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
	}
	var mappingCount = decodeState.readBits(6) + 1;
	var this4 = new Array(mappingCount);
	header1.mapping = this4;
	var _g15 = 0;
	var _g8 = mappingCount;
	while(_g15 < _g8) {
		var i7 = _g15++;
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
		header1.mapping[i7] = map;
		var _g31 = 0;
		var _g21 = map.submaps;
		while(_g31 < _g21) {
			var j = _g31++;
			if(map.submapFloor[j] >= header1.floorConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header1.residueConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount = decodeState.readBits(6) + 1;
	var this5 = new Array(modeCount);
	header1.modes = this5;
	var _g16 = 0;
	var _g9 = modeCount;
	while(_g16 < _g9) {
		var i8 = _g16++;
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header1.modes[i8] = mode;
		if(mode.mapping >= header1.mapping.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header1;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	maximumBitRate: null
	,nominalBitRate: null
	,minimumBitRate: null
	,sampleRate: null
	,channel: null
	,blocksize0: null
	,blocksize1: null
	,codebooks: null
	,floorConfig: null
	,residueConfig: null
	,mapping: null
	,modes: null
	,comment: null
	,vendor: null
	,__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = ["kha","audio2","ogg","vorbis","data","IntPoint"];
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	x: null
	,y: null
	,__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = ["kha","audio2","ogg","vorbis","data","Mapping"];
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType = decodeState.readBits(16);
	if(mappingType != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	var this1 = new Array(channels);
	m.chan = this1;
	var _g1 = 0;
	var _g = channels;
	while(_g1 < _g) {
		var j = _g1++;
		m.chan[j] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	}
	if(decodeState.readBits(1) != 0) {
		m.submaps = decodeState.readBits(4) + 1;
	} else {
		m.submaps = 1;
	}
	if(decodeState.readBits(1) != 0) {
		m.couplingSteps = decodeState.readBits(8) + 1;
		var _g11 = 0;
		var _g2 = m.couplingSteps;
		while(_g11 < _g2) {
			var k = _g11++;
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].magnitude = decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
			var n1 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].angle = decodeState.readBits(n1 < 16384 ? n1 < 16 ? log2_41[n1] : n1 < 512 ? 5 + log2_41[n1 >> 5] : 10 + log2_41[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_41[n1 >> 15] : 20 + log2_41[n1 >> 20] : n1 < 536870912 ? 25 + log2_41[n1 >> 25] : n1 < -2147483648 ? 30 + log2_41[n1 >> 30] : 0);
			if(m.chan[k].magnitude >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	if(decodeState.readBits(2) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g12 = 0;
		var _g3 = channels;
		while(_g12 < _g3) {
			var j1 = _g12++;
			m.chan[j1].mux = decodeState.readBits(4);
			if(m.chan[j1].mux >= m.submaps) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g13 = 0;
		var _g4 = channels;
		while(_g13 < _g4) {
			var j2 = _g13++;
			m.chan[j2].mux = 0;
		}
	}
	var this2 = new Array(m.submaps);
	m.submapFloor = this2;
	var this3 = new Array(m.submaps);
	m.submapResidue = this3;
	var _g14 = 0;
	var _g5 = m.submaps;
	while(_g14 < _g5) {
		var j3 = _g14++;
		decodeState.readBits(8);
		m.submapFloor[j3] = decodeState.readBits(8);
		m.submapResidue[j3] = decodeState.readBits(8);
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	couplingSteps: null
	,chan: null
	,submaps: null
	,submapFloor: null
	,submapResidue: null
	,doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var s = this.chan[i].mux;
		var floor;
		var floor1 = floors[this.submapFloor[s]];
		if(floor1.type == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor1.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g1 = 1;
			var _g = g.values;
			while(_g1 < _g) {
				var q = _g1++;
				var j = g.sortedOrder[q];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g11 = lx;
				var _g2 = n2;
				while(_g11 < _g2) {
					var j1 = _g11++;
					var _g21 = j1;
					var _g3 = target;
					_g3[_g21] = _g3[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = ["kha","audio2","ogg","vorbis","data","MappingChannel"];
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	magnitude: null
	,angle: null
	,mux: null
	,__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = ["kha","audio2","ogg","vorbis","data","Mode"];
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	m.blockflag = decodeState.readBits(1) != 0;
	m.windowtype = decodeState.readBits(16);
	m.transformtype = decodeState.readBits(16);
	m.mapping = decodeState.readBits(8);
	if(m.windowtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	blockflag: null
	,mapping: null
	,windowtype: null
	,transformtype: null
	,__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = ["kha","audio2","ogg","vorbis","data","Page"];
kha_audio2_ogg_vorbis_data_Page.prototype = {
	flag: null
	,clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "kha/audio2/ogg/vorbis/data/Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = ["kha","audio2","ogg","vorbis","data","ProbedPage"];
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	pageStart: null
	,pageEnd: null
	,afterPreviousPageStart: null
	,firstDecodedSample: null
	,lastDecodedSample: null
	,__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = ["kha","audio2","ogg","vorbis","data","ReaderError"];
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	type: null
	,message: null
	,posInfos: null
	,__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxEnums["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : ["kha","audio2","ogg","vorbis","data","ReaderErrorType"], __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"]
	,NEED_MORE_DATA: {_hx_index:0,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_API_MIXING: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OUTOFMEM: {_hx_index:2,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FEATURE_NOT_SUPPORTED: {_hx_index:3,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,TOO_MANY_CHANNELS: {_hx_index:4,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FILE_OPEN_FAILURE: {_hx_index:5,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_WITHOUT_LENGTH: {_hx_index:6,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,UNEXPECTED_EOF: {_hx_index:7,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_INVALID: {_hx_index:8,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_SETUP: {_hx_index:9,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM: {_hx_index:10,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,MISSING_CAPTURE_PATTERN: {_hx_index:11,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM_STRUCTURE_VERSION: {_hx_index:12,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CONTINUED_PACKET_FLAG_INVALID: {_hx_index:13,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INCORRECT_STREAM_SERIAL_NUMBER: {_hx_index:14,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_FIRST_PAGE: {_hx_index:15,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,BAD_PACKET_TYPE: {_hx_index:16,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CANT_FIND_LAST_PAGE: {_hx_index:17,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_FAILED: {_hx_index:18,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OTHER: {_hx_index:19,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
};
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = ["kha","audio2","ogg","vorbis","data","Residue"];
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	r.type = decodeState.readBits(16);
	if(r.type > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var this1 = new Array(64);
	var residueCascade = this1;
	r.begin = decodeState.readBits(24);
	r.end = decodeState.readBits(24);
	r.partSize = decodeState.readBits(24) + 1;
	var classifications = r.classifications = decodeState.readBits(6) + 1;
	r.classbook = decodeState.readBits(8);
	var _g1 = 0;
	var _g = r.classifications;
	while(_g1 < _g) {
		var j = _g1++;
		var highBits = 0;
		var lowBits = decodeState.readBits(3);
		if(decodeState.readBits(1) != 0) {
			highBits = decodeState.readBits(5);
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	var this2 = new Array(r.classifications);
	r.residueBooks = this2;
	var _g11 = 0;
	var _g2 = r.classifications;
	while(_g11 < _g2) {
		var j1 = _g11++;
		var this3 = r.residueBooks;
		var this4 = new Array(8);
		this3[j1] = this4;
		var _g21 = 0;
		while(_g21 < 8) {
			var k = _g21++;
			if((residueCascade[j1] & 1 << k) != 0) {
				r.residueBooks[j1][k] = decodeState.readBits(8);
				if(r.residueBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j1][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	var this5 = new Array(el);
	r.classdata = this5;
	var _g12 = 0;
	var _g3 = el;
	while(_g12 < _g3) {
		var j2 = _g12++;
		var temp = j2;
		var k1 = classwords;
		var this6 = r.classdata;
		var this7 = new Array(classwords);
		var cd = this6[j2] = this7;
		while(--k1 >= 0) {
			cd[k1] = temp % classifications;
			temp = temp / classifications | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	begin: null
	,end: null
	,partSize: null
	,classifications: null
	,classbook: null
	,classdata: null
	,residueBooks: null
	,type: null
	,decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var nRead = this.end - this.begin;
		var partSize = this.partSize;
		var partRead = _$UInt_UInt_$Impl_$.toFloat(nRead) / _$UInt_UInt_$Impl_$.toFloat(partSize) | 0;
		var this1 = new Array(header.channel * partRead + 1);
		var classifications = this1;
		var _g1 = 0;
		var _g = ch;
		while(_g1 < _g) {
			var i = _g1++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g3 = 0;
				var _g2 = buffer.length;
				while(_g3 < _g2) {
					var j = _g3++;
					buffer[j] = 0;
				}
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g11 = 0;
			var _g4 = ch;
			while(_g11 < _g4) {
				var j1 = _g11++;
				if(!doNotDecode[j1]) {
					break;
				} else if(j1 == ch - 1) {
					return;
				}
			}
			var _g5 = 0;
			while(_g5 < 8) {
				var pass = _g5++;
				var pcount = 0;
				var classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i1 = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i2 = classwords;
							while(--i2 >= 0) {
								classifications[i2 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g21 = 0;
						var _g12 = classwords;
						while(_g21 < _g12) {
							var i3 = _g21++;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var c1 = classifications[pcount];
							var b = this.residueBooks[c1][pass];
							if(b >= 0) {
								var book = codebooks[b];
								var result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var z2 = this.begin + pcount * partSize;
						var cInter1 = 0;
						var pInter1 = z2;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i4 = c2.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i4 >= 0) {
								var l1 = c2.codewordLengths[i4];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i4;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val1 = c2.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i5 = classwords;
							while(--i5 >= 0) {
								classifications[i5 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g22 = 0;
						var _g13 = classwords;
						while(_g22 < _g13) {
							var i6 = _g22++;
							if(pcount >= partRead) {
								break;
							}
							var z3 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var book1 = codebooks[b1];
								var result1 = book1.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z3 = z3 + partSize;
								cInter1 = 0;
								pInter1 = z3;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z4 = this.begin + pcount * partSize;
						var cInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						var pInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						if(pass == 0) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i7 = c3.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i7 >= 0) {
								var l2 = c3.codewordLengths[i7];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i7;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val2 = c3.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i8 = classwords;
							while(--i8 >= 0) {
								classifications[i8 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g23 = 0;
						var _g14 = classwords;
						while(_g23 < _g14) {
							var i9 = _g23++;
							if(pcount >= partRead) {
								break;
							}
							var z5 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var book2 = codebooks[b2];
								var result2 = book2.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z5 = z5 + partSize;
								cInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
								pInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g6 = 0;
		while(_g6 < 8) {
			var pass1 = _g6++;
			var pcount1 = 0;
			var classSet1 = 0;
			while(pcount1 < partRead) {
				if(pass1 == 0) {
					var _g24 = 0;
					var _g15 = ch;
					while(_g24 < _g15) {
						var j2 = _g24++;
						if(!doNotDecode[j2]) {
							var c4 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i10 = c4.fastHuffman[decodeState.acc & 1023];
							var val3;
							if(i10 >= 0) {
								var l3 = c4.codewordLengths[i10];
								decodeState.acc = decodeState.acc >>> l3;
								decodeState.validBits -= l3;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val3 = -1;
								} else {
									val3 = i10;
								}
							} else {
								val3 = decodeState.decodeScalarRaw(c4);
							}
							if(c4.sparse) {
								val3 = c4.sortedValues[val3];
							}
							var temp = val3;
							if(temp == -1) {
								return;
							}
							var i11 = classwords;
							while(--i11 >= 0) {
								classifications[j2 * partRead + i11 + pcount1] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g25 = 0;
				var _g16 = classwords;
				while(_g25 < _g16) {
					var i12 = _g25++;
					if(pcount1 >= partRead) {
						break;
					}
					var _g41 = 0;
					var _g31 = ch;
					while(_g41 < _g31) {
						var j3 = _g41++;
						if(!doNotDecode[j3]) {
							var c5 = classifications[j3 * partRead + pcount1];
							var b3 = this.residueBooks[c5][pass1];
							if(b3 >= 0) {
								var target = residueBuffers[j3];
								var offset = this.begin + pcount1 * partSize;
								var n1 = partSize;
								var book3 = codebooks[b3];
								if(!book3.residueDecode(decodeState,target,offset,n1,this.type)) {
									return;
								}
							}
						}
					}
					++pcount1;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = ["kha","graphics1","Graphics"];
var kha_graphics2_Graphics = function() {
	this.transformations = [];
	this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
	this.opacities = [];
	this.opacities.push(1);
	this.myFontSize = 12;
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = ["kha","graphics2","Graphics"];
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.drawSubImage(img,x,y,0,0,img.get_width(),img.get_height());
	}
	,drawSubImage: function(img,x,y,sx,sy,sw,sh) {
		this.drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
	}
	,drawScaledImage: function(img,dx,dy,dw,dh) {
		this.drawScaledSubImage(img,0,0,img.get_width(),img.get_height(),dx,dy,dw,dh);
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,fillRect: function(x,y,width,height) {
	}
	,drawString: function(text,x,y) {
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,get_color: function() {
		return -16777216;
	}
	,set_color: function(color) {
		return -16777216;
	}
	,get_font: function() {
		return null;
	}
	,set_font: function(font) {
		return null;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,set_fontSize: function(value) {
		return this.myFontSize = value;
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,set_opacity: function(opacity) {
		this.setOpacity(opacity);
		return this.opacities[this.opacities.length - 1] = opacity;
	}
	,pipe: null
	,transformations: null
	,opacities: null
	,myFontSize: null
	,setTransformation: function(transformation) {
	}
	,setOpacity: function(opacity) {
	}
	,__class__: kha_graphics2_Graphics
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = ["kha","graphics2","Graphics1"];
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	canvas: null
	,__class__: kha_graphics2_Graphics1
};
var kha_graphics2_ImageScaleQuality = $hxEnums["kha.graphics2.ImageScaleQuality"] = { __ename__ : ["kha","graphics2","ImageScaleQuality"], __constructs__ : ["Low","High"]
	,Low: {_hx_index:0,__enum__:"kha.graphics2.ImageScaleQuality",toString:$estr}
	,High: {_hx_index:1,__enum__:"kha.graphics2.ImageScaleQuality",toString:$estr}
};
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = ["kha","graphics2","truetype","VectorOfIntPointer"];
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	value: null
	,__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = ["kha","graphics2","truetype","Stbtt_temp_rect"];
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = ["kha","graphics2","truetype","Stbtt_temp_glyph_h_metrics"];
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	advanceWidth: null
	,leftSideBearing: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = ["kha","graphics2","truetype","Stbtt_temp_font_v_metrics"];
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	ascent: null
	,descent: null
	,lineGap: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = ["kha","graphics2","truetype","Stbtt_bakedchar"];
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = ["kha","graphics2","truetype","Stbtt_fontinfo"];
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	data: null
	,fontstart: null
	,numGlyphs: null
	,loca: null
	,head: null
	,glyf: null
	,hhea: null
	,hmtx: null
	,kern: null
	,index_map: null
	,indexToLocFormat: null
	,__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = ["kha","graphics2","truetype","Stbtt_vertex"];
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	x: null
	,y: null
	,cx: null
	,cy: null
	,type: null
	,__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = ["kha","graphics2","truetype","Stbtt__bitmap"];
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	w: null
	,h: null
	,stride: null
	,pixels: null
	,pixels_offset: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = ["kha","graphics2","truetype","Stbtt__edge"];
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,invert: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = ["kha","graphics2","truetype","Stbtt__active_edge"];
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	next: null
	,fx: null
	,fdx: null
	,fdy: null
	,direction: null
	,sy: null
	,ey: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = ["kha","graphics2","truetype","Stbtt__point"];
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	x: null
	,y: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = ["kha","graphics2","truetype","StbTruetype"];
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	var num_tables = ch2 | ch1 << 8;
	var tabledir = fontstart + 12;
	var _g1 = 0;
	var _g = num_tables;
	while(_g1 < _g) {
		var i = _g1++;
		var loc = tabledir + 16 * i;
		var c0 = HxOverrides.cca(tag,0);
		var c1 = HxOverrides.cca(tag,1);
		var c2 = HxOverrides.cca(tag,2);
		var c3 = HxOverrides.cca(tag,3);
		if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
			var pos1 = loc + 8;
			var ch11 = data.readU8(pos1);
			var ch21 = data.readU8(pos1 + 1);
			var ch3 = data.readU8(pos1 + 2);
			var ch4 = data.readU8(pos1 + 3);
			return ch4 | ch3 << 8 | ch21 << 16 | ch11 << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	info.data = data;
	info.fontstart = fontstart;
	var cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	if(cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	var t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		var ch1 = data.readU8(pos);
		var ch2 = data.readU8(pos + 1);
		info.numGlyphs = ch2 | ch1 << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos1 = cmap + 2;
	var ch11 = data.readU8(pos1);
	var ch21 = data.readU8(pos1 + 1);
	var numTables = ch21 | ch11 << 8;
	info.index_map = 0;
	var _g1 = 0;
	var _g = numTables;
	while(_g1 < _g) {
		var i = _g1++;
		var encoding_record = cmap + 4 + 8 * i;
		var ch12 = data.readU8(encoding_record);
		var ch22 = data.readU8(encoding_record + 1);
		var _g2 = ch22 | ch12 << 8;
		switch(_g2) {
		case 0:
			var pos2 = encoding_record + 4;
			var ch13 = data.readU8(pos2);
			var ch23 = data.readU8(pos2 + 1);
			var ch3 = data.readU8(pos2 + 2);
			var ch4 = data.readU8(pos2 + 3);
			info.index_map = cmap + (ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24);
			break;
		case 3:
			var pos3 = encoding_record + 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			var _g21 = ch24 | ch14 << 8;
			switch(_g21) {
			case 1:case 10:
				var pos4 = encoding_record + 4;
				var ch15 = data.readU8(pos4);
				var ch25 = data.readU8(pos4 + 1);
				var ch31 = data.readU8(pos4 + 2);
				var ch41 = data.readU8(pos4 + 3);
				info.index_map = cmap + (ch41 | ch31 << 8 | ch25 << 16 | ch15 << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos5 = info.head + 50;
	var ch16 = data.readU8(pos5);
	var ch26 = data.readU8(pos5 + 1);
	info.indexToLocFormat = ch26 | ch16 << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var ch1 = data.readU8(index_map);
	var ch2 = data.readU8(index_map + 1);
	var format = ch2 | ch1 << 8;
	if(format == 0) {
		var pos = index_map + 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		var bytes = ch21 | ch11 << 8;
		if(unicode_codepoint < bytes - 6) {
			return data.readU8(index_map + 6 + unicode_codepoint);
		}
		return 0;
	} else if(format == 6) {
		var pos1 = index_map + 6;
		var ch12 = data.readU8(pos1);
		var ch22 = data.readU8(pos1 + 1);
		var first = ch22 | ch12 << 8;
		var pos2 = index_map + 8;
		var ch13 = data.readU8(pos2);
		var ch23 = data.readU8(pos2 + 1);
		var count = ch23 | ch13 << 8;
		if(unicode_codepoint >= first && unicode_codepoint < first + count) {
			var pos3 = index_map + 10 + (unicode_codepoint - first) * 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			return ch24 | ch14 << 8;
		}
		return 0;
	} else if(format == 2) {
		throw new js__$Boot_HaxeError("Error");
	} else if(format == 4) {
		var pos4 = index_map + 6;
		var ch15 = data.readU8(pos4);
		var ch25 = data.readU8(pos4 + 1);
		var segcount = (ch25 | ch15 << 8) >> 1;
		var pos5 = index_map + 8;
		var ch16 = data.readU8(pos5);
		var ch26 = data.readU8(pos5 + 1);
		var searchRange = (ch26 | ch16 << 8) >> 1;
		var pos6 = index_map + 10;
		var ch17 = data.readU8(pos6);
		var ch27 = data.readU8(pos6 + 1);
		var entrySelector = ch27 | ch17 << 8;
		var pos7 = index_map + 12;
		var ch18 = data.readU8(pos7);
		var ch28 = data.readU8(pos7 + 1);
		var rangeShift = (ch28 | ch18 << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos8 = search + rangeShift * 2;
		var ch19 = data.readU8(pos8);
		var ch29 = data.readU8(pos8 + 1);
		if(unicode_codepoint >= (ch29 | ch19 << 8)) {
			search += rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			searchRange >>= 1;
			var pos9 = search + searchRange * 2;
			var ch110 = data.readU8(pos9);
			var ch210 = data.readU8(pos9 + 1);
			var end = ch210 | ch110 << 8;
			if(unicode_codepoint > end) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var item = search - endCount >> 1;
		var pos10 = endCount + 2 * item;
		var ch111 = data.readU8(pos10);
		var ch211 = data.readU8(pos10 + 1);
		if(unicode_codepoint > (ch211 | ch111 << 8)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var pos11 = index_map + 14 + segcount * 2 + 2 + 2 * item;
		var ch112 = data.readU8(pos11);
		var ch212 = data.readU8(pos11 + 1);
		var start = ch212 | ch112 << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos12 = index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch113 = data.readU8(pos12);
		var ch213 = data.readU8(pos12 + 1);
		var offset = ch213 | ch113 << 8;
		if(offset == 0) {
			var pos13 = index_map + 14 + segcount * 4 + 2 + 2 * item;
			var ch114 = data.readU8(pos13);
			var ch214 = data.readU8(pos13 + 1);
			var n = ch214 | ch114 << 8;
			return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n);
		}
		var pos14 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch115 = data.readU8(pos14);
		var ch215 = data.readU8(pos14 + 1);
		return ch215 | ch115 << 8;
	} else if(format == 12 || format == 13) {
		var pos15 = index_map + 12;
		var ch116 = data.readU8(pos15);
		var ch216 = data.readU8(pos15 + 1);
		var ch3 = data.readU8(pos15 + 2);
		var ch4 = data.readU8(pos15 + 3);
		var ngroups = ch4 | ch3 << 8 | ch216 << 16 | ch116 << 24;
		var low = 0;
		var high = ngroups;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos16 = index_map + 16 + mid * 12;
			var ch117 = data.readU8(pos16);
			var ch217 = data.readU8(pos16 + 1);
			var ch31 = data.readU8(pos16 + 2);
			var ch41 = data.readU8(pos16 + 3);
			var start_char = ch41 | ch31 << 8 | ch217 << 16 | ch117 << 24;
			var pos17 = index_map + 16 + mid * 12 + 4;
			var ch118 = data.readU8(pos17);
			var ch218 = data.readU8(pos17 + 1);
			var ch32 = data.readU8(pos17 + 2);
			var ch42 = data.readU8(pos17 + 3);
			var end_char = ch42 | ch32 << 8 | ch218 << 16 | ch118 << 24;
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > end_char) {
				low = mid + 1;
			} else {
				var pos18 = index_map + 16 + mid * 12 + 8;
				var ch119 = data.readU8(pos18);
				var ch219 = data.readU8(pos18 + 1);
				var ch33 = data.readU8(pos18 + 2);
				var ch43 = data.readU8(pos18 + 3);
				var start_glyph = ch43 | ch33 << 8 | ch219 << 16 | ch119 << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw new js__$Boot_HaxeError("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		var ch1 = p.readU8(pos);
		var ch2 = p.readU8(pos + 1);
		g1 = info1 + (ch2 | ch1 << 8) * 2;
		var info2 = info.glyf;
		var p1 = info.data;
		var pos1 = info.loca + glyph_index * 2 + 2;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		g2 = info2 + (ch21 | ch11 << 8) * 2;
	} else {
		var info3 = info.glyf;
		var p2 = info.data;
		var pos2 = info.loca + glyph_index * 4;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var ch3 = p2.readU8(pos2 + 2);
		var ch4 = p2.readU8(pos2 + 3);
		g1 = info3 + (ch4 | ch3 << 8 | ch22 << 16 | ch12 << 24);
		var info4 = info.glyf;
		var p3 = info.data;
		var pos3 = info.loca + glyph_index * 4 + 4;
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var ch31 = p3.readU8(pos3 + 2);
		var ch41 = p3.readU8(pos3 + 3);
		g2 = info4 + (ch41 | ch31 << 8 | ch23 << 16 | ch13 << 24);
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return false;
	}
	var p = info.data;
	var pos = g + 2;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = g + 4;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = g + 6;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = g + 8;
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g1 = 0;
	var _g = count;
	while(_g1 < _g) {
		var i = _g1++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	var endPtsOfContours;
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var ch1 = data.readU8(g);
	var ch2 = data.readU8(g + 1);
	var n = ch2 | ch1 << 8;
	var numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
	if(numberOfContours > 0) {
		var flags = 0;
		var j = 0;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var pointsIndex = 0;
		endPtsOfContours = data.sub(g + 10,data.get_length() - (g + 10));
		var pos = g + 10 + numberOfContours * 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		var ins = ch21 | ch11 << 8;
		var points = data.sub(g + 10 + numberOfContours * 2 + 2 + ins,data.get_length() - (g + 10 + numberOfContours * 2 + 2 + ins));
		var pos1 = numberOfContours * 2 - 2;
		var ch12 = endPtsOfContours.readU8(pos1);
		var ch22 = endPtsOfContours.readU8(pos1 + 1);
		var n1 = 1 + (ch22 | ch12 << 8);
		var m = n1 + 2 * numberOfContours;
		var this1 = new Array(m);
		vertices = this1;
		if(vertices == null) {
			return null;
		} else {
			var _g1 = 0;
			var _g = vertices.length;
			while(_g1 < _g) {
				var i = _g1++;
				vertices[i] = new kha_graphics2_truetype_Stbtt_$vertex();
			}
		}
		next_move = 0;
		var flagcount = 0;
		off = m - n1;
		var _g11 = 0;
		var _g2 = n1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(flagcount == 0) {
				flags = points.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = points.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i1].type = flags;
		}
		var x = 0;
		var _g12 = 0;
		var _g3 = n1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			flags = vertices[off + i2].type;
			if((flags & 2) != 0) {
				var dx = points.readU8(pointsIndex++);
				x += (flags & 16) != 0 ? dx : -dx;
			} else if((flags & 16) == 0) {
				var value;
				var ch13 = points.readU8(pointsIndex);
				var ch23 = points.readU8(pointsIndex + 1);
				var n2 = ch23 | ch13 << 8;
				if((n2 & 32768) != 0) {
					value = n2 - 65536;
				} else {
					value = n2;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i2].x = x;
		}
		var y = 0;
		var _g13 = 0;
		var _g4 = n1;
		while(_g13 < _g4) {
			var i3 = _g13++;
			flags = vertices[off + i3].type;
			if((flags & 4) != 0) {
				var dy = points.readU8(pointsIndex++);
				y += (flags & 32) != 0 ? dy : -dy;
			} else if((flags & 32) == 0) {
				var value1;
				var ch14 = points.readU8(pointsIndex);
				var ch24 = points.readU8(pointsIndex + 1);
				var n3 = ch24 | ch14 << 8;
				if((n3 & 32768) != 0) {
					value1 = n3 - 65536;
				} else {
					value1 = n3;
				}
				y += value1;
				pointsIndex += 2;
			}
			vertices[off + i3].y = y;
		}
		num_vertices = 0;
		var scy = 0;
		var scx = scy;
		var cy = scx;
		var cx = cy;
		var sy = cx;
		var sx = sy;
		var i4 = 0;
		while(i4 < n1) {
			flags = vertices[off + i4].type;
			x = vertices[off + i4].x;
			y = vertices[off + i4].y;
			if(next_move == i4) {
				if(i4 != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i4 + 1].type & 1) == 0) {
						sx = x + vertices[off + i4 + 1].x >> 1;
						sy = y + vertices[off + i4 + 1].y >> 1;
					} else {
						sx = vertices[off + i4 + 1].x;
						sy = vertices[off + i4 + 1].y;
						++i4;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos2 = j * 2;
				var ch15 = endPtsOfContours.readU8(pos2);
				var ch25 = endPtsOfContours.readU8(pos2 + 1);
				next_move = 1 + (ch25 | ch15 << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i4;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours == -1) {
		var more = 1;
		var comp = data.sub(g + 10,data.get_length() - (g + 10));
		var compIndex = 0;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var comp_num_verts = 0;
			var i5;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var ch16 = comp.readU8(compIndex);
			var ch26 = comp.readU8(compIndex + 1);
			var n4 = ch26 | ch16 << 8;
			var flags1 = (n4 & 32768) != 0 ? n4 - 65536 : n4;
			compIndex += 2;
			var ch17 = comp.readU8(compIndex);
			var ch27 = comp.readU8(compIndex + 1);
			var n5 = ch27 | ch17 << 8;
			var gidx = (n5 & 32768) != 0 ? n5 - 65536 : n5;
			compIndex += 2;
			if((flags1 & 2) != 0) {
				if((flags1 & 1) != 0) {
					var ch18 = comp.readU8(compIndex);
					var ch28 = comp.readU8(compIndex + 1);
					var n6 = ch28 | ch18 << 8;
					mtx4 = (n6 & 32768) != 0 ? n6 - 65536 : n6;
					compIndex += 2;
					var ch19 = comp.readU8(compIndex);
					var ch29 = comp.readU8(compIndex + 1);
					var n7 = ch29 | ch19 << 8;
					mtx5 = (n7 & 32768) != 0 ? n7 - 65536 : n7;
					compIndex += 2;
				} else {
					var n8 = comp.readU8(compIndex);
					mtx4 = n8 >= 128 ? n8 - 256 : n8;
					++compIndex;
					var n9 = comp.readU8(compIndex);
					mtx5 = n9 >= 128 ? n9 - 256 : n9;
					++compIndex;
				}
			} else {
				throw new js__$Boot_HaxeError("Error");
			}
			if((flags1 & 8) != 0) {
				var ch110 = comp.readU8(compIndex);
				var ch210 = comp.readU8(compIndex + 1);
				var n10 = ch210 | ch110 << 8;
				mtx3 = ((n10 & 32768) != 0 ? n10 - 65536 : n10) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags1 & 64) != 0) {
				var ch111 = comp.readU8(compIndex);
				var ch211 = comp.readU8(compIndex + 1);
				var n11 = ch211 | ch111 << 8;
				mtx0 = ((n11 & 32768) != 0 ? n11 - 65536 : n11) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var ch112 = comp.readU8(compIndex);
				var ch212 = comp.readU8(compIndex + 1);
				var n12 = ch212 | ch112 << 8;
				mtx3 = ((n12 & 32768) != 0 ? n12 - 65536 : n12) / 16384.0;
				compIndex += 2;
			} else if((flags1 & 128) != 0) {
				var ch113 = comp.readU8(compIndex);
				var ch213 = comp.readU8(compIndex + 1);
				var n13 = ch213 | ch113 << 8;
				mtx0 = ((n13 & 32768) != 0 ? n13 - 65536 : n13) / 16384.0;
				compIndex += 2;
				var ch114 = comp.readU8(compIndex);
				var ch214 = comp.readU8(compIndex + 1);
				var n14 = ch214 | ch114 << 8;
				mtx1 = ((n14 & 32768) != 0 ? n14 - 65536 : n14) / 16384.0;
				compIndex += 2;
				var ch115 = comp.readU8(compIndex);
				var ch215 = comp.readU8(compIndex + 1);
				var n15 = ch215 | ch115 << 8;
				mtx2 = ((n15 & 32768) != 0 ? n15 - 65536 : n15) / 16384.0;
				compIndex += 2;
				var ch116 = comp.readU8(compIndex);
				var ch216 = comp.readU8(compIndex + 1);
				var n16 = ch216 | ch116 << 8;
				mtx3 = ((n16 & 32768) != 0 ? n16 - 65536 : n16) / 16384.0;
				compIndex += 2;
			}
			var m1 = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			var n17 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,gidx);
			comp_num_verts = comp_verts == null ? 0 : comp_verts.length;
			if(comp_num_verts > 0) {
				var _g14 = 0;
				var _g5 = comp_num_verts;
				while(_g14 < _g5) {
					var i6 = _g14++;
					var v = comp_verts[i6];
					var x1 = v.x;
					var y1 = v.y;
					v.x = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.y = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
					x1 = v.cx;
					y1 = v.cy;
					v.cx = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.cy = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
				}
				var this2 = new Array(num_vertices + comp_num_verts);
				tmp = this2;
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags1 & 32;
		}
	} else if(numberOfContours < 0) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(num_vertices < vertices.length) {
		var this3 = new Array(num_vertices);
		var tmp1 = this3;
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp1,0,num_vertices);
		return tmp1;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var numOfLongHorMetrics = ch2 | ch1 << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p1 = info.data;
		var pos1 = info.hmtx + 4 * glyph_index;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		var n = ch21 | ch11 << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p2 = info.data;
		var pos2 = info.hmtx + 4 * glyph_index + 2;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var n1 = ch22 | ch12 << 8;
		metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	} else {
		var p3 = info.data;
		var pos3 = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var n2 = ch23 | ch13 << 8;
		metrics.advanceWidth = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		var p4 = info.data;
		var pos4 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		var ch14 = p4.readU8(pos4);
		var ch24 = p4.readU8(pos4 + 1);
		var n3 = ch24 | ch14 << 8;
		metrics.leftSideBearing = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	metrics.descent = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.hhea + 8;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	metrics.lineGap = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	var fheight = ((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1);
	return height / fheight;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var x0 = rect.x0;
		var x1 = rect.x1;
		var y0 = rect.y0;
		var y1 = rect.y1;
		rect.x0 = Math.floor(x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert ? 1.0 : -1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(x0 <= x && x1 <= x) {
		var _g = scanlineIndex + x;
		var _g1 = scanline;
		_g1[_g] = _g1[_g] + e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var _g2 = scanlineIndex + x;
		var _g11 = scanline;
		_g11[_g2] = _g11[_g2] + e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw new js__$Boot_HaxeError("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var x = x_top | 0;
					var height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g = x;
					var _g1 = scanline;
					_g1[_g] = _g1[_g] + e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					var _g2 = scanline_fillIndex + x;
					var _g11 = scanline_fill;
					_g11[_g2] = _g11[_g2] + e.direction * height;
				} else {
					var x1;
					if(x_top > x_bottom) {
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						var t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					var x11 = x_top | 0;
					var x2 = x_bottom | 0;
					var y_crossing = (x11 + 1 - x01) * dy + y_top;
					var sign = e.direction;
					var area = sign * (y_crossing - sy0);
					var _g3 = x11;
					var _g12 = scanline;
					_g12[_g3] = _g12[_g3] + area * (1 - (x_top - x11 + (x11 + 1 - x11)) / 2);
					var step = sign * dy;
					var _g13 = x11 + 1;
					var _g4 = x2;
					while(_g13 < _g4) {
						var x3 = _g13++;
						var _g21 = x3;
						var _g31 = scanline;
						_g31[_g21] = _g31[_g21] + (area + step / 2);
						area += step;
					}
					y_crossing += dy * (x2 - (x11 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g5 = x2;
					var _g14 = scanline;
					_g14[_g5] = _g14[_g5] + (area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing));
					var _g6 = scanline_fillIndex + x2;
					var _g15 = scanline_fill;
					_g15[_g6] = _g15[_g6] + sign * (sy1 - sy0);
				}
			} else {
				var _g16 = 0;
				var _g7 = len;
				while(_g16 < _g7) {
					var x4 = _g16++;
					var y0 = y_top;
					var x12 = x4;
					var x21 = x4 + 1;
					var x31 = xb;
					var y3 = y_bottom;
					var y1 = (x4 - x01) / dx + y_top;
					var y2 = (x4 + 1 - x01) / dx + y_top;
					if(x01 < x12 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x12 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x12 && x31 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x31 < x12 && x01 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x31,y3);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var j = 0;
	var scanline;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		var this1 = new Array(result.w * 2 + 1);
		scanline = this1;
	} else {
		var this2 = new Array(129);
		scanline = this2;
	}
	var scanline2 = scanline;
	scanline2Index = result.w;
	var y = off_y;
	e[eIndex + n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value = active;
		var step_parent = null;
		var _g1 = 0;
		var _g = result.w;
		while(_g1 < _g) {
			var i = _g1++;
			scanline[i] = 0;
		}
		var _g11 = 0;
		var _g2 = result.w + 1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			scanline2[scanline2Index + i1] = 0;
		}
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw new js__$Boot_HaxeError("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw new js__$Boot_HaxeError("Error");
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g12 = 0;
		var _g3 = result.w;
		while(_g12 < _g3) {
			var i2 = _g12++;
			sum += scanline2[scanline2Index + i2];
			var k = scanline[i2] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			var m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i2,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var i;
	var j;
	var _g1 = 1;
	var _g = n;
	while(_g1 < _g) {
		var i1 = _g1++;
		var t = p[i1];
		var a = t;
		j = i1;
		while(j > 0) {
			var b = p[j - 1];
			var c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(a,b);
			if(!c) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i1 != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c;
		var m = n >> 1;
		var c01 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]);
		var c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(c01 != c12) {
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			var z = c == c12 ? 0 : n - 1;
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		var i = 1;
		var j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert ? -scale_y : scale_y;
	var i;
	var j;
	var k;
	var vsubsample = 1;
	var ptsIndex = 0;
	var n = 0;
	var _g1 = 0;
	var _g = windings;
	while(_g1 < _g) {
		var i1 = _g1++;
		n += wcount[i1];
	}
	var this1 = new Array(n + 1);
	var e = this1;
	if(e == null) {
		return;
	} else {
		var _g11 = 0;
		var _g2 = e.length;
		while(_g11 < _g2) {
			var i2 = _g11++;
			e[i2] = new kha_graphics2_truetype_Stbtt_$_$edge();
		}
	}
	n = 0;
	var m = 0;
	var _g12 = 0;
	var _g3 = windings;
	while(_g12 < _g3) {
		var i3 = _g12++;
		var p = pts;
		var pIndex = ptsIndex + m;
		m += wcount[i3];
		j = wcount[i3] - 1;
		var _g31 = 0;
		var _g21 = wcount[i3];
		while(_g31 < _g21) {
			var k1 = _g31++;
			var a = k1;
			var b = j;
			if(p[pIndex + j].y == p[pIndex + k1].y) {
				j = k1;
				continue;
			}
			e[n].invert = false;
			if(invert ? p[pIndex + j].y > p[pIndex + k1].y : p[pIndex + j].y < p[pIndex + k1].y) {
				e[n].invert = true;
				a = j;
				b = k1;
			}
			e[n].x0 = p[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;
			e[n].x1 = p[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;
			++n;
			j = k1;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value += 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var i;
	var n = 0;
	var start = 0;
	var pass;
	var _g1 = 0;
	var _g = num_verts;
	while(_g1 < _g) {
		var i1 = _g1++;
		if(vertices[i1].type == 1) {
			++n;
		}
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	var this1 = new Array(n);
	contour_lengths.value = this1;
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g2 = 0;
	while(_g2 < 2) {
		var pass1 = _g2++;
		var x = 0;
		var y = 0;
		if(pass1 == 1) {
			var this2 = new Array(num_points);
			points = this2;
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g21 = 0;
				var _g11 = points.length;
				while(_g21 < _g11) {
					var i2 = _g21++;
					points[i2] = new kha_graphics2_truetype_Stbtt_$_$point();
				}
			}
		}
		num_points = 0;
		n = -1;
		var _g22 = 0;
		var _g12 = num_verts;
		while(_g22 < _g12) {
			var i3 = _g22++;
			var _g3 = vertices[i3].type;
			switch(_g3) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i3].cx,vertices[i3].cy,vertices[i3].x,vertices[i3].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i3].x;
				y = vertices[i3].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var scale = scale_x > scale_y ? scale_y : scale_x;
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : winding_count};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / scale,winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null ? 0 : vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var _g1 = 0;
	var _g = pw * ph;
	while(_g1 < _g) {
		var i = _g1++;
		pixels.writeU8(i,0);
	}
	var y = 1;
	var x = y;
	var bottom_y = 1;
	var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i1 = 0;
	var _g2 = 0;
	while(_g2 < chars.length) {
		var index = chars[_g2];
		++_g2;
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
		var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g);
		var advance = metrics.advanceWidth;
		var lsb = metrics.leftSideBearing;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		var x0 = rect.x0;
		var y0 = rect.y0;
		var x1 = rect.x1;
		var y1 = rect.y1;
		var gw = x1 - x0;
		var gh = y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i1;
		}
		if(x + gw >= pw) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(y + gh >= ph) {
			throw new js__$Boot_HaxeError("Error");
		}
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,x + y * pw,gw,gh,pw,scale,scale,g);
		chardata[i1].x0 = x;
		chardata[i1].y0 = y;
		chardata[i1].x1 = x + gw;
		chardata[i1].y1 = y + gh;
		chardata[i1].xadvance = scale * advance;
		chardata[i1].xoff = x0;
		chardata[i1].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i1;
	}
	return bottom_y;
};
var kha_graphics4_BlendingFactor = $hxEnums["kha.graphics4.BlendingFactor"] = { __ename__ : ["kha","graphics4","BlendingFactor"], __constructs__ : ["Undefined","BlendOne","BlendZero","SourceAlpha","DestinationAlpha","InverseSourceAlpha","InverseDestinationAlpha","SourceColor","DestinationColor","InverseSourceColor","InverseDestinationColor"]
	,Undefined: {_hx_index:0,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,BlendOne: {_hx_index:1,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,BlendZero: {_hx_index:2,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,SourceAlpha: {_hx_index:3,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,DestinationAlpha: {_hx_index:4,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,InverseSourceAlpha: {_hx_index:5,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,InverseDestinationAlpha: {_hx_index:6,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,SourceColor: {_hx_index:7,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,DestinationColor: {_hx_index:8,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,InverseSourceColor: {_hx_index:9,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,InverseDestinationColor: {_hx_index:10,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
};
var kha_graphics4_BlendingOperation = $hxEnums["kha.graphics4.BlendingOperation"] = { __ename__ : ["kha","graphics4","BlendingOperation"], __constructs__ : ["Add","Subtract","ReverseSubtract","Min","Max"]
	,Add: {_hx_index:0,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
	,Subtract: {_hx_index:1,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
	,ReverseSubtract: {_hx_index:2,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
	,Min: {_hx_index:3,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
	,Max: {_hx_index:4,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
};
var kha_graphics4_CompareMode = $hxEnums["kha.graphics4.CompareMode"] = { __ename__ : ["kha","graphics4","CompareMode"], __constructs__ : ["Always","Never","Equal","NotEqual","Less","LessEqual","Greater","GreaterEqual"]
	,Always: {_hx_index:0,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,Never: {_hx_index:1,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,Equal: {_hx_index:2,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,NotEqual: {_hx_index:3,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,Less: {_hx_index:4,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,LessEqual: {_hx_index:5,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,Greater: {_hx_index:6,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,GreaterEqual: {_hx_index:7,__enum__:"kha.graphics4.CompareMode",toString:$estr}
};
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = ["kha","graphics4","ConstantLocation"];
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = ["kha","graphics4","CubeMap"];
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.createRenderTarget = function(size,format,depthStencil,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	return new kha_graphics4_CubeMap(size,format,true,depthStencil);
};
kha_graphics4_CubeMap.prototype = {
	myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,depthStencilFormat: null
	,graphics4: null
	,frameBuffer: null
	,texture: null
	,depthTexture: null
	,isDepthAttachment: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			var _g = this.format;
			switch(_g._hx_index) {
			case 0:
				var _g1 = 0;
				while(_g1 < 6) {
					var i = _g1++;
					kha_SystemImpl.gl.texImage2D(34069 + i,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				}
				break;
			case 2:
				var _g2 = 0;
				while(_g2 < 6) {
					var i1 = _g2++;
					kha_SystemImpl.gl.texImage2D(34069 + i1,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				}
				break;
			case 3:
				var _g3 = 0;
				while(_g3 < 6) {
					var i2 = _g3++;
					kha_SystemImpl.gl.texImage2D(34069 + i2,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				}
				break;
			case 4:
				var _g4 = 0;
				while(_g4 < 6) {
					var i3 = _g4++;
					kha_SystemImpl.gl.texImage2D(34069 + i3,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				}
				break;
			case 5:
				var _g5 = 0;
				while(_g5 < 6) {
					var i4 = _g5++;
					kha_SystemImpl.gl.texImage2D(34069 + i4,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				}
				break;
			case 6:
				var _g6 = 0;
				while(_g6 < 6) {
					var i5 = _g6++;
					kha_SystemImpl.gl.texImage2D(34069 + i5,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				}
				break;
			default:
				var _g7 = 0;
				while(_g7 < 6) {
					var i6 = _g7++;
					kha_SystemImpl.gl.texImage2D(34069 + i6,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				}
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				kha_SystemImpl.gl.texParameteri(34067,10240,9728);
				kha_SystemImpl.gl.texParameteri(34067,10241,9728);
				this.isDepthAttachment = true;
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					var _g11 = 0;
					while(_g11 < 6) {
						var i7 = _g11++;
						kha_SystemImpl.gl.texImage2D(34069 + i7,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
						kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069 + i7,colortex,0);
					}
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			if(depthStencilFormat == 1) {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.myWidth,this.myHeight,0,6402,5125,null);
			} else {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
			}
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_g2: function() {
		return null;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
};
var kha_graphics4_CullMode = $hxEnums["kha.graphics4.CullMode"] = { __ename__ : ["kha","graphics4","CullMode"], __constructs__ : ["Clockwise","CounterClockwise","None"]
	,Clockwise: {_hx_index:0,__enum__:"kha.graphics4.CullMode",toString:$estr}
	,CounterClockwise: {_hx_index:1,__enum__:"kha.graphics4.CullMode",toString:$estr}
	,None: {_hx_index:2,__enum__:"kha.graphics4.CullMode",toString:$estr}
};
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = ["kha","graphics4","FragmentShader"];
kha_graphics4_FragmentShader.prototype = {
	sources: null
	,type: null
	,shader: null
	,files: null
	,__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function() { };
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = ["kha","graphics4","GeometryShader"];
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = ["kha","graphics4","Graphics"];
kha_graphics4_Graphics.prototype = {
	begin: null
	,end: null
	,clear: null
	,setVertexBuffer: null
	,setIndexBuffer: null
	,setTexture: null
	,setTextureParameters: null
	,renderTargetsInvertedY: null
	,setPipeline: null
	,setMatrix: null
	,drawIndexedVertices: null
	,__class__: kha_graphics4_Graphics
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	kha_graphics4_ImageShaderPainter.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = ["kha","graphics4","ImageShaderPainter"];
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.structure == null) {
		kha_graphics4_ImageShaderPainter.structure = kha_graphics4_Graphics2.createImageVertexStructure();
	}
	if(kha_graphics4_ImageShaderPainter.shaderPipeline == null) {
		kha_graphics4_ImageShaderPainter.shaderPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_ImageShaderPainter.structure);
		kha_graphics4_ImageShaderPainter.shaderPipeline.compile();
	}
};
kha_graphics4_ImageShaderPainter.prototype = {
	projectionMatrix: null
	,bilinear: null
	,bilinearMipmaps: null
	,g: null
	,myPipeline: null
	,projectionLocation: null
	,textureLocation: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ImageShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ImageShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(6000,kha_graphics4_ImageShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ImageShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(9000,kha_graphics4_Usage.StaticUsage);
			var indices = kha_graphics4_ImageShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1500) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ImageShaderPainter.indexBuffer.unlock();
		}
	}
	,drawBuffer: function() {
		kha_graphics4_ImageShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ImageShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ImageShaderPainter.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ImageShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setTexture(this.textureLocation,kha_graphics4_ImageShaderPainter.lastTexture);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinearMipmaps ? kha_graphics4_MipMapFilter.LinearMipFilter : kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ImageShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		kha_graphics4_ImageShaderPainter.bufferIndex = 0;
		kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
	}
	,end: function() {
		if(kha_graphics4_ImageShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_ImageShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ColoredShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = ["kha","graphics4","ColoredShaderPainter"];
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.structure == null) {
		kha_graphics4_ColoredShaderPainter.structure = kha_graphics4_Graphics2.createColoredVertexStructure();
	}
	if(kha_graphics4_ColoredShaderPainter.shaderPipeline == null) {
		kha_graphics4_ColoredShaderPainter.shaderPipeline = kha_graphics4_Graphics2.createColoredPipeline(kha_graphics4_ColoredShaderPainter.structure);
		kha_graphics4_ColoredShaderPainter.shaderPipeline.compile();
	}
};
kha_graphics4_ColoredShaderPainter.prototype = {
	projectionMatrix: null
	,g: null
	,myPipeline: null
	,projectionLocation: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ColoredShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ColoredShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(400,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
			kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(600,kha_graphics4_Usage.StaticUsage);
			var indices = kha_graphics4_ColoredShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 100) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ColoredShaderPainter.indexBuffer.unlock();
			kha_graphics4_ColoredShaderPainter.triangleVertexBuffer = new kha_graphics4_VertexBuffer(300,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
			kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer = new kha_graphics4_IndexBuffer(300,kha_graphics4_Usage.StaticUsage);
			var triIndices = kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.lock();
			var _g1 = 0;
			while(_g1 < 100) {
				var i1 = _g1++;
				triIndices[i1 * 3] = i1 * 3;
				triIndices[i1 * 3 + 1] = i1 * 3 + 1;
				triIndices[i1 * 3 + 2] = i1 * 3 + 2;
			}
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 7] = topleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 8] = toplefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 14] = toprightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 15] = toprighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 16] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 21] = bottomrightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 22] = bottomrighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 23] = -5.0;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 20] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 24] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 25] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 26] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 27] = a;
	}
	,setTriVertices: function(x1,y1,x2,y2,x3,y3) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex] = x1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 1] = y1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 7] = x2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 8] = y2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 14] = x3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 15] = y3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 16] = -5.0;
	}
	,setTriColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 20] = a;
	}
	,drawBuffer: function(trisDone) {
		if(!trisDone) {
			if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ColoredShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.bufferIndex * 2 * 3);
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.triangleVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.triangleIndexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ColoredShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex + 1 >= 100) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++kha_graphics4_ColoredShaderPainter.bufferIndex;
	}
	,fillTriangle: function(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex + 1 >= 100) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++kha_graphics4_ColoredShaderPainter.triangleBufferIndex;
	}
	,__class__: kha_graphics4_ColoredShaderPainter
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_TextShaderPainter.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = ["kha","graphics4","TextShaderPainter"];
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.structure == null) {
		kha_graphics4_TextShaderPainter.structure = kha_graphics4_Graphics2.createTextVertexStructure();
	}
	if(kha_graphics4_TextShaderPainter.shaderPipeline == null) {
		kha_graphics4_TextShaderPainter.shaderPipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_TextShaderPainter.structure);
		kha_graphics4_TextShaderPainter.shaderPipeline.compile();
	}
};
kha_graphics4_TextShaderPainter.findIndex = function(charCode) {
	var glyphs = kha_graphics2_Graphics.fontGlyphs;
	var blocks = kha_KravurImage.charBlocks;
	var offset = 0;
	var _g1 = 0;
	var _g = blocks.length / 2 | 0;
	while(_g1 < _g) {
		var i = _g1++;
		var start = blocks[i * 2];
		var end = blocks[i * 2 + 1];
		if(charCode >= start && charCode <= end) {
			return offset + charCode - start;
		}
		offset += end - start + 1;
	}
	return 0;
};
kha_graphics4_TextShaderPainter.prototype = {
	projectionMatrix: null
	,font: null
	,g: null
	,myPipeline: null
	,projectionLocation: null
	,textureLocation: null
	,fontSize: null
	,bilinear: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_TextShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_TextShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(400,kha_graphics4_TextShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
			kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_TextShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(600,kha_graphics4_Usage.StaticUsage);
			var indices = kha_graphics4_TextShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 100) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_TextShaderPainter.indexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 9] = topleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 10] = toplefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 11] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 18] = toprightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 19] = toprighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 20] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 27] = bottomrightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 28] = bottomrighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 5] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 6] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 7] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 14] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 15] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 16] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 23] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 24] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 25] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 32] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 33] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 34] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		kha_graphics4_TextShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_TextShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_TextShaderPainter.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_TextShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setTexture(this.textureLocation,kha_graphics4_TextShaderPainter.lastTexture);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.drawIndexedVertices(0,kha_graphics4_TextShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
	}
	,setFont: function(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	,text: null
	,startString: function(text) {
		this.text = text;
	}
	,charCodeAt: function(position) {
		return HxOverrides.cca(this.text,position);
	}
	,stringLength: function() {
		return this.text.length;
	}
	,endString: function() {
		this.text = null;
	}
	,bakedQuadCache: null
	,drawString: function(text,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var ypos = y;
		this.startString(text);
		var _g1 = 0;
		var _g = this.stringLength();
		while(_g1 < _g) {
			var i = _g1++;
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(this.charCodeAt(i)),xpos,ypos);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 100) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var value_x = q.x0;
				var value_y = q.y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y1 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var p0_x = x1;
				var p0_y = y1;
				var value_x1 = q.x0;
				var value_y1 = q.y0;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x2 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y2 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var p1_x = x2;
				var p1_y = y2;
				var value_x2 = q.x1;
				var value_y2 = q.y0;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x3 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y3 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var p2_x = x3;
				var p2_y = y3;
				var value_x3 = q.x1;
				var value_y3 = q.y1;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x4 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y4 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var p3_x = x4;
				var p3_y = y4;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
		this.endString();
	}
	,end: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
};
var kha_graphics4_Graphics2 = function(canvas) {
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.projectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = ["kha","graphics4","Graphics2"];
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.createImageVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createImagePipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.BlendOne;
	shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createColoredVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createColoredPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createTextVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createTextPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	return shaderPipeline;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	myColor: null
	,myFont: null
	,projectionMatrix: null
	,imagePainter: null
	,coloredPainter: null
	,textPainter: null
	,canvas: null
	,g: null
	,setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if((this.canvas instanceof kha_Framebuffer)) {
			var _this = this.projectionMatrix;
			var tx = -width / width;
			var ty = -height / (0 - height);
			var tz = -1.00020002000200026;
			var m__00 = 2 / width;
			var m__10 = 0;
			var m__20 = 0;
			var m__30 = tx;
			var m__01 = 0;
			var m__11 = 2 / (0 - height);
			var m__21 = 0;
			var m__31 = ty;
			var m__02 = 0;
			var m__12 = 0;
			var m__22 = -0.002000200020002;
			var m__32 = tz;
			var m__03 = 0;
			var m__13 = 0;
			var m__23 = 0;
			var m__33 = 1;
			_this._00 = m__00;
			_this._10 = m__10;
			_this._20 = m__20;
			_this._30 = m__30;
			_this._01 = m__01;
			_this._11 = m__11;
			_this._21 = m__21;
			_this._31 = m__31;
			_this._02 = m__02;
			_this._12 = m__12;
			_this._22 = m__22;
			_this._32 = m__32;
			_this._03 = m__03;
			_this._13 = m__13;
			_this._23 = m__23;
			_this._33 = m__33;
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(this.g.renderTargetsInvertedY()) {
				var _this1 = this.projectionMatrix;
				var tx1 = -width / width;
				var ty1 = -height / height;
				var tz1 = -1.00020002000200026;
				var m__001 = 2 / width;
				var m__101 = 0;
				var m__201 = 0;
				var m__301 = tx1;
				var m__011 = 0;
				var m__111 = 2 / height;
				var m__211 = 0;
				var m__311 = ty1;
				var m__021 = 0;
				var m__121 = 0;
				var m__221 = -0.002000200020002;
				var m__321 = tz1;
				var m__031 = 0;
				var m__131 = 0;
				var m__231 = 0;
				var m__331 = 1;
				_this1._00 = m__001;
				_this1._10 = m__101;
				_this1._20 = m__201;
				_this1._30 = m__301;
				_this1._01 = m__011;
				_this1._11 = m__111;
				_this1._21 = m__211;
				_this1._31 = m__311;
				_this1._02 = m__021;
				_this1._12 = m__121;
				_this1._22 = m__221;
				_this1._32 = m__321;
				_this1._03 = m__031;
				_this1._13 = m__131;
				_this1._23 = m__231;
				_this1._33 = m__331;
			} else {
				var _this2 = this.projectionMatrix;
				var tx2 = -width / width;
				var ty2 = -height / (0 - height);
				var tz2 = -1.00020002000200026;
				var m__002 = 2 / width;
				var m__102 = 0;
				var m__202 = 0;
				var m__302 = tx2;
				var m__012 = 0;
				var m__112 = 2 / (0 - height);
				var m__212 = 0;
				var m__312 = ty2;
				var m__022 = 0;
				var m__122 = 0;
				var m__222 = -0.002000200020002;
				var m__322 = tz2;
				var m__032 = 0;
				var m__132 = 0;
				var m__232 = 0;
				var m__332 = 1;
				_this2._00 = m__002;
				_this2._10 = m__102;
				_this2._20 = m__202;
				_this2._30 = m__302;
				_this2._01 = m__012;
				_this2._11 = m__112;
				_this2._21 = m__212;
				_this2._31 = m__312;
				_this2._02 = m__022;
				_this2._12 = m__122;
				_this2._22 = m__222;
				_this2._32 = m__322;
				_this2._03 = m__032;
				_this2._13 = m__132;
				_this2._23 = m__232;
				_this2._33 = m__332;
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,drawImage: function(img,x,y) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var xw = x + img.get_width();
		var yh = y + img.get_height();
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x = x;
		var value_y = yh;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x1 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y1 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var p1_x = x1;
		var p1_y = y1;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x1 = x;
		var value_y1 = y;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x2 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y2 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var p2_x = x2;
		var p2_y = y2;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x2 = xw;
		var value_y2 = y;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x3 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y3 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var p3_x = x3;
		var p3_y = y3;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x3 = xw;
		var value_y3 = yh;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x4 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y4 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var p4_x = x4;
		var p4_y = y4;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 35] = a;
		var right = tex.get_width() / tex.get_realWidth();
		var bottom = tex.get_height() / tex.get_realHeight();
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 3] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 12] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 13] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 22] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = p1_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = p1_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = p2_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = p2_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = p3_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = p3_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = p4_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = p4_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,drawScaledSubImage: function(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x = dx;
		var value_y = dy + dh;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var p1_x = x;
		var p1_y = y;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x1 = dx;
		var value_y1 = dy;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x1 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y1 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var p2_x = x1;
		var p2_y = y1;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x2 = dx + dw;
		var value_y2 = dy;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x2 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y2 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var p3_x = x2;
		var p3_y = y2;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x3 = dx + dw;
		var value_y3 = dy + dh;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x3 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y3 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var p4_x = x3;
		var p4_y = y3;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer();
		}
		var left = sx / tex.get_realWidth();
		var top = sy / tex.get_realHeight();
		var right = (sx + sw) / tex.get_realWidth();
		var bottom = (sy + sh) / tex.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = p1_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = p1_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = p2_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = p2_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = p3_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = p3_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = p4_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = p4_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x - strength / 2;
		var value_y = y + strength / 2;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1 = new kha_math_FastVector2(x1,y1);
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x - strength / 2;
		var value_y1 = y - strength / 2;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2 = new kha_math_FastVector2(x2,y2);
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x + width + strength / 2;
		var value_y2 = y - strength / 2;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3 = new kha_math_FastVector2(x3,y3);
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x3 = x + width + strength / 2;
		var value_y3 = y + strength / 2;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var p4 = new kha_math_FastVector2(x4,y4);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x4 = x - strength / 2;
		var value_y4 = y + height - strength / 2;
		var w4 = _this4._02 * value_x4 + _this4._12 * value_y4 + _this4._22;
		var x5 = (_this4._00 * value_x4 + _this4._10 * value_y4 + _this4._20) / w4;
		var y5 = (_this4._01 * value_x4 + _this4._11 * value_y4 + _this4._21) / w4;
		p1 = new kha_math_FastVector2(x5,y5);
		var _this5 = this.transformations[this.transformations.length - 1];
		var value_x5 = x - strength / 2;
		var value_y5 = y + strength / 2;
		var w5 = _this5._02 * value_x5 + _this5._12 * value_y5 + _this5._22;
		var x6 = (_this5._00 * value_x5 + _this5._10 * value_y5 + _this5._20) / w5;
		var y6 = (_this5._01 * value_x5 + _this5._11 * value_y5 + _this5._21) / w5;
		p2 = new kha_math_FastVector2(x6,y6);
		var _this6 = this.transformations[this.transformations.length - 1];
		var value_x6 = x + strength / 2;
		var value_y6 = y + strength / 2;
		var w6 = _this6._02 * value_x6 + _this6._12 * value_y6 + _this6._22;
		var x7 = (_this6._00 * value_x6 + _this6._10 * value_y6 + _this6._20) / w6;
		var y7 = (_this6._01 * value_x6 + _this6._11 * value_y6 + _this6._21) / w6;
		p3 = new kha_math_FastVector2(x7,y7);
		var _this7 = this.transformations[this.transformations.length - 1];
		var value_x7 = x + strength / 2;
		var value_y7 = y + height - strength / 2;
		var w7 = _this7._02 * value_x7 + _this7._12 * value_y7 + _this7._22;
		var x8 = (_this7._00 * value_x7 + _this7._10 * value_y7 + _this7._20) / w7;
		var y8 = (_this7._01 * value_x7 + _this7._11 * value_y7 + _this7._21) / w7;
		p4 = new kha_math_FastVector2(x8,y8);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this8 = this.transformations[this.transformations.length - 1];
		var value_x8 = x - strength / 2;
		var value_y8 = y + height + strength / 2;
		var w8 = _this8._02 * value_x8 + _this8._12 * value_y8 + _this8._22;
		var x9 = (_this8._00 * value_x8 + _this8._10 * value_y8 + _this8._20) / w8;
		var y9 = (_this8._01 * value_x8 + _this8._11 * value_y8 + _this8._21) / w8;
		p1 = new kha_math_FastVector2(x9,y9);
		var _this9 = this.transformations[this.transformations.length - 1];
		var value_x9 = x - strength / 2;
		var value_y9 = y + height - strength / 2;
		var w9 = _this9._02 * value_x9 + _this9._12 * value_y9 + _this9._22;
		var x10 = (_this9._00 * value_x9 + _this9._10 * value_y9 + _this9._20) / w9;
		var y10 = (_this9._01 * value_x9 + _this9._11 * value_y9 + _this9._21) / w9;
		p2 = new kha_math_FastVector2(x10,y10);
		var _this10 = this.transformations[this.transformations.length - 1];
		var value_x10 = x + width + strength / 2;
		var value_y10 = y + height - strength / 2;
		var w10 = _this10._02 * value_x10 + _this10._12 * value_y10 + _this10._22;
		var x11 = (_this10._00 * value_x10 + _this10._10 * value_y10 + _this10._20) / w10;
		var y11 = (_this10._01 * value_x10 + _this10._11 * value_y10 + _this10._21) / w10;
		p3 = new kha_math_FastVector2(x11,y11);
		var _this11 = this.transformations[this.transformations.length - 1];
		var value_x11 = x + width + strength / 2;
		var value_y11 = y + height + strength / 2;
		var w11 = _this11._02 * value_x11 + _this11._12 * value_y11 + _this11._22;
		var x12 = (_this11._00 * value_x11 + _this11._10 * value_y11 + _this11._20) / w11;
		var y12 = (_this11._01 * value_x11 + _this11._11 * value_y11 + _this11._21) / w11;
		p4 = new kha_math_FastVector2(x12,y12);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this12 = this.transformations[this.transformations.length - 1];
		var value_x12 = x + width - strength / 2;
		var value_y12 = y + height - strength / 2;
		var w12 = _this12._02 * value_x12 + _this12._12 * value_y12 + _this12._22;
		var x13 = (_this12._00 * value_x12 + _this12._10 * value_y12 + _this12._20) / w12;
		var y13 = (_this12._01 * value_x12 + _this12._11 * value_y12 + _this12._21) / w12;
		p1 = new kha_math_FastVector2(x13,y13);
		var _this13 = this.transformations[this.transformations.length - 1];
		var value_x13 = x + width - strength / 2;
		var value_y13 = y + strength / 2;
		var w13 = _this13._02 * value_x13 + _this13._12 * value_y13 + _this13._22;
		var x14 = (_this13._00 * value_x13 + _this13._10 * value_y13 + _this13._20) / w13;
		var y14 = (_this13._01 * value_x13 + _this13._11 * value_y13 + _this13._21) / w13;
		p2 = new kha_math_FastVector2(x14,y14);
		var _this14 = this.transformations[this.transformations.length - 1];
		var value_x14 = x + width + strength / 2;
		var value_y14 = y + strength / 2;
		var w14 = _this14._02 * value_x14 + _this14._12 * value_y14 + _this14._22;
		var x15 = (_this14._00 * value_x14 + _this14._10 * value_y14 + _this14._20) / w14;
		var y15 = (_this14._01 * value_x14 + _this14._11 * value_y14 + _this14._21) / w14;
		p3 = new kha_math_FastVector2(x15,y15);
		var _this15 = this.transformations[this.transformations.length - 1];
		var value_x15 = x + width + strength / 2;
		var value_y15 = y + height - strength / 2;
		var w15 = _this15._02 * value_x15 + _this15._12 * value_y15 + _this15._22;
		var x16 = (_this15._00 * value_x15 + _this15._10 * value_y15 + _this15._20) / w15;
		var y16 = (_this15._01 * value_x15 + _this15._11 * value_y15 + _this15._21) / w15;
		p4 = new kha_math_FastVector2(x16,y16);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x;
		var value_y = y + height;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1_x = x1;
		var p1_y = y1;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x;
		var value_y1 = y;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2_x = x2;
		var p2_y = y2;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x + width;
		var value_y2 = y;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3_x = x3;
		var p3_y = y3;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x3 = x + width;
		var value_y3 = y + height;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var p4_x = x4;
		var p4_y = y4;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,drawString: function(text,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformations.length - 1]);
	}
	,get_font: function() {
		return this.myFont;
	}
	,set_font: function(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	,set_fontSize: function(value) {
		return kha_graphics2_Graphics.prototype.set_fontSize.call(this,this.textPainter.fontSize = value);
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var vec;
		if(y2 == y1) {
			vec = new kha_math_FastVector2(0,-1);
		} else {
			vec = new kha_math_FastVector2(1,-(x2 - x1) / (y2 - y1));
		}
		vec.set_length(strength);
		var p1 = new kha_math_FastVector2(x1 + 0.5 * vec.x,y1 + 0.5 * vec.y);
		var p2 = new kha_math_FastVector2(x2 + 0.5 * vec.x,y2 + 0.5 * vec.y);
		var p3 = new kha_math_FastVector2(p1.x - vec.x,p1.y - vec.y);
		var p4 = new kha_math_FastVector2(p2.x - vec.x,p2.y - vec.y);
		var _this = this.transformations[this.transformations.length - 1];
		var w = _this._02 * p1.x + _this._12 * p1.y + _this._22;
		var x = (_this._00 * p1.x + _this._10 * p1.y + _this._20) / w;
		var y = (_this._01 * p1.x + _this._11 * p1.y + _this._21) / w;
		p1 = new kha_math_FastVector2(x,y);
		var _this1 = this.transformations[this.transformations.length - 1];
		var w1 = _this1._02 * p2.x + _this1._12 * p2.y + _this1._22;
		var x3 = (_this1._00 * p2.x + _this1._10 * p2.y + _this1._20) / w1;
		var y3 = (_this1._01 * p2.x + _this1._11 * p2.y + _this1._21) / w1;
		p2 = new kha_math_FastVector2(x3,y3);
		var _this2 = this.transformations[this.transformations.length - 1];
		var w2 = _this2._02 * p3.x + _this2._12 * p3.y + _this2._22;
		var x4 = (_this2._00 * p3.x + _this2._10 * p3.y + _this2._20) / w2;
		var y4 = (_this2._01 * p3.x + _this2._11 * p3.y + _this2._21) / w2;
		p3 = new kha_math_FastVector2(x4,y4);
		var _this3 = this.transformations[this.transformations.length - 1];
		var w3 = _this3._02 * p4.x + _this3._12 * p4.y + _this3._22;
		var x5 = (_this3._00 * p4.x + _this3._10 * p4.y + _this3._20) / w3;
		var y5 = (_this3._01 * p4.x + _this3._11 * p4.y + _this3._21) / w3;
		p4 = new kha_math_FastVector2(x5,y5);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p3.x,p3.y,p2.x,p2.y,p4.x,p4.y);
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Uint32Array(indexCount);
	this._data = this1;
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = ["kha","graphics4","IndexBuffer"];
kha_graphics4_IndexBuffer.prototype = {
	buffer: null
	,_data: null
	,mySize: null
	,usage: null
	,lock: function(start,count) {
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.mySize;
		}
		return this._data.subarray(start,start + count);
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var glData = kha_SystemImpl.elementIndexUint == null ? new Uint16Array(this._data) : this._data;
		kha_SystemImpl.gl.bufferData(34963,glData,this.usage == kha_graphics4_Usage.DynamicUsage ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_MipMapFilter = $hxEnums["kha.graphics4.MipMapFilter"] = { __ename__ : ["kha","graphics4","MipMapFilter"], __constructs__ : ["NoMipFilter","PointMipFilter","LinearMipFilter"]
	,NoMipFilter: {_hx_index:0,__enum__:"kha.graphics4.MipMapFilter",toString:$estr}
	,PointMipFilter: {_hx_index:1,__enum__:"kha.graphics4.MipMapFilter",toString:$estr}
	,LinearMipFilter: {_hx_index:2,__enum__:"kha.graphics4.MipMapFilter",toString:$estr}
};
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = kha_graphics4_CullMode.None;
	this.depthWrite = false;
	this.depthMode = kha_graphics4_CompareMode.Always;
	this.stencilMode = kha_graphics4_CompareMode.Always;
	this.stencilBothPass = kha_graphics4_StencilAction.Keep;
	this.stencilDepthFail = kha_graphics4_StencilAction.Keep;
	this.stencilFail = kha_graphics4_StencilAction.Keep;
	this.stencilReferenceValue = 0;
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.blendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.blendOperation = kha_graphics4_BlendingOperation.Add;
	this.alphaBlendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.alphaBlendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.alphaBlendOperation = kha_graphics4_BlendingOperation.Add;
	this.colorWriteMaskRed = this.colorWriteMaskBlue = this.colorWriteMaskGreen = this.colorWriteMaskAlpha = true;
	this.conservativeRasterization = false;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = ["kha","graphics4","PipelineStateBase"];
kha_graphics4_PipelineStateBase.prototype = {
	inputLayout: null
	,vertexShader: null
	,fragmentShader: null
	,geometryShader: null
	,tessellationControlShader: null
	,tessellationEvaluationShader: null
	,cullMode: null
	,depthWrite: null
	,depthMode: null
	,stencilMode: null
	,stencilBothPass: null
	,stencilDepthFail: null
	,stencilFail: null
	,stencilReferenceValue: null
	,stencilReadMask: null
	,stencilWriteMask: null
	,blendSource: null
	,blendDestination: null
	,blendOperation: null
	,alphaBlendSource: null
	,alphaBlendDestination: null
	,alphaBlendOperation: null
	,colorWriteMaskRed: null
	,colorWriteMaskGreen: null
	,colorWriteMaskBlue: null
	,colorWriteMaskAlpha: null
	,conservativeRasterization: null
	,__class__: kha_graphics4_PipelineStateBase
};
var kha_graphics4_PipelineState = function() {
	this.program = null;
	kha_graphics4_PipelineStateBase.call(this);
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = ["kha","graphics4","PipelineState"];
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	program: null
	,textures: null
	,textureValues: null
	,compile: function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
		this.program = kha_SystemImpl.gl.createProgram();
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var structure = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = structure.elements;
			while(_g2 < _g3.length) {
				var element = _g3[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == 4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			throw new js__$Boot_HaxeError("Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program));
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g1 = 0;
		var _g = this.textureValues.length;
		while(_g1 < _g) {
			var index = _g1++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMaskRed,this.colorWriteMaskGreen,this.colorWriteMaskBlue,this.colorWriteMaskAlpha);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highp = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338);
		var highpSupported = highp.precision != 0;
		var files = shader.files;
		var _g1 = 0;
		var _g = files.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(kha_SystemImpl.gl2) {
				if(files[i].indexOf("-webgl2") >= 0 || files[i].indexOf("runtime-string") >= 0) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			} else {
				if(!highpSupported && (files[i].indexOf("-relaxed") >= 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
				if(highpSupported && (files[i].indexOf("-relaxed") < 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			throw new js__$Boot_HaxeError("Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s));
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		if(location == null) {
			haxe_Log.trace("Warning: Uniform " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 92, className : "kha.graphics4.PipelineState", methodName : "getConstantLocation"});
		}
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,i);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			if(location == null) {
				haxe_Log.trace("Warning: Sampler " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 111, className : "kha.graphics4.PipelineState", methodName : "getTextureUnit"});
			}
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g1 = 0;
		var _g = this.textures.length;
		while(_g1 < _g) {
			var index = _g1++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilAction = $hxEnums["kha.graphics4.StencilAction"] = { __ename__ : ["kha","graphics4","StencilAction"], __constructs__ : ["Keep","Zero","Replace","Increment","IncrementWrap","Decrement","DecrementWrap","Invert"]
	,Keep: {_hx_index:0,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Zero: {_hx_index:1,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Replace: {_hx_index:2,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Increment: {_hx_index:3,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,IncrementWrap: {_hx_index:4,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Decrement: {_hx_index:5,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,DecrementWrap: {_hx_index:6,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Invert: {_hx_index:7,__enum__:"kha.graphics4.StencilAction",toString:$estr}
};
var kha_graphics4_TessellationControlShader = function() { };
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = ["kha","graphics4","TessellationControlShader"];
var kha_graphics4_TessellationEvaluationShader = function() { };
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = ["kha","graphics4","TessellationEvaluationShader"];
var kha_graphics4_TextureAddressing = $hxEnums["kha.graphics4.TextureAddressing"] = { __ename__ : ["kha","graphics4","TextureAddressing"], __constructs__ : ["Repeat","Mirror","Clamp"]
	,Repeat: {_hx_index:0,__enum__:"kha.graphics4.TextureAddressing",toString:$estr}
	,Mirror: {_hx_index:1,__enum__:"kha.graphics4.TextureAddressing",toString:$estr}
	,Clamp: {_hx_index:2,__enum__:"kha.graphics4.TextureAddressing",toString:$estr}
};
var kha_graphics4_TextureFilter = $hxEnums["kha.graphics4.TextureFilter"] = { __ename__ : ["kha","graphics4","TextureFilter"], __constructs__ : ["PointFilter","LinearFilter","AnisotropicFilter"]
	,PointFilter: {_hx_index:0,__enum__:"kha.graphics4.TextureFilter",toString:$estr}
	,LinearFilter: {_hx_index:1,__enum__:"kha.graphics4.TextureFilter",toString:$estr}
	,AnisotropicFilter: {_hx_index:2,__enum__:"kha.graphics4.TextureFilter",toString:$estr}
};
var kha_graphics4_TextureFormat = $hxEnums["kha.graphics4.TextureFormat"] = { __ename__ : ["kha","graphics4","TextureFormat"], __constructs__ : ["RGBA32","L8","RGBA128","DEPTH16","RGBA64","A32","A16"]
	,RGBA32: {_hx_index:0,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,L8: {_hx_index:1,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,RGBA128: {_hx_index:2,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,DEPTH16: {_hx_index:3,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,RGBA64: {_hx_index:4,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,A32: {_hx_index:5,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,A16: {_hx_index:6,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
};
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = ["kha","graphics4","TextureUnit"];
var kha_graphics4_Usage = $hxEnums["kha.graphics4.Usage"] = { __ename__ : ["kha","graphics4","Usage"], __constructs__ : ["StaticUsage","DynamicUsage","ReadableUsage"]
	,StaticUsage: {_hx_index:0,__enum__:"kha.graphics4.Usage",toString:$estr}
	,DynamicUsage: {_hx_index:1,__enum__:"kha.graphics4.Usage",toString:$estr}
	,ReadableUsage: {_hx_index:2,__enum__:"kha.graphics4.Usage",toString:$estr}
};
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.usage = usage;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		var _g2 = element.data;
		switch(_g2) {
		case 0:
			this.myStride += 4;
			break;
		case 1:
			this.myStride += 8;
			break;
		case 2:
			this.myStride += 12;
			break;
		case 3:
			this.myStride += 16;
			break;
		case 4:
			this.myStride += 64;
			break;
		}
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Float32Array(vertexCount * this.myStride / 4 | 0);
	this._data = this1;
	this.sizes = [];
	this.offsets = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g3 = 0;
	var _g11 = structure.elements;
	while(_g3 < _g11.length) {
		var element1 = _g11[_g3];
		++_g3;
		var size;
		var _g21 = element1.data;
		switch(_g21) {
		case 0:
			size = 1;
			break;
		case 1:
			size = 2;
			break;
		case 2:
			size = 3;
			break;
		case 3:
			size = 4;
			break;
		case 4:
			size = 16;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		var _g31 = element1.data;
		switch(_g31) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		}
		++index;
	}
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = ["kha","graphics4","VertexBuffer"];
kha_graphics4_VertexBuffer.prototype = {
	buffer: null
	,_data: null
	,mySize: null
	,myStride: null
	,sizes: null
	,offsets: null
	,usage: null
	,instanceDataStepRate: null
	,lock: function(start,count) {
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.mySize;
		}
		return this._data.subarray(start * this.stride(),(start + count) * this.stride());
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferData(34962,this._data,this.usage == kha_graphics4_Usage.DynamicUsage ? 35048 : 35044);
	}
	,stride: function() {
		return this.myStride;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl2 ? true : kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g1 = 0;
		var _g = this.sizes.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						if(kha_SystemImpl.gl2) {
							kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
						} else {
							ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
						}
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],5126,false,this.myStride,this.offsets[i]);
				if(ext) {
					if(kha_SystemImpl.gl2) {
						kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
					} else {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = ["kha","graphics4","VertexElement"];
kha_graphics4_VertexElement.prototype = {
	name: null
	,data: null
	,__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = ["kha","graphics4","VertexShader"];
kha_graphics4_VertexShader.prototype = {
	sources: null
	,type: null
	,shader: null
	,files: null
	,__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
	this.instanced = false;
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = ["kha","graphics4","VertexStructure"];
kha_graphics4_VertexStructure.prototype = {
	elements: null
	,instanced: null
	,add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_graphics5_Graphics = function() { };
$hxClasses["kha.graphics5.Graphics"] = kha_graphics5_Graphics;
kha_graphics5_Graphics.__name__ = ["kha","graphics5","Graphics"];
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(index,id) {
	if(id == null) {
		id = "unknown";
	}
	if(index == null) {
		index = 0;
	}
	this.index = index;
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[index] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = ["kha","input","Gamepad"];
kha_input_Gamepad.sendConnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = true;
	var _g = 0;
	var _g1 = kha_input_Gamepad.connectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.sendDisconnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = false;
	var _g = 0;
	var _g1 = kha_input_Gamepad.disconnectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.prototype = {
	index: null
	,axisListeners: null
	,buttonListeners: null
	,connected: null
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	,__class__: kha_input_Gamepad
};
var kha_network_Controller = function() {
	this.__id = kha_network_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.network.Controller"] = kha_network_Controller;
kha_network_Controller.__name__ = ["kha","network","Controller"];
kha_network_Controller.prototype = {
	__id: null
	,_inputBufferIndex: null
	,_inputBuffer: null
	,_id: function() {
		return this.__id;
	}
	,__class__: kha_network_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_network_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	this.pressListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = ["kha","input","Keyboard"];
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.__super__ = kha_network_Controller;
kha_input_Keyboard.prototype = $extend(kha_network_Controller.prototype,{
	notify: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
		if(pressListener != null) {
			this.pressListeners.push(pressListener);
		}
	}
	,remove: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
		if(pressListener != null) {
			HxOverrides.remove(this.pressListeners,pressListener);
		}
	}
	,downListeners: null
	,upListeners: null
	,pressListeners: null
	,sendDownEvent: function(code) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,0);
			bytes.b[4] = code & 255;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendUpEvent: function(code) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,1);
			bytes.b[4] = code & 255;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendPressEvent: function(char) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,2);
			bytes.b[4] = HxOverrides.cca(char,0) & 255;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.pressListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(char);
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_network_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = ["kha","input","Mouse"];
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.__super__ = kha_network_Controller;
kha_input_Mouse.prototype = $extend(kha_network_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 110, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 114, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 124, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 128, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 138, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 142, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 152, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 156, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 166, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 170, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,windowWheelListeners: null
	,windowLeaveListeners: null
	,sendLeaveEvent: function(windowId) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = ["kha","input","MouseImpl"];
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	__class__: kha_input_MouseImpl
});
var kha_input_Sensor = function() {
	this.listeners = [];
};
$hxClasses["kha.input.Sensor"] = kha_input_Sensor;
kha_input_Sensor.__name__ = ["kha","input","Sensor"];
kha_input_Sensor.get = function(type) {
	switch(type._hx_index) {
	case 0:
		return kha_input_Sensor.accelerometer;
	case 1:
		return kha_input_Sensor.gyroscope;
	}
};
kha_input_Sensor._changed = function(type,x,y,z) {
	var sensor = kha_input_Sensor.get(type == 0 ? kha_input_SensorType.Accelerometer : kha_input_SensorType.Gyroscope);
	var _g = 0;
	var _g1 = sensor.listeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(x,y,z);
	}
};
kha_input_Sensor.prototype = {
	listeners: null
	,notify: function(listener) {
		this.listeners.push(listener);
	}
	,__class__: kha_input_Sensor
};
var kha_input_SensorType = $hxEnums["kha.input.SensorType"] = { __ename__ : ["kha","input","SensorType"], __constructs__ : ["Accelerometer","Gyroscope"]
	,Accelerometer: {_hx_index:0,__enum__:"kha.input.SensorType",toString:$estr}
	,Gyroscope: {_hx_index:1,__enum__:"kha.input.SensorType",toString:$estr}
};
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = ["kha","input","Surface"];
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,touchStartListeners: null
	,touchEndListeners: null
	,moveListeners: null
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.bytes = bytes;
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = ["kha","internal","BytesBlob"];
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.readF32 = function(i) {
	var sign = (i & -2147483648) == 0 ? 1 : -1;
	var exp = i >> 23 & 255;
	var man = i & 8388607;
	switch(exp) {
	case 0:
		return 0.0;
	case 255:
		if(man != 0) {
			return NaN;
		} else if(sign > 0) {
			return Infinity;
		} else {
			return -Infinity;
		}
		break;
	default:
		return sign * ((man + 8388608) / 8388608.0) * Math.pow(2,exp - 127);
	}
};
kha_internal_BytesBlob.bit = function(value,position) {
	var b = (value >>> position & 1) == 1;
	if(b) {
		var a = 3;
		++a;
		return true;
	} else {
		var c = 4;
		--c;
		return false;
	}
};
kha_internal_BytesBlob.toText = function(chars,length) {
	var value = "";
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		value += String.fromCharCode(chars[i]);
	}
	return value;
};
kha_internal_BytesBlob.prototype = {
	bytes: null
	,sub: function(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	,length: null
	,get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value & 255;
	}
	,readU8: function(position) {
		var byte = this.bytes.b[position];
		++position;
		return byte;
	}
	,readS8: function(position) {
		var byte = this.bytes.b[position];
		++position;
		var sign = (byte & 128) == 0 ? 1 : -1;
		byte &= 127;
		return sign * byte;
	}
	,readU16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return first * 256 + second;
	}
	,readU16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return second * 256 + first;
	}
	,readU32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
	}
	,readU32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readS16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		if(sign == -1) {
			return -32767 + first * 256 + second;
		} else {
			return first * 256 + second;
		}
	}
	,readS16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		var sign = (second & 128) == 0 ? 1 : -1;
		second &= 127;
		position += 2;
		if(sign == -1) {
			return -32767 + second * 256 + first;
		} else {
			return second * 256 + first;
		}
	}
	,readS32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		} else {
			return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		}
	}
	,readS32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (fourth & 128) == 0 ? 1 : -1;
		fourth &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
		}
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readF32LE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32LE(position));
	}
	,readF32BE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32BE(position));
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,readUtf8Char: function(position) {
		if(position.value >= this.get_length()) {
			return -1;
		}
		var c = this.readU8(position.value);
		++position.value;
		var value = 0;
		if(!kha_internal_BytesBlob.bit(c,7)) {
			value = c;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && !kha_internal_BytesBlob.bit(c,5)) {
			var a = c & 31;
			var c2 = this.readU8(position.value);
			++position.value;
			var b = c2 & 63;
			value = a << 6 | b;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && !kha_internal_BytesBlob.bit(c,4)) {
			position.value += 2;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && kha_internal_BytesBlob.bit(c,4) && !kha_internal_BytesBlob.bit(c,3)) {
			position.value += 3;
		}
		return value;
	}
	,readUtf8Block: function(buffer,position) {
		var bufferindex = 0;
		if(position.value >= this.get_length()) {
			return "";
		}
		while(bufferindex < 2000) {
			var c = this.readUtf8Char(position);
			if(c < 0) {
				break;
			}
			buffer[bufferindex] = c;
			++bufferindex;
		}
		return kha_internal_BytesBlob.toText(buffer,bufferindex);
	}
	,readUtf8String: function() {
		var this1 = new Array(2000);
		var buffer = this1;
		var text = "";
		var start = 0;
		if(this.get_length() >= 3 && this.bytes.b[0] == 239 && this.bytes.b[1] == 187 && this.bytes.b[2] == 191) {
			start = 3;
		}
		var position = { value : start};
		while(position.value < this.get_length()) text += this.readUtf8Block(buffer,position);
		return text;
	}
	,toBytes: function() {
		return this.bytes;
	}
	,unload: function() {
		this.bytes = null;
	}
	,__class__: kha_internal_BytesBlob
};
var kha_internal_HdrFormat = function() { };
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = ["kha","internal","HdrFormat"];
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 43, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var this1 = new Uint8Array(4);
	var rgbe = this1;
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var this2 = new Uint8Array(2);
	var buf = this2;
	var bufferLength = buffer.length;
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 59, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0] & 255;
			data[offset++] = rgbe[1] & 255;
			data[offset++] = rgbe[2] & 255;
			data[offset++] = rgbe[3] & 255;
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 74, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			var this3 = new Uint8Array(4 * scanline_width);
			scanline_buffer = this3;
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			ptr_end = (i + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 88, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 95, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1] & 255;
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 106, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1] & 255;
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 112, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = scanline_width;
		while(_g1 < _g2) {
			var i1 = _g1++;
			data[offset] = scanline_buffer[i1] & 255;
			data[offset + 1] = scanline_buffer[i1 + scanline_width] & 255;
			data[offset + 2] = scanline_buffer[i1 + 2 * scanline_width] & 255;
			data[offset + 3] = scanline_buffer[i1 + 3 * scanline_width] & 255;
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCharCode(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var exposure = 1.0;
	var gamma = 1.0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			exposure = parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 175, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var this1 = new Uint8Array(width * height * 4);
	var data = this1;
	var scanline_width = width;
	var num_scanlines = height;
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,scanline_width,num_scanlines);
	var this2 = new Float32Array(width * height * 4);
	var floatData = this2;
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var e = data[offset + 3];
		var f = Math.pow(2.0,e - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
var kha_js_AEAudioChannel = function(element) {
	this.stopped = false;
	this.element = element;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = ["kha","js","AEAudioChannel"];
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	element: null
	,stopped: null
	,play: function() {
		this.stopped = false;
		if(kha_SystemImpl.mobile) {
			if(kha_SystemImpl.insideInputEvent) {
				this.element.play();
				kha_SystemImpl.mobileAudioPlaying = true;
			} else if(kha_SystemImpl.mobileAudioPlaying) {
				this.element.play();
			} else {
				kha_js_AEAudioChannel.todo.push(this);
			}
		} else {
			this.element.play();
		}
	}
	,__class__: kha_js_AEAudioChannel
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = ["kha","js","AudioElementAudio"];
kha_js_AudioElementAudio._compile = function() {
};
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	this.bakedQuadCache = new kha_AlignedQuad();
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha__$Color_Color_$Impl_$.fromBytes(0,0,0);
	canvas.save();
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = ["kha","js","CanvasGraphics"];
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	canvas: null
	,webfont: null
	,myColor: null
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.canvas.globalAlpha = this.get_opacity();
		this.canvas.drawImage((js_Boot.__cast(img , kha_CanvasImage)).image,x,y);
		this.canvas.globalAlpha = 1;
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.canvas.globalAlpha = this.get_opacity();
		try {
			if(dw < 0 || dh < 0) {
				this.canvas.save();
				this.canvas.translate(dx,dy);
				var x = 0.0;
				var y = 0.0;
				if(dw < 0) {
					this.canvas.scale(-1,1);
					x = -dw;
				}
				if(dh < 0) {
					this.canvas.scale(1,-1);
					y = -dh;
				}
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,x,y,dw,dh);
				this.canvas.restore();
			} else {
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,dx,dy,dw,dh);
			}
		} catch( ex ) {
			var ex1 = (ex instanceof js__$Boot_HaxeError) ? ex.val : ex;
		}
		this.canvas.globalAlpha = 1;
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,get_color: function() {
		return this.myColor;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.rect(x,y,width,height);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillRect: function(x,y,width,height) {
		var tmp = this.get_opacity();
		this.canvas.globalAlpha = tmp * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,bakedQuadCache: null
	,drawString: function(text,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var ypos = y;
			var _g1 = 0;
			var _g = text.length;
			while(_g1 < _g) {
				var i = _g1++;
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(HxOverrides.cca(text,i)),xpos,ypos);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,set_font: function(font) {
		this.webfont = js_Boot.__cast(font , kha_js_Font);
		return this.webfont;
	}
	,get_font: function() {
		return this.webfont;
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldWith = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.moveTo(0,0);
		this.canvas.stroke();
		this.canvas.lineWidth = oldWith;
	}
	,setTransformation: function(transformation) {
		this.canvas.setTransform(transformation._00,transformation._01,transformation._10,transformation._11,transformation._20,transformation._21);
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_Font = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.kravur = new kha_js_Font.Kravur(blob);
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = ["kha","js","Font"];
kha_js_Font.__interfaces__ = [kha_Resource];
kha_js_Font.fromBytes = function(bytes) {
	return new kha_js_Font(kha_internal_BytesBlob.fromBytes(bytes));
};
kha_js_Font.prototype = {
	kravur: null
	,images: null
	,height: function(fontSize) {
		return this.kravur._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this.kravur._get(fontSize).stringWidth(str);
	}
	,widthOfCharacters: function(fontSize,characters,start,length) {
		return this.kravur._get(fontSize).charactersWidth(characters,start,length);
	}
	,baseline: function(fontSize) {
		return this.kravur._get(fontSize).getBaselinePosition();
	}
	,getImage: function(fontSize,color) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var this1 = this.images;
			var v = new haxe_ds_IntMap();
			this1.h[imageIndex] = v;
		}
		if(!this.images.h[imageIndex].h.hasOwnProperty(color)) {
			var kravur = this.kravur._get(fontSize);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g1 = 0;
			var _g = bytes.length;
			while(_g1 < _g) {
				var i = _g1++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[imageIndex].h[color] = img;
			return img;
		}
		return this.images.h[imageIndex].h[color];
	}
	,unload: function() {
		this.kravur = null;
		this.images = null;
	}
	,__class__: kha_js_Font
};
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = ["kha","js","MobileWebAudio"];
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = ["kha","js","MobileWebAudioChannel"];
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	buffer: null
	,loop: null
	,source: null
	,gain: null
	,startTime: null
	,pauseTime: null
	,paused: null
	,stopped: null
	,createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,__class__: kha_js_MobileWebAudioChannel
};
var kha_js_MobileWebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			failed({ url : filename, error : "Audio format not supported"});
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = ["kha","js","MobileWebAudioSound"];
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	_buffer: null
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done,failed) {
	kha_Sound.call(this);
	this.done = done;
	this.failed = failed;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = ["kha","js","Sound"];
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	filenames: null
	,done: null
	,failed: null
	,element: null
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g1 = 0;
			var _g = this.filenames.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		this.failed({ url : this.element.src});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_Video = function() {
	kha_Video.call(this);
};
$hxClasses["kha.js.Video"] = kha_js_Video;
kha_js_Video.__name__ = ["kha","js","Video"];
kha_js_Video.fromFile = function(filenames,done) {
	var video = new kha_js_Video();
	video.done = done;
	video.element = window.document.createElement("video");
	video.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(video.element.canPlayType("video/webm") != "" && StringTools.endsWith(filename,".webm")) {
			video.filenames.push(filename);
		}
		if(video.element.canPlayType("video/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			video.filenames.push(filename);
		}
	}
	video.element.addEventListener("error",$bind(video,video.errorListener),false);
	video.element.addEventListener("canplaythrough",$bind(video,video.canPlayThroughListener),false);
	video.element.preload = "auto";
	video.element.src = video.filenames[0];
};
kha_js_Video.__super__ = kha_Video;
kha_js_Video.prototype = $extend(kha_Video.prototype,{
	filenames: null
	,element: null
	,done: null
	,texture: null
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g1 = 0;
			var _g = this.filenames.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "kha/js/Video.hx", lineNumber : 120, className : "kha.js.Video", methodName : "errorListener"});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_Image.fromVideo(this);
		}
		this.done(this);
	}
	,__class__: kha_js_Video
});
var kha_js_WebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = ["kha","js","WebAudioSound"];
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var ch0 = buffer.getChannelData(0);
			var len = ch0.length;
			var this1 = new Float32Array(len * 2);
			_gthis.uncompressedData = this1;
			if(buffer.numberOfChannels == 1) {
				var idx = 0;
				var i = 0;
				var lidx = len * 2;
				var uncompressInner = function() {
				};
				uncompressInner = function() {
					var chk_len = idx + 11025;
					var next_chk = chk_len > lidx ? lidx : chk_len;
					while(idx < next_chk) {
						_gthis.uncompressedData[idx] = ch0[i];
						_gthis.uncompressedData[idx + 1] = ch0[i];
						idx += 2;
						i += 1;
					}
					if(idx < lidx) {
						window.setTimeout(uncompressInner,0);
					} else {
						_gthis.compressedData = null;
					}
				};
				uncompressInner();
				window.setTimeout(done,250);
			} else {
				var ch1 = buffer.getChannelData(1);
				var idx1 = 0;
				var i1 = 0;
				var lidx1 = len * 2;
				var uncompressInner1 = function() {
				};
				uncompressInner1 = function() {
					var chk_len1 = idx1 + 11025;
					var next_chk1 = chk_len1 > lidx1 ? lidx1 : chk_len1;
					while(idx1 < next_chk1) {
						_gthis.uncompressedData[idx1] = ch0[i1];
						_gthis.uncompressedData[idx1 + 1] = ch1[i1];
						idx1 += 2;
						i1 += 1;
					}
					if(idx1 < lidx1) {
						window.setTimeout(uncompressInner1,0);
					} else {
						_gthis.compressedData = null;
					}
				};
				uncompressInner1();
				window.setTimeout(done,250);
			}
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = ["kha","js","graphics4","ConstantLocation"];
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	value: null
	,type: null
	,__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	this.matrixCache = new Float32Array(16);
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.colorMaskAlpha = true;
	this.colorMaskBlue = true;
	this.colorMaskGreen = true;
	this.colorMaskRed = true;
	this.depthMask = false;
	this.depthTest = false;
	this.renderTarget = renderTarget;
	this.init();
	if(kha_SystemImpl.gl2) {
		this.instancedExtension = true;
	} else {
		this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
	}
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = ["kha","js","graphics4","Graphics"];
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor._hx_index) {
	case 0:case 2:
		return 0;
	case 1:
		return 1;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op._hx_index) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	depthTest: null
	,depthMask: null
	,colorMaskRed: null
	,colorMaskGreen: null
	,colorMaskBlue: null
	,colorMaskAlpha: null
	,indicesCount: null
	,renderTarget: null
	,renderTargetFrameBuffer: null
	,renderTargetTexture: null
	,isCubeMap: null
	,isDepthAttachment: null
	,instancedExtension: null
	,blendMinMaxExtension: null
	,init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = (this.renderTarget instanceof kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g1 = 0;
				var _g = additionalRenderTargets.length;
				while(_g1 < _g) {
					var i = _g1++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g11 = 0;
				var _g2 = additionalRenderTargets.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i1 + 1);
				}
				if(kha_SystemImpl.gl2) {
					kha_SystemImpl.gl.drawBuffers(attachments);
				} else {
					kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
				}
			}
		}
	}
	,end: function() {
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask |= 16384;
			kha_SystemImpl.gl.colorMask(true,true,true,true);
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		kha_SystemImpl.gl.colorMask(this.colorMaskRed,this.colorMaskGreen,this.colorMaskBlue,this.colorMaskAlpha);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,renderTargetsInvertedY: function() {
		return true;
	}
	,setDepthMode: function(write,mode) {
		switch(mode._hx_index) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == kha_graphics4_BlendingFactor.BlendOne && destination == kha_graphics4_BlendingFactor.BlendZero) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,setVertexBuffer: function(vertexBuffer) {
		(js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing._hx_index) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing._hx_index) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter._hx_index) {
		case 0:
			switch(mipmapFilter._hx_index) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter._hx_index) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == kha_graphics4_TextureFilter.AnisotropicFilter) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter._hx_index) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setCullMode: function(mode) {
		switch(mode._hx_index) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		pipe.set();
		this.colorMaskRed = pipe.colorWriteMaskRed;
		this.colorMaskGreen = pipe.colorWriteMaskGreen;
		this.colorMaskBlue = pipe.colorWriteMaskBlue;
		this.colorMaskAlpha = pipe.colorWriteMaskAlpha;
	}
	,matrixCache: null
	,setMatrix: function(location,matrix) {
		this.matrixCache[0] = matrix._00;
		this.matrixCache[1] = matrix._01;
		this.matrixCache[2] = matrix._02;
		this.matrixCache[3] = matrix._03;
		this.matrixCache[4] = matrix._10;
		this.matrixCache[5] = matrix._11;
		this.matrixCache[6] = matrix._12;
		this.matrixCache[7] = matrix._13;
		this.matrixCache[8] = matrix._20;
		this.matrixCache[9] = matrix._21;
		this.matrixCache[10] = matrix._22;
		this.matrixCache[11] = matrix._23;
		this.matrixCache[12] = matrix._30;
		this.matrixCache[13] = matrix._31;
		this.matrixCache[14] = matrix._32;
		this.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrixCache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		var size = type == 5123 ? 2 : 4;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * size);
	}
	,convertStencilAction: function(action) {
		switch(action._hx_index) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == kha_graphics4_CompareMode.Always && bothPass == kha_graphics4_StencilAction.Keep && depthFail == kha_graphics4_StencilAction.Keep && stencilFail == kha_graphics4_StencilAction.Keep) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = 0;
			switch(compareMode._hx_index) {
			case 0:
				stencilFunc = 519;
				break;
			case 1:
				stencilFunc = 512;
				break;
			case 2:
				stencilFunc = 514;
				break;
			case 3:
				stencilFunc = 517;
				break;
			case 4:
				stencilFunc = 513;
				break;
			case 5:
				stencilFunc = 515;
				break;
			case 6:
				stencilFunc = 516;
				break;
			case 7:
				stencilFunc = 518;
				break;
			}
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			kha_SystemImpl.gl.stencilFunc(stencilFunc,referenceValue,readMask);
		}
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = ["kha","js","graphics4","Graphics2"];
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = ["kha","js","graphics4","TextureUnit"];
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	value: null
	,__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = ["kha","vr","VrInterface"];
kha_vr_VrInterface.prototype = {
	IsVrEnabled: function() {
		return false;
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrHeight = 0;
	this.vrWidth = 0;
	this.height = 0;
	this.width = 0;
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
	var displayEnabled = false;
	if(displayEnabled) {
		this.vrEnabled = true;
		this.getVRDisplays();
		haxe_Log.trace("Display enabled.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 39, className : "kha.js.vr.VrInterface", methodName : "new"});
	}
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = ["kha","js","vr","VrInterface"];
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	vrEnabled: null
	,vrDisplay: null
	,frameData: null
	,width: null
	,height: null
	,vrWidth: null
	,vrHeight: null
	,getVRDisplays: function() {
		var _gthis = this;
		var vrDisplayInstance = navigator.getVRDisplays();
		vrDisplayInstance.then(function(displays) {
			if(displays.length > 0) {
				_gthis.frameData = new VRFrameData();
				_gthis.vrDisplay = displays[0];
				_gthis.vrDisplay.depthNear = 0.1;
				_gthis.vrDisplay.depthFar = 1024.0;
				var leftEye = _gthis.vrDisplay.getEyeParameters("left");
				var rightEye = _gthis.vrDisplay.getEyeParameters("right");
				_gthis.width = kha_SystemImpl.khanvas.width;
				_gthis.height = kha_SystemImpl.khanvas.height;
				_gthis.vrWidth = Math.max(leftEye.renderWidth,rightEye.renderWidth) * 2 | 0;
				_gthis.vrHeight = Math.max(leftEye.renderHeight,rightEye.renderHeight) | 0;
			} else {
				haxe_Log.trace("There are no VR displays connected.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 59, className : "kha.js.vr.VrInterface", methodName : "getVRDisplays"});
			}
		});
	}
	,IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = ["kha","math","FastMatrix3"];
kha_math_FastMatrix3.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
	,__class__: kha_math_FastMatrix3
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = ["kha","math","FastMatrix4"];
kha_math_FastMatrix4.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
	,__class__: kha_math_FastMatrix4
};
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = ["kha","math","FastVector2"];
kha_math_FastVector2.prototype = {
	x: null
	,y: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,__class__: kha_math_FastVector2
};
var kha_network_ControllerBuilder = function() { };
$hxClasses["kha.network.ControllerBuilder"] = kha_network_ControllerBuilder;
kha_network_ControllerBuilder.__name__ = ["kha","network","ControllerBuilder"];
var kha_network_Session = function(maxPlayers,address,port) {
	this.controllers = new haxe_ds_IntMap();
	kha_network_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.network.Session"] = kha_network_Session;
kha_network_Session.__name__ = ["kha","network","Session"];
kha_network_Session.the = function() {
	return kha_network_Session.instance;
};
kha_network_Session.prototype = {
	controllers: null
	,maxPlayers: null
	,address: null
	,port: null
	,sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,__class__: kha_network_Session
};
var khm_Lang = function() { };
$hxClasses["khm.Lang"] = khm_Lang;
khm_Lang.__name__ = ["khm","Lang"];
khm_Lang.loadFolder = function(folder) {
	khm_Lang.ids = [];
	khm_Lang.langs = [];
	var fields = Reflect.fields(kha_Assets.blobs);
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		if(field.indexOf(folder) == -1) {
			continue;
		}
		var ereg = new EReg(folder + "_(.*)_json$","");
		if(!ereg.match(field)) {
			continue;
		}
		var id = ereg.matched(1);
		khm_Lang.ids.push(id);
		var file = kha_Assets.blobs.get(field);
		var data = JSON.parse(file.toString());
		var lang = new haxe_ds_StringMap();
		var keys = Reflect.fields(data);
		var _g1 = 0;
		while(_g1 < keys.length) {
			var key = keys[_g1];
			++_g1;
			var v = Reflect.field(data,key);
			if(__map_reserved[key] != null) {
				lang.setReserved(key,v);
			} else {
				lang.h[key] = v;
			}
		}
		khm_Lang.langs.push(lang);
	}
};
khm_Lang.set = function(code,def) {
	if(def == null) {
		def = "en";
	}
	khm_Lang.iso = code == null ? kha_System.get_language() : code;
	var defId = -1;
	var id = -1;
	var _g1 = 0;
	var _g = khm_Lang.ids.length;
	while(_g1 < _g) {
		var i = _g1++;
		var lang = khm_Lang.ids[i];
		if(lang == def) {
			defId = i;
		}
		if(lang == khm_Lang.iso) {
			id = i;
		}
	}
	if(defId == -1) {
		throw new js__$Boot_HaxeError("default language file (" + def + ") not found");
	}
	if(id == -1) {
		khm_Lang.iso = def;
		id = defId;
	}
	khm_Lang.current = khm_Lang.langs[id];
	khm_Lang.basic = khm_Lang.langs[defId];
	khm_Lang.setGlyphs();
};
khm_Lang.setGlyphs = function() {
	var code = HxOverrides.substr(khm_Lang.iso,0,2);
	khm_Lang.fontGlyphs = [];
	var _g = 32;
	while(_g < 256) {
		var i = _g++;
		khm_Lang.fontGlyphs.push(i);
	}
	if(code == "ru") {
		var _g1 = 1024;
		while(_g1 < 1106) {
			var i1 = _g1++;
			khm_Lang.fontGlyphs.push(i1);
		}
	}
};
khm_Lang.get = function(id) {
	var _this = khm_Lang.current;
	if((__map_reserved[id] != null ? _this.getReserved(id) : _this.h[id]) != null) {
		var _this1 = khm_Lang.current;
		if(__map_reserved[id] != null) {
			return _this1.getReserved(id);
		} else {
			return _this1.h[id];
		}
	}
	var _this2 = khm_Lang.basic;
	if((__map_reserved[id] != null ? _this2.getReserved(id) : _this2.h[id]) != null) {
		var _this3 = khm_Lang.basic;
		if(__map_reserved[id] != null) {
			return _this3.getReserved(id);
		} else {
			return _this3.h[id];
		}
	}
	return id;
};
var khm_Settings = function() { };
$hxClasses["khm.Settings"] = khm_Settings;
khm_Settings.__name__ = ["khm","Settings"];
khm_Settings.init = function(def) {
	khm_Settings.defaults = def;
	if(khm_Settings.defaults.version == null) {
		khm_Settings.defaults.version = 1;
	}
};
khm_Settings.read = function() {
	var file = kha_Storage.defaultFile();
	var data = file.readObject();
	data = data != null && data.version == khm_Settings.defaults.version ? data : khm_Settings.defaults;
	return data;
};
khm_Settings.set = function(sets) {
	var data = khm_Settings.read();
	var fields = Reflect.fields(sets);
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		var value = Reflect.field(sets,field);
		data[field] = value;
	}
	khm_Settings.write(data);
};
khm_Settings.write = function(data) {
	var file = kha_Storage.defaultFile();
	if(data.version == null) {
		data.version = khm_Settings.defaults.version;
	}
	file.writeObject(data);
};
var khm_editor_Tool = function() { };
$hxClasses["khm.editor.Tool"] = khm_editor_Tool;
khm_editor_Tool.__name__ = ["khm","editor","Tool"];
khm_editor_Tool.prototype = {
	undo: null
	,redo: null
	,onMouseDown: null
	,onMouseMove: null
	,onMouseUp: null
	,onRender: null
	,onUpdate: null
	,__class__: khm_editor_Tool
};
var khm_editor_Arrow = function(editor,tilemap) {
	this.y = 0;
	this.x = 0;
	this.editor = editor;
	this.tilemap = tilemap;
};
$hxClasses["khm.editor.Arrow"] = khm_editor_Arrow;
khm_editor_Arrow.__name__ = ["khm","editor","Arrow"];
khm_editor_Arrow.__interfaces__ = [khm_editor_Tool];
khm_editor_Arrow.prototype = {
	editor: null
	,tilemap: null
	,x: null
	,y: null
	,clearHistory: function() {
	}
	,undo: function() {
	}
	,redo: function() {
	}
	,onMouseDown: function(p,layer,x,y,tile) {
		this.x = x;
		this.y = y;
		this.action(layer,x,y,tile);
	}
	,onMouseMove: function(p,layer,x,y,tile) {
		this.x = x;
		this.y = y;
	}
	,onMouseUp: function(p,layer,x,y,tile) {
		this.x = x;
		this.y = y;
	}
	,onUpdate: function() {
	}
	,onRender: function(g) {
	}
	,action: function(layer,x,y,tile) {
		var _gthis = this;
		var objs = this.tilemap.getObjects(layer,x,y);
		if(objs.length == 0) {
			var _g1 = 0;
			var _g = this.tilemap.map.layers.length;
			while(_g1 < _g) {
				var i = _g1++;
				layer = i;
				objs = this.tilemap.getObjects(layer,x,y);
				if(objs.length != 0) {
					break;
				}
			}
		}
		if(objs.length == 0) {
			return;
		}
		khm_editor_ui_Modal.prompt("Object:",JSON.stringify(objs,null,"  "),function(data) {
			var objs1 = JSON.parse(data);
			if(objs1 != null) {
				_gthis.tilemap.setObjects(layer,x,y,objs1);
			}
		});
	}
	,__class__: khm_editor_Arrow
};
var khm_editor_Brush = function(editor,tilemap) {
	this.maxHistory = 50;
	this.redoH = [];
	this.undoH = [];
	this.editor = editor;
	this.tilemap = tilemap;
};
$hxClasses["khm.editor.Brush"] = khm_editor_Brush;
khm_editor_Brush.__name__ = ["khm","editor","Brush"];
khm_editor_Brush.__interfaces__ = [khm_editor_Tool];
khm_editor_Brush.prototype = {
	undoH: null
	,redoH: null
	,maxHistory: null
	,editor: null
	,tilemap: null
	,addHistory: function(h) {
		this.undoH.push(h);
		if(this.undoH.length > this.maxHistory) {
			this.undoH.shift();
		}
		this.redoH = [];
	}
	,clearHistory: function() {
		this.undoH = [];
		this.redoH = [];
	}
	,undo: function() {
		var h1 = this.undoH;
		var hid = h1.length - 1;
		if(hid != -1) {
			var h = h1[hid];
			this.redoH.push({ layer : h.layer, x : h.x, y : h.y, tile : this.tilemap.getTile(h.layer,h.x,h.y).id, objs : this.tilemap.getObjects(h.layer,h.x,h.y)});
			this.tilemap.setTileId(h.layer,h.x,h.y,h.tile);
			this.tilemap.setObjects(h.layer,h.x,h.y,h.objs);
			h1.pop();
		}
	}
	,redo: function() {
		var h1 = this.redoH;
		var hid = h1.length - 1;
		if(hid != -1) {
			var h = h1[hid];
			this.undoH.push({ layer : h.layer, x : h.x, y : h.y, tile : this.tilemap.getTile(h.layer,h.x,h.y).id, objs : this.tilemap.getObjects(h.layer,h.x,h.y)});
			this.tilemap.setTileId(h.layer,h.x,h.y,h.tile);
			this.tilemap.setObjects(h.layer,h.x,h.y,h.objs);
			h1.pop();
		}
	}
	,onMouseDown: function(p,layer,x,y,tile) {
		this.action(p,layer,x,y,tile);
	}
	,onMouseMove: function(p,layer,x,y,tile) {
		if(!p.isDown) {
			return;
		}
		this.action(p,layer,x,y,tile);
	}
	,onMouseUp: function(p,layer,x,y,tile) {
	}
	,onUpdate: function() {
	}
	,onRender: function(g) {
	}
	,action: function(p,layer,x,y,tile) {
		var old = this.tilemap.getTile(layer,x,y).id;
		if(old == tile) {
			return;
		}
		if(p.type == 1) {
			this.editor.set_tile(old);
			return;
		}
		var objs = this.tilemap.getObjects(layer,x,y);
		this.addHistory({ layer : layer, x : x, y : y, tile : old, objs : objs});
		this.tilemap.setTileId(layer,x,y,tile);
		var newObj = this.tilemap.objectTemplate(layer,tile);
		this.tilemap.setObjects(layer,x,y,[newObj]);
	}
	,__class__: khm_editor_Brush
};
var khm_editor_Editor = function() {
	this.y = 0;
	this.x = 0;
	this.isGridEnabled = false;
	this.eraserMode = { tile : 0, layer : 0};
	this.cursor = { x : 0, y : 0};
	this.tiles = [];
	this.layer = 0;
	khm_Screen.call(this);
};
$hxClasses["khm.editor.Editor"] = khm_editor_Editor;
khm_editor_Editor.__name__ = ["khm","editor","Editor"];
khm_editor_Editor.testMap = function(editor,tilemap) {
};
khm_editor_Editor.exit = function() {
};
khm_editor_Editor.__super__ = khm_Screen;
khm_editor_Editor.prototype = $extend(khm_Screen.prototype,{
	tilemap: null
	,get_tileSize: function() {
		return this.tilemap.tileset.tileSize;
	}
	,tilePanel: null
	,buttons: null
	,arrow: null
	,brush: null
	,fillRect: null
	,pipette: null
	,hand: null
	,toolName: null
	,tool: null
	,set_tool: function(tool) {
		this.tool = tool;
		var arr = Type.getClassName(tool == null ? null : js_Boot.getClass(tool)).split(".");
		this.toolName = arr[arr.length - 1];
		return tool;
	}
	,get_tilesLengths: function() {
		return this.tilemap.tileset.tilesLengths;
	}
	,layer: null
	,get_tile: function() {
		return this.tiles[this.layer];
	}
	,set_tile: function(tile) {
		this.tiles[this.layer] = tile;
		return tile;
	}
	,tiles: null
	,cursor: null
	,eraserMode: null
	,isGridEnabled: null
	,x: null
	,y: null
	,init: function() {
		khm_utils_FileReference.onDrop($bind(this,this.onFileLoad),false);
		this.tilemap = new khm_tilemap_Tilemap();
		var tileset = new khm_tilemap_Tileset(kha_Assets.blobs.tiles_json);
		this.tilemap.init(tileset);
		var map = this.newMap({ w : 10, h : 10});
		this.tilemap.loadMap(map);
		this.tilePanel = new khm_editor_TilePanel(this,this.tilemap);
		this.arrow = new khm_editor_Arrow(this,this.tilemap);
		this.brush = new khm_editor_Brush(this,this.tilemap);
		this.fillRect = new khm_editor_FillRect(this,this.tilemap);
		this.pipette = new khm_editor_Pipette(this,this.tilemap);
		this.hand = new khm_editor_Hand(this,this.tilemap);
		this.set_tool(this.brush);
		var _g = 0;
		var _g1 = this.get_tilesLengths();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			this.tiles.push(0);
		}
		this.initButtons();
		this.onResize();
	}
	,initButtons: function() {
		var i = kha_Assets.images;
		var h = 48;
		this.buttons = [new khm_editor_ui_Button({ x : 0, y : h, img : i.icons_arrow, keys : [77]}),new khm_editor_ui_Button({ x : 0, y : h * 2, img : i.icons_paint_brush, keys : [66]}),new khm_editor_ui_Button({ x : 0, y : h * 3, img : i.icons_assembly_area, keys : [82]}),new khm_editor_ui_Button({ x : 0, y : h * 4, img : i.icons_pipette, keys : [80]}),new khm_editor_ui_Button({ x : khm_Screen.w - h - this.tilePanel.w * this.get_tileSize(), y : 0, img : i.icons_play, keys : [48]})];
		if(khm_Screen.isTouch) {
			this.buttons = this.buttons.concat([new khm_editor_ui_Button({ x : 0, y : h * 5, img : i.icons_hand, keys : [72]}),new khm_editor_ui_Button({ x : 0, y : khm_Screen.h - h, img : i.icons_undo, keys : [17,90]}),new khm_editor_ui_Button({ x : h, y : khm_Screen.h - h, img : i.icons_redo, keys : [17,89]})]);
		}
	}
	,moveCamera: function(speed) {
		this.tilemap.camera.x += speed.x;
		this.tilemap.camera.y += speed.y;
		this.updateCamera();
	}
	,onKeyDown: function(key) {
		if(this.keys.h[17] || this.keys.h[224]) {
			if(key == 90) {
				if(!this.keys.h[16]) {
					this.tool.undo();
				} else {
					this.tool.redo();
				}
			}
			if(key == 89) {
				this.tool.redo();
			}
			if(key == 83) {
				this.keys.h[83] = false;
				this.keys.h[224] = false;
				var v = false;
				this.keys.h[17] = v;
				this.save(this.tilemap.map);
			}
		}
		if(key == 32) {
			this.eraserMode.layer = this.layer;
			this.eraserMode.tile = this.get_tile();
			this.set_tile(0);
		} else if(key == 77) {
			this.set_tool(this.arrow);
		} else if(key == 66) {
			this.set_tool(this.brush);
		} else if(key == 82) {
			this.set_tool(this.fillRect);
		} else if(key == 80) {
			this.set_tool(this.pipette);
		} else if(key == 72) {
			this.set_tool(this.hand);
		} else if(key == 79) {
			this.browse();
		} else if(key == 78) {
			this.createMap();
		} else if(key == 57) {
			this.resizeMap();
		} else if(key == 81) {
			this.prevTile();
		} else if(key == 69) {
			this.nextTile();
		} else if(key == 71) {
			this.isGridEnabled = !this.isGridEnabled;
		} else if(key == 48) {
			khm_editor_Editor.testMap(this,this.tilemap);
		} else if(key - 49 >= 0 && key - 49 <= 9) {
			var newLayer = key - 49;
			if(newLayer < this.tilemap.map.layers.length) {
				this.layer = newLayer;
			}
		} else if(key == 189 || key == 173) {
			if(this.scale > 1) {
				this.setScale(this.scale - 1);
			}
		} else if(key == 187 || key == 61) {
			if(this.scale < 9) {
				this.setScale(this.scale + 1);
			}
		} else if(key == 27) {
			var confirm = ($_=window,$bind($_,$_.confirm));
			if(!confirm(khm_Lang.get("reset_warning") + " " + khm_Lang.get("are_you_sure"))) {
				return;
			}
			khm_editor_Editor.exit();
		}
	}
	,onKeyUp: function(key) {
		if(key == 32) {
			this.layer = this.eraserMode.layer;
			this.set_tile(this.eraserMode.tile);
		}
	}
	,prevTile: function() {
		var _g = this;
		var _g1 = _g.get_tile();
		_g.set_tile(_g1 - 1);
		if(this.get_tile() < 0) {
			this.set_tile(this.get_tilesLengths()[this.layer]);
		}
		if(this.get_tile() > this.get_tilesLengths()[this.layer]) {
			this.set_tile(0);
		}
	}
	,nextTile: function() {
		var _g = this;
		var _g1 = _g.get_tile();
		_g.set_tile(_g1 + 1);
		if(this.get_tile() < 0) {
			this.set_tile(this.get_tilesLengths()[this.layer]);
		}
		if(this.get_tile() > this.get_tilesLengths()[this.layer]) {
			this.set_tile(0);
		}
	}
	,createMap: function() {
		var prompt = ($_=window,$bind($_,$_.prompt));
		var newSize = JSON.stringify({ w : 20, h : 20});
		var size = JSON.parse(prompt("Map Size:",newSize));
		if(size == null) {
			return;
		}
		var map = this.newMap(size);
		this.onMapLoad(map);
	}
	,newMap: function(size) {
		var layersLength = this.tilemap.tileset.layersLength;
		var size1 = size.w;
		var size2 = size.h;
		var _g = [];
		var _g2 = 0;
		var _g1 = layersLength;
		while(_g2 < _g1) {
			var l = _g2++;
			var _g3 = [];
			var _g5 = 0;
			var _g4 = size.h;
			while(_g5 < _g4) {
				var iy = _g5++;
				var _g6 = [];
				var _g8 = 0;
				var _g7 = size.w;
				while(_g8 < _g7) {
					var ix = _g8++;
					_g6.push(new khm_tilemap_Tile(this.tilemap,l,0));
				}
				_g3.push(_g6);
			}
			_g.push(_g3);
		}
		var map = { w : size1, h : size2, layers : _g, objects : [], floatObjects : []};
		return map;
	}
	,resizeMap: function() {
		var prompt = ($_=window,$bind($_,$_.prompt));
		var addSize = JSON.stringify([0,1,0,1]);
		var size = JSON.parse(prompt("Add Size [SX, EX, SY, EY]:",addSize));
		if(size == null) {
			return;
		}
		var map = this.tilemap.map;
		var _g1 = 0;
		var _g = map.layers.length;
		while(_g1 < _g) {
			var l = _g1++;
			this.resizeLayer(l,size,true);
		}
		var sx = size[0];
		var ex = size[1];
		var sy = size[2];
		var ey = size[3];
		map.h += sy + ey;
		map.w += sx + ex;
		this.onMapLoad(map);
	}
	,resizeLayer: function(l,size,isFill) {
		var _gthis = this;
		var layer = this.tilemap.map.layers[l];
		var sx = size[0];
		var ex = size[1];
		var sy = size[2];
		var ey = size[3];
		var len = Math.abs(sy) | 0;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			if(sy < 0) {
				layer.shift();
			} else {
				layer.unshift([]);
				var _g2 = 0;
				var _g3 = layer[1];
				while(_g2 < _g3.length) {
					var tile = _g3[_g2];
					++_g2;
					var newTile = isFill ? tile.copy() : new khm_tilemap_Tile(_gthis.tilemap,l,0);
					layer[0].push(newTile);
				}
			}
		}
		var len1 = Math.abs(ey) | 0;
		var _g11 = 0;
		var _g4 = len1;
		while(_g11 < _g4) {
			var i1 = _g11++;
			if(ey < 0) {
				layer.pop();
			} else {
				layer.push([]);
				var h = layer.length - 1;
				var _g21 = 0;
				var _g31 = layer[h - 1];
				while(_g21 < _g31.length) {
					var tile1 = _g31[_g21];
					++_g21;
					var tile2 = isFill ? tile1.copy() : new khm_tilemap_Tile(_gthis.tilemap,l,0);
					layer[h].push(tile2);
				}
			}
		}
		var len2 = Math.abs(sx) | 0;
		var _g12 = 0;
		var _g5 = len2;
		while(_g12 < _g5) {
			var i2 = _g12++;
			var _g32 = 0;
			var _g22 = layer.length;
			while(_g32 < _g22) {
				var iy = _g32++;
				if(sx < 0) {
					layer[iy].shift();
				} else {
					var tile3 = isFill ? layer[iy][0].copy() : new khm_tilemap_Tile(_gthis.tilemap,l,0);
					layer[iy].unshift(tile3);
				}
			}
		}
		var len3 = Math.abs(ex) | 0;
		var _g13 = 0;
		var _g6 = len3;
		while(_g13 < _g6) {
			var i3 = _g13++;
			var _g33 = 0;
			var _g23 = layer.length;
			while(_g33 < _g23) {
				var iy1 = _g33++;
				if(ex < 0) {
					layer[iy1].pop();
				} else {
					var w = layer[iy1].length - 1;
					var id = isFill ? layer[iy1][w].copy() : new khm_tilemap_Tile(_gthis.tilemap,l,0);
					layer[iy1].push(id);
				}
			}
		}
	}
	,save: function(map,name) {
		if(name == null) {
			name = "map";
		}
		var data = this.tilemap.toJSON(map);
		khm_utils_FileReference.saveJSON(name,JSON.stringify(data));
	}
	,browse: function() {
		khm_utils_FileReference.browse($bind(this,this.onFileLoad),false);
	}
	,onFileLoad: function(file,name) {
		var ext = name.split(".").pop();
		var name1 = name.split(".")[0];
		if(ext == "json") {
			this.onMapJSONLoad(JSON.parse(file),name1);
		} else {
			haxe_Log.trace("unknown file extension " + ext,{ fileName : "khm/editor/Editor.hx", lineNumber : 347, className : "khm.editor.Editor", methodName : "onFileLoad"});
		}
	}
	,onMapJSONLoad: function(map,name) {
		this.onMapLoad(this.tilemap.fromJSON(map),name);
	}
	,onMapLoad: function(map,name) {
		if(name != null) {
			map.name = name;
		}
		this.tilemap.loadMap(map);
		this.clearHistory();
	}
	,clearHistory: function() {
		this.arrow.clearHistory();
		this.brush.clearHistory();
		this.fillRect.clearHistory();
		this.pipette.clearHistory();
		this.hand.clearHistory();
	}
	,updateCursor: function(pointer) {
		this.cursor.x = pointer.x;
		this.cursor.y = pointer.y;
		this.x = this.cursor.x / this.get_tileSize() - this.tilemap.camera.x / this.get_tileSize() | 0;
		this.y = this.cursor.y / this.get_tileSize() - this.tilemap.camera.y / this.get_tileSize() | 0;
		if(this.x < 0) {
			this.x = 0;
		}
		if(this.y < 0) {
			this.y = 0;
		}
		if(this.x > this.tilemap.map.w - 1) {
			this.x = this.tilemap.map.w - 1;
		}
		if(this.y > this.tilemap.map.h - 1) {
			this.y = this.tilemap.map.h - 1;
		}
	}
	,onMouseDown: function(p) {
		if(this.tilePanel.onDown(p)) {
			return;
		}
		if(khm_editor_ui_Button.onDown(this,this.buttons,p)) {
			return;
		}
		this.updateCursor(p);
		this.tool.onMouseDown(p,this.layer,this.x,this.y,this.get_tile());
	}
	,onMouseMove: function(p) {
		if(this.tilePanel.onMove(p)) {
			return;
		}
		if(khm_editor_ui_Button.onMove(this,this.buttons,p)) {
			return;
		}
		this.updateCursor(p);
		this.tool.onMouseMove(p,this.layer,this.x,this.y,this.get_tile());
	}
	,onMouseUp: function(p) {
		if(this.tilePanel.onUp(p)) {
			return;
		}
		if(khm_editor_ui_Button.onUp(this,this.buttons,p)) {
			return;
		}
		this.tool.onMouseUp(p,this.layer,this.x,this.y,this.get_tile());
	}
	,onMouseWheel: function(delta) {
		if(delta == 1) {
			this.prevTile();
		} else if(delta == -1) {
			this.nextTile();
		}
	}
	,onResize: function() {
		this.tilemap.camera.w = khm_Screen.w;
		this.tilemap.camera.h = khm_Screen.h;
		this.tilePanel.resize();
		this.initButtons();
	}
	,onUpdate: function() {
		this.tilePanel.update();
		this.tool.onUpdate();
		var sx = 0.0;
		var sy = 0.0;
		var s = this.get_tileSize() / 5;
		if(this.keys.h[37] || this.keys.h[65]) {
			sx += s;
		}
		if(this.keys.h[39] || this.keys.h[68]) {
			sx -= s;
		}
		if(this.keys.h[38] || this.keys.h[87]) {
			sy += s;
		}
		if(this.keys.h[40] || this.keys.h[83]) {
			sy -= s;
		}
		if(this.keys.h[16]) {
			sx *= 2;
			sy *= 2;
		}
		if(sx != 0) {
			this.tilemap.camera.x += sx;
		}
		if(sy != 0) {
			this.tilemap.camera.y += sy;
		}
		this.updateCamera();
	}
	,updateCamera: function() {
		var w = khm_Screen.w;
		var h = khm_Screen.h;
		var pw = this.tilemap.map.w * this.get_tileSize();
		var ph = this.tilemap.map.h * this.get_tileSize();
		var camera = this.tilemap.camera;
		var offset = 48;
		var maxW = w - pw - offset - this.tilePanel.w * this.get_tileSize();
		var maxH = h - ph - offset;
		if(camera.x > offset) {
			camera.x = offset;
		}
		if(camera.x < maxW) {
			camera.x = maxW;
		}
		if(camera.y > offset) {
			camera.y = offset;
		}
		if(camera.y < maxH) {
			camera.y = maxH;
		}
		if(pw < w - offset * 2 - this.tilePanel.w * this.get_tileSize()) {
			camera.x = w / 2 - pw / 2;
		}
		if(ph < h - offset * 2) {
			camera.y = h / 2 - ph / 2;
		}
		camera.x = camera.x | 0;
		camera.y = camera.y | 0;
	}
	,onRender: function(frame) {
		var g = frame.get_g2();
		g.begin(true,-4340787);
		g.set_color(1342177280);
		g.drawRect(this.tilemap.camera.x,this.tilemap.camera.y - 1,this.tilemap.map.w * this.get_tileSize() + 1,this.tilemap.map.h * this.get_tileSize() + 1);
		this.tilemap.drawLayers(g);
		this.tool.onRender(g);
		this.drawGrid(g);
		this.drawCursor(g);
		var _g = 0;
		var _g1 = this.buttons;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.draw(g);
		}
		this.tilePanel.render(g);
		g.set_color(-16777216);
		g.set_font(kha_Assets.fonts.OpenSans_Regular);
		g.set_fontSize(24);
		var s = "Layer: " + (this.layer + 1) + " | Tile: " + this.get_tile() + " | Objects: " + this.tilemap.map.objects.length;
		g.drawString(s,0,0);
		var fh = g.get_font().height(g.get_fontSize());
		g.drawString("" + this.toolName + " | " + this.x + ", " + this.y,0,fh);
		g.end();
	}
	,drawGrid: function(g) {
		if(!this.isGridEnabled) {
			return;
		}
		g.set_color(352321536);
		var _g1 = 0;
		var _g = this.tilemap.map.w;
		while(_g1 < _g) {
			var ix = _g1++;
			var _g3 = 0;
			var _g2 = this.tilemap.map.h;
			while(_g3 < _g2) {
				var iy = _g3++;
				g.drawRect(this.tilemap.camera.x + ix * this.get_tileSize() + 1,this.tilemap.camera.y + iy * this.get_tileSize(),this.get_tileSize() - 1,this.get_tileSize() - 1);
			}
		}
	}
	,drawCursor: function(g) {
		if(this.tool == this.hand) {
			return;
		}
		g.set_color(-2013265920);
		var px = this.x * this.get_tileSize() + this.tilemap.camera.x;
		var py = this.y * this.get_tileSize() + this.tilemap.camera.y - 1;
		g.drawRect(px,py,this.get_tileSize() + 1,this.get_tileSize() + 1);
		if(this.tool == this.arrow) {
			return;
		}
		if(this.get_tile() == 0) {
			g.set_color(-1996554240);
			g.drawLine(px,py + 1,px + this.get_tileSize(),py + this.get_tileSize() + 1);
			g.drawLine(px + this.get_tileSize(),py + 1,px,py + this.get_tileSize() + 1);
		}
		if(this.get_tile() < 1) {
			return;
		}
		g.set_color(-1);
		this.drawTile(g,this.layer,this.x * this.get_tileSize() + this.tilemap.camera.x,this.y * this.get_tileSize() + this.tilemap.camera.y,this.get_tile());
	}
	,drawTile: function(g,layer,x,y,id) {
		if(id <= 0) {
			return;
		}
		var tileset = this.tilemap.tileset;
		id += tileset.layersOffsets[layer];
		var tx = id % tileset.w * this.get_tileSize();
		var ty = (id / tileset.w | 0) * this.get_tileSize();
		g.drawSubImage(tileset.img,x,y,tx,ty,this.get_tileSize(),this.get_tileSize());
	}
	,__class__: khm_editor_Editor
});
var khm_editor_FillRect = function(editor,tilemap) {
	this.maxHistory = 10;
	this.redoH = [];
	this.undoH = [];
	this.editor = editor;
	this.tilemap = tilemap;
};
$hxClasses["khm.editor.FillRect"] = khm_editor_FillRect;
khm_editor_FillRect.__name__ = ["khm","editor","FillRect"];
khm_editor_FillRect.__interfaces__ = [khm_editor_Tool];
khm_editor_FillRect.prototype = {
	undoH: null
	,redoH: null
	,maxHistory: null
	,editor: null
	,tilemap: null
	,start: null
	,end: null
	,addHistory: function(h) {
		this.undoH.push(h);
		if(this.undoH.length > this.maxHistory) {
			this.undoH.shift();
		}
		this.redoH = [];
	}
	,clearHistory: function() {
		this.undoH = [];
		this.redoH = [];
	}
	,undo: function() {
		var h1 = this.undoH;
		var h2 = this.redoH;
		var hid = h1.length - 1;
		if(hid != -1) {
			var h = h1[hid];
			var olds = this.copyRect(h.rect,h.layer);
			this.fillTiles(h.rect,h.layer,h.tiles);
			h2.push({ layer : h.layer, rect : h.rect, tiles : olds});
			h1.pop();
		}
	}
	,redo: function() {
		var h1 = this.redoH;
		var h2 = this.undoH;
		var hid = h1.length - 1;
		if(hid != -1) {
			var h = h1[hid];
			var olds = this.copyRect(h.rect,h.layer);
			this.fillTiles(h.rect,h.layer,h.tiles);
			h2.push({ layer : h.layer, rect : h.rect, tiles : olds});
			h1.pop();
		}
	}
	,onMouseDown: function(p,layer,x,y,tile) {
		this.start = { x : x, y : y};
		this.end = this.start;
	}
	,onMouseMove: function(p,layer,x,y,tile) {
		if(!p.isDown) {
			return;
		}
		this.end = { x : x, y : y};
	}
	,onMouseUp: function(p,layer,x,y,tile) {
		if(this.start == null) {
			this.end = null;
			return;
		}
		if(p.type == 1) {
			if(x == this.start.x && y == this.start.y) {
				this.editor.set_tile(this.tilemap.getTile(layer,x,y).id);
			} else {
				tile = 0;
			}
			this.start = this.end = null;
			return;
		}
		this.end = { x : x, y : y};
		this.fill(layer,tile);
		this.start = this.end = null;
	}
	,onUpdate: function() {
	}
	,makeRect: function(p,p2) {
		var sx = p.x < p2.x ? p.x : p2.x;
		var sy = p.y < p2.y ? p.y : p2.y;
		var ex = p.x < p2.x ? p2.x : p.x;
		var ey = p.y < p2.y ? p2.y : p.y;
		return { x : sx, y : sy, w : ex - sx, h : ey - sy};
	}
	,onRender: function(g) {
		if(this.start == null || this.end == null) {
			return;
		}
		g.set_color(-65281);
		var rect = this.makeRect(this.start,this.end);
		var tileSize = this.tilemap.tileset.tileSize;
		g.drawRect(rect.x * tileSize + this.tilemap.camera.x - 1,rect.y * tileSize + this.tilemap.camera.y - 2,(rect.w + 1) * tileSize + 3,(rect.h + 1) * tileSize + 3);
	}
	,fill: function(layer,tile) {
		var rect = this.makeRect(this.start,this.end);
		var newObj = this.tilemap.objectTemplate(layer,tile);
		if(newObj != null) {
			return;
		}
		var olds = this.copyRect(rect,layer);
		this.fillRect(rect,layer,tile);
		this.addHistory({ layer : layer, rect : rect, tiles : olds});
	}
	,copyRect: function(rect,layer) {
		var arr = [];
		var _g1 = rect.y;
		var _g = rect.y + rect.h + 1;
		while(_g1 < _g) {
			var iy = _g1++;
			var ty = iy - rect.y;
			arr[ty] = [];
			var _g3 = rect.x;
			var _g2 = rect.x + rect.w + 1;
			while(_g3 < _g2) {
				var ix = _g3++;
				var tx = ix - rect.x;
				arr[ty][tx] = this.tilemap.getTile(layer,ix,iy).id;
			}
		}
		return arr;
	}
	,fillRect: function(rect,layer,tile) {
		var _g1 = rect.y;
		var _g = rect.y + rect.h + 1;
		while(_g1 < _g) {
			var iy = _g1++;
			var _g3 = rect.x;
			var _g2 = rect.x + rect.w + 1;
			while(_g3 < _g2) {
				var ix = _g3++;
				this.tilemap.setTileId(layer,ix,iy,tile);
			}
		}
	}
	,fillTiles: function(rect,layer,tiles) {
		var _g1 = rect.y;
		var _g = rect.y + rect.h + 1;
		while(_g1 < _g) {
			var iy = _g1++;
			var ty = iy - rect.y;
			var _g3 = rect.x;
			var _g2 = rect.x + rect.w + 1;
			while(_g3 < _g2) {
				var ix = _g3++;
				var tx = ix - rect.x;
				this.tilemap.setTileId(layer,ix,iy,tiles[ty][tx]);
			}
		}
	}
	,__class__: khm_editor_FillRect
};
var khm_editor_Hand = function(editor,tilemap) {
	this.isDown = false;
	this.speed = { x : 0, y : 0};
	this.editor = editor;
	this.tilemap = tilemap;
};
$hxClasses["khm.editor.Hand"] = khm_editor_Hand;
khm_editor_Hand.__name__ = ["khm","editor","Hand"];
khm_editor_Hand.__interfaces__ = [khm_editor_Tool];
khm_editor_Hand.prototype = {
	editor: null
	,tilemap: null
	,speed: null
	,isDown: null
	,clearHistory: function() {
	}
	,undo: function() {
	}
	,redo: function() {
	}
	,onMouseDown: function(p,layer,x,y,tile) {
		this.isDown = true;
	}
	,onMouseMove: function(p,layer,x,y,tile) {
		if(!p.isDown) {
			return;
		}
		this.speed.x = p.moveX;
		this.speed.y = p.moveY;
		this.editor.moveCamera(this.speed);
	}
	,onMouseUp: function(p,layer,x,y,tile) {
		this.isDown = false;
	}
	,onUpdate: function() {
		if(this.isDown) {
			return;
		}
		if(this.speed.x == 0 && this.speed.y == 0) {
			return;
		}
		if(this.speed.x != 0) {
			this.speed.x -= Math.abs(this.speed.x) / this.speed.x | 0;
		}
		if(this.speed.y != 0) {
			this.speed.y -= Math.abs(this.speed.y) / this.speed.y | 0;
		}
		this.editor.moveCamera(this.speed);
	}
	,onRender: function(g) {
	}
	,__class__: khm_editor_Hand
};
var khm_editor_Pipette = function(editor,tilemap) {
	this.editor = editor;
	this.tilemap = tilemap;
};
$hxClasses["khm.editor.Pipette"] = khm_editor_Pipette;
khm_editor_Pipette.__name__ = ["khm","editor","Pipette"];
khm_editor_Pipette.__interfaces__ = [khm_editor_Tool];
khm_editor_Pipette.prototype = {
	editor: null
	,tilemap: null
	,clearHistory: function() {
	}
	,undo: function() {
	}
	,redo: function() {
	}
	,onMouseDown: function(p,layer,x,y,tile) {
		this.action(layer,x,y,tile);
	}
	,onMouseMove: function(p,layer,x,y,tile) {
		if(p.isDown) {
			this.action(layer,x,y,tile);
		}
	}
	,onMouseUp: function(p,layer,x,y,tile) {
	}
	,onUpdate: function() {
	}
	,onRender: function(g) {
	}
	,action: function(layer,x,y,tile) {
		if(this.tilemap.getTile(layer,x,y).id == tile) {
			return;
		}
		this.editor.set_tile(this.tilemap.getTile(layer,x,y).id);
	}
	,__class__: khm_editor_Pipette
};
var khm_editor_TilePanel = function(editor,tilemap) {
	this.current = 0;
	this.opacity = 0.5;
	this.tiles = 0;
	this.maxW = 10;
	this.minW = 2;
	this.h = 0;
	this.w = 0;
	this.y = 0;
	this.x = 0;
	this.editor = editor;
	this.tilemap = tilemap;
	this.resize();
};
$hxClasses["khm.editor.TilePanel"] = khm_editor_TilePanel;
khm_editor_TilePanel.__name__ = ["khm","editor","TilePanel"];
khm_editor_TilePanel.prototype = {
	x: null
	,y: null
	,w: null
	,h: null
	,editor: null
	,tilemap: null
	,get_tileSize: function() {
		return this.tilemap.tileset.tileSize;
	}
	,minW: null
	,maxW: null
	,tiles: null
	,opacity: null
	,current: null
	,onDown: function(p) {
		var result = false;
		var x = p.x;
		var y = p.y;
		if(x < this.x || x >= this.x + this.w * this.get_tileSize() || y < this.y || y >= this.y + this.h * this.get_tileSize() ? false : true) {
			this.setTile(p);
			result = true;
		}
		return result;
	}
	,setTile: function(p) {
		var tx = (p.x - this.x) / this.get_tileSize() | 0;
		var ty = (p.y - this.y) / this.get_tileSize() | 0;
		var cord = ty * this.w + tx;
		var pos = this.countTilePos(cord);
		if(pos.layer == this.editor.get_tilesLengths().length) {
			return;
		}
		if(pos.tile != 0) {
			this.editor.layer = pos.layer;
		}
		this.editor.set_tile(pos.tile);
	}
	,countTilePos: function(tile) {
		var layer = 0;
		var _g = 0;
		var _g1 = this.editor.get_tilesLengths();
		while(_g < _g1.length) {
			var len = _g1[_g];
			++_g;
			if(tile > len) {
				tile -= len;
				++layer;
			} else {
				break;
			}
		}
		return { tile : tile, layer : layer};
	}
	,onMove: function(p) {
		var result = false;
		var x = p.x;
		var y = p.y;
		if(x < this.x || x >= this.x + this.w * this.get_tileSize() || y < this.y || y >= this.y + this.h * this.get_tileSize() ? false : true) {
			this.opacity = 1;
			result = true;
		} else {
			this.opacity = 0.5;
		}
		return result;
	}
	,onUp: function(p) {
		var result = false;
		var x = p.x;
		var y = p.y;
		if(x < this.x || x >= this.x + this.w * this.get_tileSize() || y < this.y || y >= this.y + this.h * this.get_tileSize() ? false : true) {
			result = true;
		}
		return result;
	}
	,resize: function() {
		this.update();
	}
	,update: function() {
		var id = this.editor.get_tile();
		var tilesLengths = this.editor.get_tilesLengths();
		var _g1 = 0;
		var _g = this.editor.layer;
		while(_g1 < _g) {
			var i = _g1++;
			id += tilesLengths[i];
		}
		this.current = id;
		this.tiles = 1;
		var offs = this.editor.get_tilesLengths();
		var _g2 = 0;
		while(_g2 < offs.length) {
			var i1 = offs[_g2];
			++_g2;
			this.tiles += i1;
		}
		this.w = this.minW;
		var _g11 = 0;
		var _g3 = this.maxW - this.minW;
		while(_g11 < _g3) {
			var i2 = _g11++;
			this.h = Math.ceil(this.tiles / this.w);
			if(this.y + this.h * this.get_tileSize() > khm_Screen.h) {
				this.w++;
			}
		}
		this.h = Math.ceil(this.tiles / this.w);
		this.x = khm_Screen.w - this.get_tileSize() * this.w;
	}
	,render: function(g) {
		g.set_opacity(this.opacity);
		this.drawBg(g,this.x,this.y,this.w,this.h);
		this.drawGrid(g,this.x,this.y,this.w,this.h);
		this.drawTiles(g,this.x,this.y,this.w,this.h);
		this.drawSelection(g,this.x,this.y,this.w,this.h);
		g.set_opacity(1);
	}
	,drawBg: function(g,x,y,w,h) {
		g.set_color(-1442840576);
		g.fillRect(x - 1,y,w * this.get_tileSize() + 1,h * this.get_tileSize());
	}
	,drawTiles: function(g,x,y,w,h) {
		var tilesLengths = this.editor.get_tilesLengths();
		var offX = 0;
		var tx = 0;
		var ty = 0;
		g.set_color(-1);
		var _g1 = 0;
		var _g = tilesLengths.length;
		while(_g1 < _g) {
			var l = _g1++;
			var _g3 = 0;
			var _g2 = tilesLengths[l] + 1;
			while(_g3 < _g2) {
				var id = _g3++;
				if(id == 0 && l != 0) {
					continue;
				}
				this.editor.drawTile(g,l,x + tx,y + ty,id);
				offX += this.get_tileSize();
				tx = offX % (w * this.get_tileSize());
				ty = (offX / (w * this.get_tileSize()) | 0) * this.get_tileSize();
			}
		}
	}
	,drawGrid: function(g,x,y,w,h) {
		var tiles = w * h;
		var offX = 0;
		var ix = 0;
		var iy = 0;
		g.set_color(1342177280);
		var _g1 = 0;
		var _g = tiles;
		while(_g1 < _g) {
			var i = _g1++;
			g.drawRect(x + ix,y + iy,this.get_tileSize(),this.get_tileSize());
			offX += this.get_tileSize();
			ix = offX % (w * this.get_tileSize());
			iy = (offX / (w * this.get_tileSize()) | 0) * this.get_tileSize();
		}
		g.drawLine(x,y,x,y + iy);
	}
	,drawSelection: function(g,x,y,w,h) {
		var offX = this.editor.get_tile() == 0 ? 0 : this.current * this.get_tileSize();
		var ix = offX % (w * this.get_tileSize());
		var iy = (offX / (w * this.get_tileSize()) | 0) * this.get_tileSize();
		g.set_color(-1426063361);
		g.drawRect(x + ix,y + iy,this.get_tileSize(),this.get_tileSize());
	}
	,__class__: khm_editor_TilePanel
};
var khm_editor_ui_Button = function(sets) {
	this.transformation = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
	this.angle = 0.0;
	this.clickMode = false;
	this.isDown = false;
	this.keys = [];
	this.rect = { x : sets.x, y : sets.y, w : 10, h : 10};
	if(sets.w != null) {
		this.rect.w = sets.w;
	}
	if(sets.h != null) {
		this.rect.h = sets.h;
	}
	if(sets.clickMode != null) {
		this.clickMode = sets.clickMode;
	}
	if(sets.img != null) {
		this.img = sets.img;
	}
	if(sets.w == null || sets.h == null) {
		if(this.img != null) {
			this.rect.w = this.img.get_width();
			this.rect.h = this.img.get_height();
		}
	}
	if(sets.angle != null) {
		this.angle = sets.angle;
	}
	if(sets.keys != null) {
		this.keys = sets.keys;
	}
	this.onDownFunc = sets.onDown;
};
$hxClasses["khm.editor.ui.Button"] = khm_editor_ui_Button;
khm_editor_ui_Button.__name__ = ["khm","editor","ui","Button"];
khm_editor_ui_Button.onDown = function(screen,buttons,p) {
	var result = false;
	var _g = 0;
	while(_g < buttons.length) {
		var b = buttons[_g];
		++_g;
		var x = p.x;
		var y = p.y;
		if(x < b.rect.x || x >= b.rect.x + b.rect.w || y < b.rect.y || y >= b.rect.y + b.rect.h ? false : true) {
			var _g1 = 0;
			var _g2 = b.keys;
			while(_g1 < _g2.length) {
				var i = _g2[_g1];
				++_g1;
				screen.onKeyDown(i);
				screen.keys.h[i] = true;
			}
			if(b.onDownFunc != null) {
				b.onDownFunc(p);
			}
			b.isDown = true;
			result = true;
		}
	}
	return result;
};
khm_editor_ui_Button.onMove = function(screen,buttons,p) {
	if(!p.isDown) {
		return false;
	}
	var active = false;
	var _g = 0;
	while(_g < buttons.length) {
		var b = buttons[_g];
		++_g;
		var x = p.startX;
		var y = p.startY;
		if(x < b.rect.x || x >= b.rect.x + b.rect.w || y < b.rect.y || y >= b.rect.y + b.rect.h ? false : true) {
			active = true;
			break;
		}
	}
	if(!active) {
		return false;
	}
	var _g1 = 0;
	while(_g1 < buttons.length) {
		var b1 = buttons[_g1];
		++_g1;
		var tmp;
		if(b1.isDown) {
			var x1 = p.x;
			var y1 = p.y;
			tmp = !(x1 < b1.rect.x || x1 >= b1.rect.x + b1.rect.w || y1 < b1.rect.y || y1 >= b1.rect.y + b1.rect.h ? false : true);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _g11 = 0;
			var _g2 = b1.keys;
			while(_g11 < _g2.length) {
				var i = _g2[_g11];
				++_g11;
				screen.keys.h[i] = false;
			}
			b1.isDown = false;
		}
	}
	var _g3 = 0;
	while(_g3 < buttons.length) {
		var b2 = buttons[_g3];
		++_g3;
		var x2 = p.x;
		var y2 = p.y;
		if(x2 < b2.rect.x || x2 >= b2.rect.x + b2.rect.w || y2 < b2.rect.y || y2 >= b2.rect.y + b2.rect.h ? false : true) {
			if(!b2.isDown) {
				var _g12 = 0;
				var _g21 = b2.keys;
				while(_g12 < _g21.length) {
					var i1 = _g21[_g12];
					++_g12;
					screen.keys.h[i1] = true;
				}
				b2.isDown = true;
			}
		}
	}
	return true;
};
khm_editor_ui_Button.onUp = function(screen,buttons,p) {
	var active = false;
	var _g = 0;
	while(_g < buttons.length) {
		var b = buttons[_g];
		++_g;
		var x = p.startX;
		var y = p.startY;
		if(x < b.rect.x || x >= b.rect.x + b.rect.w || y < b.rect.y || y >= b.rect.y + b.rect.h ? false : true) {
			active = true;
			break;
		}
	}
	if(!active) {
		return false;
	}
	var _g1 = 0;
	while(_g1 < buttons.length) {
		var b1 = buttons[_g1];
		++_g1;
		var x1 = p.x;
		var y1 = p.y;
		if(x1 < b1.rect.x || x1 >= b1.rect.x + b1.rect.w || y1 < b1.rect.y || y1 >= b1.rect.y + b1.rect.h ? false : true) {
			var _g11 = 0;
			var _g2 = b1.keys;
			while(_g11 < _g2.length) {
				var i = _g2[_g11];
				++_g11;
				screen.onKeyUp(i);
				screen.keys.h[i] = false;
			}
			b1.isDown = false;
		}
	}
	return true;
};
khm_editor_ui_Button.prototype = {
	rect: null
	,keys: null
	,isDown: null
	,onDownFunc: null
	,clickMode: null
	,img: null
	,angle: null
	,transformation: null
	,draw: function(g) {
		if(this.isDown) {
			g.set_color(1358954495);
			g.fillRect(this.rect.x,this.rect.y,this.rect.w,this.rect.h);
		}
		g.set_color(-1);
		if(this.angle != 0) {
			var _this = this.transformation;
			var m = g.transformations[g.transformations.length - 1];
			_this._00 = m._00;
			_this._10 = m._10;
			_this._20 = m._20;
			_this._01 = m._01;
			_this._11 = m._11;
			_this._21 = m._21;
			_this._02 = m._02;
			_this._12 = m._12;
			_this._22 = m._22;
			var _this1 = g.transformations[g.transformations.length - 1];
			var angle = this.angle * Math.PI / 180;
			var centerX = this.rect.x + this.rect.w / 2;
			var centerY = this.rect.y + this.rect.h / 2;
			var _this__00 = 1;
			var _this__10 = 0;
			var _this__20 = centerX;
			var _this__01 = 0;
			var _this__11 = 1;
			var _this__21 = centerY;
			var _this__02 = 0;
			var _this__12 = 0;
			var _this__22 = 1;
			var m__00 = Math.cos(angle);
			var m__10 = -Math.sin(angle);
			var m__20 = 0;
			var m__01 = Math.sin(angle);
			var m__11 = Math.cos(angle);
			var m__21 = 0;
			var m__02 = 0;
			var m__12 = 0;
			var m__22 = 1;
			var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
			var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
			var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
			var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
			var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
			var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
			var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
			var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
			var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
			var m__001 = 1;
			var m__101 = 0;
			var m__201 = -centerX;
			var m__011 = 0;
			var m__111 = 1;
			var m__211 = -centerY;
			var m__021 = 0;
			var m__121 = 0;
			var m__221 = 1;
			var m__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
			var m__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
			var m__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
			var m__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
			var m__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
			var m__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
			var m__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
			var m__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
			var m__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
			var transformation = new kha_math_FastMatrix3(_this1._00 * m__002 + _this1._10 * m__012 + _this1._20 * m__022,_this1._00 * m__102 + _this1._10 * m__112 + _this1._20 * m__122,_this1._00 * m__202 + _this1._10 * m__212 + _this1._20 * m__222,_this1._01 * m__002 + _this1._11 * m__012 + _this1._21 * m__022,_this1._01 * m__102 + _this1._11 * m__112 + _this1._21 * m__122,_this1._01 * m__202 + _this1._11 * m__212 + _this1._21 * m__222,_this1._02 * m__002 + _this1._12 * m__012 + _this1._22 * m__022,_this1._02 * m__102 + _this1._12 * m__112 + _this1._22 * m__122,_this1._02 * m__202 + _this1._12 * m__212 + _this1._22 * m__222);
			g.setTransformation(transformation);
			var _this2 = g.transformations[g.transformations.length - 1];
			_this2._00 = transformation._00;
			_this2._10 = transformation._10;
			_this2._20 = transformation._20;
			_this2._01 = transformation._01;
			_this2._11 = transformation._11;
			_this2._21 = transformation._21;
			_this2._02 = transformation._02;
			_this2._12 = transformation._12;
			_this2._22 = transformation._22;
		}
		if(this.img != null) {
			g.drawScaledImage(this.img,this.rect.x,this.rect.y,this.rect.w,this.rect.h);
		}
		if(this.angle != 0) {
			var transformation1 = this.transformation;
			g.setTransformation(transformation1);
			var _this3 = g.transformations[g.transformations.length - 1];
			_this3._00 = transformation1._00;
			_this3._10 = transformation1._10;
			_this3._20 = transformation1._20;
			_this3._01 = transformation1._01;
			_this3._11 = transformation1._11;
			_this3._21 = transformation1._21;
			_this3._02 = transformation1._02;
			_this3._12 = transformation1._12;
			_this3._22 = transformation1._22;
		}
	}
	,__class__: khm_editor_ui_Button
};
var khm_editor_ui_Modal = function() { };
$hxClasses["khm.editor.ui.Modal"] = khm_editor_ui_Modal;
khm_editor_ui_Modal.__name__ = ["khm","editor","ui","Modal"];
khm_editor_ui_Modal.prompt = function(name,data,callback) {
	var modal = window.document.createElement("div");
	var form = window.document.createElement("textarea");
	var style = window.document.createElement("style");
	var onCancel = function(e) {
		window.document.body.removeChild(modal);
		window.document.body.removeChild(style);
		e.stopPropagation();
		var canvas = window.document.querySelector("canvas");
		canvas.focus();
		callback(null);
	};
	var onSave = function(e1) {
		window.document.body.removeChild(modal);
		window.document.body.removeChild(style);
		e1.stopPropagation();
		var canvas1 = window.document.querySelector("canvas");
		canvas1.focus();
		callback(form.value);
	};
	modal.className = "modal";
	modal.onclick = onCancel;
	var content = window.document.createElement("div");
	content.className = "modal-content";
	content.onclick = function(e2) {
		e2.stopPropagation();
	};
	var title = window.document.createElement("div");
	title.textContent = name;
	form.style.width = "100%";
	form.rows = 15;
	form.value = data;
	var cancel = window.document.createElement("button");
	cancel.innerHTML = "Cancel";
	cancel.onclick = onCancel;
	var save = window.document.createElement("button");
	save.innerHTML = "Save";
	save.onclick = onSave;
	content.appendChild(title);
	content.appendChild(form);
	content.appendChild(window.document.createElement("br"));
	content.appendChild(cancel);
	content.appendChild(save);
	modal.appendChild(content);
	window.document.body.appendChild(modal);
	style.innerHTML = "\n\t\t.modal {\n\t\t\tposition: absolute;\n\t\t\tz-index: 1;\n\t\t\tpadding-top: 100px;\n\t\t\tleft: 0;\n\t\t\ttop: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\toverflow: auto;\n\t\t\tbackground-color: rgb(0, 0, 0);\n\t\t\tbackground-color: rgba(0, 0, 0, 0.4);\n\t\t}\n\n\t\t.modal-content {\n\t\t\tbackground-color: #fefefe;\n\t\t\tmargin: auto;\n\t\t\tpadding: 20px;\n\t\t\tborder: 1px solid #888;\n\t\t\twidth: 80%;\n\t\t}\n\t\t";
	window.document.body.appendChild(style);
};
var khm_tilemap_Camera = function(tilemap) {
	this.h = 0.0;
	this.w = 0.0;
	this.y = 0.0;
	this.x = 0.0;
	this.tilemap = tilemap;
	this.w = kha_System.windowWidth();
	this.h = kha_System.windowHeight();
};
$hxClasses["khm.tilemap.Camera"] = khm_tilemap_Camera;
khm_tilemap_Camera.__name__ = ["khm","tilemap","Camera"];
khm_tilemap_Camera.prototype = {
	tilemap: null
	,x: null
	,y: null
	,w: null
	,h: null
	,center: function(rect) {
		var centerX = this.w / 2 - rect.x - rect.w / 2;
		var centerY = this.h / 2 - rect.y - rect.h / 2;
		var pw = this.tilemap.map.w * this.tilemap.tileset.tileSize;
		var ph = this.tilemap.map.h * this.tilemap.tileset.tileSize;
		if(pw < this.w) {
			this.x = this.w / 2 - pw / 2;
		} else if(this.x != centerX) {
			this.x = centerX;
			if(this.x > 0) {
				this.x = 0;
			}
			if(this.x < this.w - pw) {
				this.x = this.w - pw;
			}
		}
		if(ph < this.h) {
			this.y = this.h / 2 - ph / 2;
		} else if(this.y != centerY) {
			this.y = centerY;
			if(this.y > 0) {
				this.y = 0;
			}
			if(this.y < this.h - ph) {
				this.y = this.h - ph;
			}
		}
	}
	,__class__: khm_tilemap_Camera
};
var khm_tilemap_Data = function() { };
$hxClasses["khm.tilemap.Data"] = khm_tilemap_Data;
khm_tilemap_Data.__name__ = ["khm","tilemap","Data"];
khm_tilemap_Data.initProps = function(tile) {
};
khm_tilemap_Data.onTransformedProps = function(tile,type) {
	switch(type) {
	case "flipX":
		break;
	case "flipY":
		break;
	case "rotate180":
		break;
	case "rotate270":
		break;
	case "rotate90":
		break;
	}
};
khm_tilemap_Data.objectTemplate = function(layer,tile) {
	if(layer == 0) {
		return null;
	} else {
		return null;
	}
};
var khm_tilemap_Tile = function(tilemap,layer,id,props) {
	this.tilemap = tilemap;
	this.set(layer,id,props);
};
$hxClasses["khm.tilemap.Tile"] = khm_tilemap_Tile;
khm_tilemap_Tile.__name__ = ["khm","tilemap","Tile"];
khm_tilemap_Tile.prototype = {
	layer: null
	,id: null
	,frame: null
	,props: null
	,tilemap: null
	,set: function(layer,id,props) {
		this.layer = layer;
		this.setTileProps(layer,this.id);
		this.id = id;
		this.setTileProps(this.layer,id);
		this.frame = 0;
		if(props != null) {
			this.setProps(props);
		}
	}
	,setProps: function(props) {
		this.props = props;
	}
	,setTileProps: function(layer,id) {
		this.props = this.tilemap.tileset.props[layer][id];
	}
	,copy: function() {
		var newProps = Reflect.copy(this.props);
		return new khm_tilemap_Tile(this.tilemap,this.layer,this.id,newProps);
	}
	,__class__: khm_tilemap_Tile
};
var khm_tilemap_Tilemap = function() {
	this.scale = 1.0;
};
$hxClasses["khm.tilemap.Tilemap"] = khm_tilemap_Tilemap;
khm_tilemap_Tilemap.__name__ = ["khm","tilemap","Tilemap"];
khm_tilemap_Tilemap.prototype = {
	map: null
	,camera: null
	,scale: null
	,tileset: null
	,init: function(tileset) {
		this.tileset = tileset;
		this.camera = new khm_tilemap_Camera(this);
	}
	,loadMap: function(map) {
		this.map = this.copyMap(map);
	}
	,loadJSON: function(map) {
		this.map = this.copyMap(this.fromJSON(map));
	}
	,fromJSON: function(map) {
		var _g = [];
		var _g2 = 0;
		var _g1 = map.layers.length;
		while(_g2 < _g1) {
			var l = _g2++;
			var _g3 = [];
			var _g5 = 0;
			var _g4 = map.layers[l].length;
			while(_g5 < _g4) {
				var iy = _g5++;
				var _g6 = [];
				var _g8 = 0;
				var _g7 = map.layers[l][iy].length;
				while(_g8 < _g7) {
					var ix = _g8++;
					_g6.push(new khm_tilemap_Tile(this,l,map.layers[l][iy][ix]));
				}
				_g3.push(_g6);
			}
			_g.push(_g3);
		}
		var layers = _g;
		return { name : map.name, w : map.w, h : map.h, layers : layers, objects : map.objects, floatObjects : map.floatObjects};
	}
	,toJSON: function(map) {
		var _g = [];
		var _g2 = 0;
		var _g1 = map.layers.length;
		while(_g2 < _g1) {
			var l = _g2++;
			var _g3 = [];
			var _g5 = 0;
			var _g4 = map.layers[l].length;
			while(_g5 < _g4) {
				var iy = _g5++;
				var _g6 = [];
				var _g8 = 0;
				var _g7 = map.layers[l][iy].length;
				while(_g8 < _g7) {
					var ix = _g8++;
					_g6.push(map.layers[l][iy][ix].id);
				}
				_g3.push(_g6);
			}
			_g.push(_g3);
		}
		var layers = _g;
		return { name : map.name, w : map.w, h : map.h, layers : layers, objects : map.objects, floatObjects : map.floatObjects};
	}
	,copyMap: function(map) {
		var _g = [];
		var _g1 = 0;
		var _g2 = map.layers;
		while(_g1 < _g2.length) {
			var l = _g2[_g1];
			++_g1;
			var _g3 = [];
			var _g5 = 0;
			var _g4 = l.length;
			while(_g5 < _g4) {
				var iy = _g5++;
				var _g6 = [];
				var _g8 = 0;
				var _g7 = l[iy].length;
				while(_g8 < _g7) {
					var ix = _g8++;
					_g6.push(l[iy][ix].copy());
				}
				_g3.push(_g6);
			}
			_g.push(_g3);
		}
		var layers = _g;
		var _g11 = [];
		var _g21 = 0;
		var _g31 = map.objects;
		while(_g21 < _g31.length) {
			var obj = _g31[_g21];
			++_g21;
			_g11.push(Reflect.copy(obj));
		}
		var objects = _g11;
		var _g22 = [];
		var _g32 = 0;
		var _g41 = map.floatObjects;
		while(_g32 < _g41.length) {
			var obj1 = _g41[_g32];
			++_g32;
			_g22.push(Reflect.copy(obj1));
		}
		var floatObjects = _g22;
		return { name : map.name, w : map.w, h : map.h, layers : layers, objects : objects, floatObjects : floatObjects};
	}
	,getTile: function(layer,x,y) {
		if(!(x > -1 && y > -1 && x < this.map.w && y < this.map.h)) {
			return new khm_tilemap_Tile(this,layer,0);
		}
		return this.map.layers[layer][y][x];
	}
	,setTileId: function(layer,x,y,id) {
		if(!(x > -1 && y > -1 && x < this.map.w && y < this.map.h)) {
			return;
		}
		var _this = this.map.layers[layer][y][x];
		_this.id = id;
		_this.setTileProps(_this.layer,id);
	}
	,drawLayer: function(g,l) {
		var screenW = Math.ceil(this.camera.w / this.tileset.tileSize) + 1;
		var screenH = Math.ceil(this.camera.h / this.tileset.tileSize) + 1;
		var ctx = -(this.camera.x / this.tileset.tileSize | 0);
		var cty = -(this.camera.y / this.tileset.tileSize | 0);
		var ctw = ctx + screenW;
		var cth = cty + screenH;
		var camX = (this.camera.x * this.scale | 0) / this.scale;
		var camY = (this.camera.y * this.scale | 0) / this.scale;
		var sx = ctx < 0 ? 0 : ctx;
		var sy = cty < 0 ? 0 : cty;
		var ex = ctw > this.map.w ? this.map.w : ctw;
		var ey = cth > this.map.h ? this.map.h : cth;
		g.set_color(-1);
		var _g1 = sy;
		var _g = ey;
		while(_g1 < _g) {
			var iy = _g1++;
			var _g3 = sx;
			var _g2 = ex;
			while(_g3 < _g2) {
				var ix = _g3++;
				var tile = this.map.layers[l][iy][ix];
				var id = tile.id;
				if(id > 0) {
					var layer = this.map.layers[l][iy][ix].layer;
					if(tile.frame > 0) {
						id = this.tileset.layersOffsets[layer];
						id += this.tileset.tilesLengths[layer];
						id += this.tileset.sprites[layer][tile.id].firstFrame + tile.frame;
					} else {
						id += this.tileset.layersOffsets[layer];
					}
					g.drawSubImage(this.tileset.img,ix * this.tileset.tileSize + camX,iy * this.tileset.tileSize + camY,id % this.tileset.w * this.tileset.tileSize,(id / this.tileset.w | 0) * this.tileset.tileSize,this.tileset.tileSize,this.tileset.tileSize);
				}
			}
		}
	}
	,drawLayers: function(g) {
		var _g1 = 0;
		var _g = this.map.layers.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.drawLayer(g,i);
		}
	}
	,getObjects: function(layer,x,y) {
		var arr = [];
		var _g = 0;
		var _g1 = this.map.objects;
		while(_g < _g1.length) {
			var obj = _g1[_g];
			++_g;
			if(obj.x == x && obj.y == y && obj.layer == layer) {
				arr.push(obj);
			}
		}
		return arr;
	}
	,setObjects: function(layer,x,y,objs) {
		var oldObjs = this.getObjects(layer,x,y);
		var _g = 0;
		while(_g < oldObjs.length) {
			var obj = oldObjs[_g];
			++_g;
			HxOverrides.remove(this.map.objects,obj);
		}
		var _g1 = 0;
		while(_g1 < objs.length) {
			var obj1 = objs[_g1];
			++_g1;
			if(obj1 != null) {
				if(obj1.layer != layer) {
					obj1.layer = layer;
				}
				if(obj1.x != x) {
					obj1.x = x;
				}
				if(obj1.y != y) {
					obj1.y = y;
				}
				this.map.objects.push(obj1);
			}
		}
	}
	,objectTemplate: function(layer,tile) {
		return khm_tilemap_Data.objectTemplate(layer,tile);
	}
	,__class__: khm_tilemap_Tilemap
};
var khm_tilemap_Tileset = function(data) {
	var text = data.toString();
	var json = JSON.parse(text);
	var generator = new khm_tilemap__$Tileset_TilesetGenerator();
	var ts = generator.fromJSON(json);
	this.tileSize = ts.tileSize;
	this.layersOffsets = ts.layersOffsets;
	this.tilesLengths = ts.tilesLengths;
	this.layersLength = ts.layersLength;
	this.sprites = ts.sprites;
	this.props = ts.props;
	this.img = ts.img;
	this.w = ts.w;
	this.h = ts.h;
};
$hxClasses["khm.tilemap.Tileset"] = khm_tilemap_Tileset;
khm_tilemap_Tileset.__name__ = ["khm","tilemap","Tileset"];
khm_tilemap_Tileset.prototype = {
	props: null
	,layersOffsets: null
	,tilesLengths: null
	,layersLength: null
	,sprites: null
	,img: null
	,w: null
	,h: null
	,tileSize: null
	,__class__: khm_tilemap_Tileset
};
var khm_tilemap__$Tileset_TilesetGenerator = function() {
	this.next = { file : "", x : 0, y : 0};
	this.y = 0;
	this.x = 0;
	this.offset = 0;
};
$hxClasses["khm.tilemap._Tileset.TilesetGenerator"] = khm_tilemap__$Tileset_TilesetGenerator;
khm_tilemap__$Tileset_TilesetGenerator.__name__ = ["khm","tilemap","_Tileset","TilesetGenerator"];
khm_tilemap__$Tileset_TilesetGenerator.prototype = {
	props: null
	,w: null
	,h: null
	,tileSize: null
	,offset: null
	,x: null
	,y: null
	,next: null
	,fromJSON: function(json) {
		var layers = json.layers;
		this.tileSize = json.tileSize;
		var layersLength = layers.length;
		var layersOffsets = [0];
		var _g = [];
		var _g1 = 0;
		while(_g1 < layers.length) {
			var layer = layers[_g1];
			++_g1;
			_g.push(layer.length - 1);
		}
		var tilesLengths = _g;
		var _g11 = [];
		var _g2 = 0;
		while(_g2 < layers.length) {
			var layer1 = layers[_g2];
			++_g2;
			_g11.push([]);
		}
		var sprites = _g11;
		var _g21 = [];
		var _g3 = 0;
		while(_g3 < layers.length) {
			var layer2 = layers[_g3];
			++_g3;
			_g21.push([]);
		}
		this.props = _g21;
		var _g31 = 0;
		while(_g31 < layers.length) {
			var layer3 = layers[_g31];
			++_g31;
			var _g5 = 0;
			var _g4 = layer3.length;
			while(_g5 < _g4) {
				var id = _g5++;
				this.fillProps(layer3[id],id);
			}
		}
		var tilesCount = this.countTiles(layers);
		this.w = Math.ceil(Math.sqrt(tilesCount));
		this.h = Math.ceil(tilesCount / this.w);
		var img = kha_Image.createRenderTarget(this.w * this.tileSize,this.h * this.tileSize);
		var g = img.get_g2();
		g.begin(true,0);
		this.pushOffset();
		var _g41 = 0;
		var _g32 = layersLength;
		while(_g41 < _g32) {
			var l = _g41++;
			var layer4 = layers[l];
			this.addProps(l,layer4.shift());
			var _g51 = 0;
			while(_g51 < layer4.length) {
				var tile = layer4[_g51];
				++_g51;
				this.addTile(g,l,tile);
			}
			var spritesN = 0;
			var spriteOffset = 0;
			var _g52 = 0;
			while(_g52 < layer4.length) {
				var tile1 = layer4[_g52];
				++_g52;
				var len = tile1.frames.length;
				if(len == 0) {
					continue;
				}
				sprites[l][tile1.id] = { firstFrame : spriteOffset, length : len, id : tile1.id};
				spriteOffset += len;
				var _g6 = 0;
				var _g7 = tile1.frames;
				while(_g6 < _g7.length) {
					var frame = _g7[_g6];
					++_g6;
					this.addTile(g,l,frame);
					++spritesN;
				}
			}
			var prev = layersOffsets[layersOffsets.length - 1];
			layersOffsets.push(prev + layer4.length + spritesN);
		}
		g.end();
		return { tileSize : this.tileSize, layersOffsets : layersOffsets, tilesLengths : tilesLengths, layersLength : layersLength, sprites : sprites, props : this.props, img : img, w : this.w, h : this.h};
	}
	,fillProps: function(tile,id) {
		if(tile.id == null) {
			tile.id = id;
		}
		if(tile.frames == null) {
			tile.frames = [];
		}
		if(id == 0) {
			return;
		}
		this.initFilePath(tile);
		this.initTileCords(tile);
		var _g = 0;
		var _g1 = tile.frames;
		while(_g < _g1.length) {
			var frame = _g1[_g];
			++_g;
			this.initFilePath(frame);
			this.initTileCords(frame);
		}
	}
	,initFilePath: function(tile) {
		if(tile.file != null) {
			var _this_r = new RegExp("(-|/)","g".split("u").join(""));
			tile.file = tile.file.replace(_this_r,"_");
			if(this.next.file != tile.file) {
				this.next.x = 0;
				this.next.y = 0;
			}
			this.next.file = tile.file;
		} else {
			tile.file = this.next.file;
			if(kha_Assets.images.get(tile.file) == null) {
				haxe_Log.trace(tile,{ fileName : "khm/tilemap/Tileset.hx", lineNumber : 211, className : "khm.tilemap._Tileset.TilesetGenerator", methodName : "initFilePath"});
			}
		}
	}
	,initTileCords: function(tile) {
		var img = kha_Assets.images.get(this.next.file);
		if(tile.x == null && tile.y == null) {
			if(tile.tx != null && tile.ty != null) {
				tile.x = tile.tx * this.tileSize;
				tile.y = tile.ty * this.tileSize;
			} else {
				tile.x = this.next.x;
				tile.y = this.next.y;
			}
		}
		var nextTile = tile.y * img.get_height() + tile.x + this.tileSize;
		var tmp = img.get_width() * this.tileSize;
		this.next.x = nextTile % tmp;
		var tmp1 = nextTile / (img.get_width() * this.tileSize) | 0;
		this.next.y = tmp1 * this.tileSize;
	}
	,addTile: function(g,l,tile) {
		var transform = tile.transformation;
		this.setTransformation(g,transform);
		this.drawTile(g,tile);
		var transformation = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		g.setTransformation(transformation);
		var _this = g.transformations[g.transformations.length - 1];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
		if(transform == null) {
			this.addProps(l,tile);
		} else {
			this.addTransformedProps(l,tile,transform);
		}
		this.pushOffset();
	}
	,setTransformation: function(g,transform) {
		if(transform == null) {
			return;
		}
		switch(transform) {
		case "flipX":
			this.setFlipX(g);
			break;
		case "flipY":
			this.setFlipY(g);
			break;
		case "rotate180":case "rotate270":case "rotate90":
			var angle;
			switch(transform) {
			case "flipX":
				angle = 3;
				break;
			case "flipY":
				angle = 4;
				break;
			case "rotate180":
				angle = 1;
				break;
			case "rotate270":
				angle = 2;
				break;
			case "rotate90":
				angle = 0;
				break;
			}
			var angle1 = 90 + angle * 90;
			this.setRotation(g,angle1);
			break;
		default:
			throw new js__$Boot_HaxeError("unknown " + transform + " transformation");
		}
	}
	,countTiles: function(layers) {
		var count = 1;
		var _g = 0;
		while(_g < layers.length) {
			var layer = layers[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < layer.length) {
				var tile = layer[_g1];
				++_g1;
				count += 1 + tile.frames.length;
			}
		}
		return count;
	}
	,drawTile: function(g,tile) {
		var img = kha_Assets.images.get(tile.file);
		g.drawSubImage(img,this.x,this.y,tile.x,tile.y,this.tileSize,this.tileSize);
	}
	,setRotation: function(g,angle) {
		var _this = g.transformations[g.transformations.length - 1];
		var angle1 = angle * Math.PI / 180;
		var centerX = this.x + this.tileSize / 2;
		var centerY = this.y + this.tileSize / 2;
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = centerX;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centerY;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle1);
		var m__10 = -Math.sin(angle1);
		var m__20 = 0;
		var m__01 = Math.sin(angle1);
		var m__11 = Math.cos(angle1);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -centerX;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centerY;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var m__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var m__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var m__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var m__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var m__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var m__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var m__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var m__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var m__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var transformation = new kha_math_FastMatrix3(_this._00 * m__002 + _this._10 * m__012 + _this._20 * m__022,_this._00 * m__102 + _this._10 * m__112 + _this._20 * m__122,_this._00 * m__202 + _this._10 * m__212 + _this._20 * m__222,_this._01 * m__002 + _this._11 * m__012 + _this._21 * m__022,_this._01 * m__102 + _this._11 * m__112 + _this._21 * m__122,_this._01 * m__202 + _this._11 * m__212 + _this._21 * m__222,_this._02 * m__002 + _this._12 * m__012 + _this._22 * m__022,_this._02 * m__102 + _this._12 * m__112 + _this._22 * m__122,_this._02 * m__202 + _this._12 * m__212 + _this._22 * m__222);
		g.setTransformation(transformation);
		var _this1 = g.transformations[g.transformations.length - 1];
		_this1._00 = transformation._00;
		_this1._10 = transformation._10;
		_this1._20 = transformation._20;
		_this1._01 = transformation._01;
		_this1._11 = transformation._11;
		_this1._21 = transformation._21;
		_this1._02 = transformation._02;
		_this1._12 = transformation._12;
		_this1._22 = transformation._22;
	}
	,setFlipX: function(g) {
		var _this = g.transformations[g.transformations.length - 1];
		var m__00 = -1;
		var m__10 = 0;
		var m__20 = this.x * 2 + this.tileSize;
		var m__01 = 0;
		var m__11 = 1;
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var transformation = new kha_math_FastMatrix3(_this._00 * m__00 + _this._10 * m__01 + _this._20 * m__02,_this._00 * m__10 + _this._10 * m__11 + _this._20 * m__12,_this._00 * m__20 + _this._10 * m__21 + _this._20 * m__22,_this._01 * m__00 + _this._11 * m__01 + _this._21 * m__02,_this._01 * m__10 + _this._11 * m__11 + _this._21 * m__12,_this._01 * m__20 + _this._11 * m__21 + _this._21 * m__22,_this._02 * m__00 + _this._12 * m__01 + _this._22 * m__02,_this._02 * m__10 + _this._12 * m__11 + _this._22 * m__12,_this._02 * m__20 + _this._12 * m__21 + _this._22 * m__22);
		g.setTransformation(transformation);
		var _this1 = g.transformations[g.transformations.length - 1];
		_this1._00 = transformation._00;
		_this1._10 = transformation._10;
		_this1._20 = transformation._20;
		_this1._01 = transformation._01;
		_this1._11 = transformation._11;
		_this1._21 = transformation._21;
		_this1._02 = transformation._02;
		_this1._12 = transformation._12;
		_this1._22 = transformation._22;
	}
	,setFlipY: function(g) {
		var _this = g.transformations[g.transformations.length - 1];
		var m__00 = 1;
		var m__10 = 0;
		var m__20 = 0;
		var m__01 = 0;
		var m__11 = -1;
		var m__21 = this.y * 2 + this.tileSize;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var transformation = new kha_math_FastMatrix3(_this._00 * m__00 + _this._10 * m__01 + _this._20 * m__02,_this._00 * m__10 + _this._10 * m__11 + _this._20 * m__12,_this._00 * m__20 + _this._10 * m__21 + _this._20 * m__22,_this._01 * m__00 + _this._11 * m__01 + _this._21 * m__02,_this._01 * m__10 + _this._11 * m__11 + _this._21 * m__12,_this._01 * m__20 + _this._11 * m__21 + _this._21 * m__22,_this._02 * m__00 + _this._12 * m__01 + _this._22 * m__02,_this._02 * m__10 + _this._12 * m__11 + _this._22 * m__12,_this._02 * m__20 + _this._12 * m__21 + _this._22 * m__22);
		g.setTransformation(transformation);
		var _this1 = g.transformations[g.transformations.length - 1];
		_this1._00 = transformation._00;
		_this1._10 = transformation._10;
		_this1._20 = transformation._20;
		_this1._01 = transformation._01;
		_this1._11 = transformation._11;
		_this1._21 = transformation._21;
		_this1._02 = transformation._02;
		_this1._12 = transformation._12;
		_this1._22 = transformation._22;
	}
	,pushOffset: function() {
		this.offset += this.tileSize;
		this.x = this.offset % (this.w * this.tileSize);
		this.y = (this.offset / (this.w * this.tileSize) | 0) * this.tileSize;
	}
	,addProps: function(l,tile) {
		khm_tilemap_Data.initProps(tile);
		this.props[l].push({ collide : tile.collide, id : tile.id, type : tile.type});
	}
	,addTransformedProps: function(l,tile,type) {
		this.addProps(l,tile);
		var tile1 = this.props[l][this.props[l].length - 1];
		khm_tilemap_Data.onTransformedProps(tile1,type);
	}
	,__class__: khm_tilemap__$Tileset_TilesetGenerator
};
var khm_utils_FileReference = function() { };
$hxClasses["khm.utils.FileReference"] = khm_utils_FileReference;
khm_utils_FileReference.__name__ = ["khm","utils","FileReference"];
khm_utils_FileReference.onDrop = function(onFileLoad,isBinary) {
	if(isBinary == null) {
		isBinary = true;
	}
	var drop = function(e) {
		var file = e.dataTransfer.files[0];
		var reader = new FileReader();
		reader.onload = function(event) {
			onFileLoad(event.target.result,file.name);
		};
		e.preventDefault();
		if(isBinary) {
			reader.readAsArrayBuffer(file);
		} else {
			reader.readAsText(file);
		}
	};
	window.ondragenter = function(e1) {
		e1.preventDefault();
	};
	window.ondragover = function(e2) {
		e2.preventDefault();
	};
	window.ondrop = drop;
};
khm_utils_FileReference.browse = function(onFileLoad,isBinary) {
	if(isBinary == null) {
		isBinary = true;
	}
	var input = window.document.createElement("input");
	input.style.visibility = "hidden";
	input.setAttribute("type","file");
	input.id = "browse";
	input.onclick = function(e) {
		e.cancelBubble = true;
		e.stopPropagation();
	};
	input.onchange = function() {
		var file = input.files[0];
		var reader = new FileReader();
		reader.onload = function(e1) {
			onFileLoad(e1.target.result,file.name);
			window.document.body.removeChild(input);
		};
		if(isBinary) {
			reader.readAsArrayBuffer(file);
		} else {
			reader.readAsText(file);
		}
	};
	window.document.body.appendChild(input);
	input.click();
};
khm_utils_FileReference.saveJSON = function(name,json) {
	var blob = new Blob([json],{ type : "application/json"});
	var url = URL.createObjectURL(blob);
	var a = window.document.createElement("a");
	a.download = name + ".json";
	a.href = url;
	a.onclick = function(e) {
		e.cancelBubble = true;
		e.stopPropagation();
	};
	window.document.body.appendChild(a);
	a.click();
	window.document.body.removeChild(a);
	URL.revokeObjectURL(url);
};
var thx_Either = $hxEnums["thx.Either"] = { __ename__ : ["thx","Either"], __constructs__ : ["Left","Right"]
	,Left: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"thx.Either",toString:$estr}; },$_.__params__ = ["value"],$_)
	,Right: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"thx.Either",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var thx_OrderedMapImpl = function(map) {
	this.map = map;
	this.arr = [];
	this.length = 0;
};
$hxClasses["thx.OrderedMapImpl"] = thx_OrderedMapImpl;
thx_OrderedMapImpl.__name__ = ["thx","OrderedMapImpl"];
thx_OrderedMapImpl.__interfaces__ = [haxe_IMap];
thx_OrderedMapImpl.prototype = {
	map: null
	,arr: null
	,length: null
	,get: function(k) {
		return this.map.get(k);
	}
	,set: function(k,v) {
		if(!this.map.exists(k)) {
			this.arr.push(k);
			this.length++;
		}
		this.map.set(k,v);
	}
	,exists: function(k) {
		return this.map.exists(k);
	}
	,remove: function(k) {
		if(!this.map.exists(k)) {
			return false;
		}
		this.map.remove(k);
		HxOverrides.remove(this.arr,k);
		this.length--;
		return true;
	}
	,iterator: function() {
		return HxOverrides.iter(this.toArray());
	}
	,toArray: function() {
		var values = [];
		var _g = 0;
		var _g1 = this.arr;
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			values.push(this.map.get(k));
		}
		return values;
	}
	,__class__: thx_OrderedMapImpl
};
var thx_ObjectOrderedMap = function() {
	thx_OrderedMapImpl.call(this,new haxe_ds_ObjectMap());
};
$hxClasses["thx.ObjectOrderedMap"] = thx_ObjectOrderedMap;
thx_ObjectOrderedMap.__name__ = ["thx","ObjectOrderedMap"];
thx_ObjectOrderedMap.__super__ = thx_OrderedMapImpl;
thx_ObjectOrderedMap.prototype = $extend(thx_OrderedMapImpl.prototype,{
	__class__: thx_ObjectOrderedMap
});
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
game_Life.DAMAGE_MAX_SKIP = 60;
khm_Screen.isTouch = false;
khm_Screen.samplesPerPixel = 1;
khm_Screen.fps = new khm__$Screen_FPS();
khm_Screen.isInited = false;
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
kha_Assets.images = new kha__$Assets_ImageList();
kha_Assets.sounds = new kha__$Assets_SoundList();
kha_Assets.blobs = new kha__$Assets_BlobList();
kha_Assets.fonts = new kha__$Assets_FontList();
kha_Assets.videos = new kha__$Assets_VideoList();
kha_CompilerDefines.canvas_id = "khanvas";
kha_Display.instance = new kha_Display();
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.painter_colored_fragData0 = "s198:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_fragData1 = "s192:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gZnJhZ21lbnRDb2xvcjsKfQoK";
kha_Shaders.painter_colored_fragData2 = "s223:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData0 = "s331:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData1 = "s374:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_vertData2 = "s311:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData1 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_image_fragData2 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData1 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData2 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_fragData0 = "s351:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChmcmFnbWVudENvbG9yLnh5eiwgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData1 = "s340:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjNCBmcmFnbWVudENvbG9yOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZnJhZ21lbnRDb2xvci54eXosIHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoK";
kha_Shaders.painter_text_fragData2 = "s367:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KGZyYWdtZW50Q29sb3IueHl6LCB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_vertData0 = "s436:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData1 = "s500:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGZyYWdtZW50Q29sb3I7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData2 = "s402:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBmcmFnbWVudENvbG9yOwppbiB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_video_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData1 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_video_fragData2 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData1 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData2 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.ios = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.firefox = false;
kha_SystemImpl.ie = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.leftMouseCtrlDown = false;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.iosSoundEnabled = false;
kha_SystemImpl.soundEnabled = false;
kha_SystemImpl.iosTouchs = [];
kha_Window.windows = [];
kha_audio2_ogg_vorbis_VorbisDecodeState.INVALID_BITS = -1;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_graphics2_Graphics.fontGlyphs = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 32;
		while(_g1 < 256) {
			var i = _g1++;
			_g.push(i);
		}
	}
	$r = _g;
	return $r;
}(this));
kha_graphics4_CubeMap.GL_RGBA16F = 34842;
kha_graphics4_CubeMap.GL_RGBA32F = 34836;
kha_graphics4_CubeMap.GL_R16F = 33325;
kha_graphics4_CubeMap.GL_R32F = 33326;
kha_graphics4_CubeMap.GL_DEPTH_COMPONENT24 = 33190;
kha_graphics4_CubeMap.GL_DEPTH24_STENCIL8 = 35056;
kha_graphics4_CubeMap.GL_DEPTH32F_STENCIL8 = 36013;
kha_input_Gamepad.__meta__ = { statics : { sendConnectEvent : { input : null}, sendDisconnectEvent : { input : null}}, fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Gamepad.connectListeners = [];
kha_input_Gamepad.disconnectListeners = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_input_Sensor.accelerometer = new kha_input_Sensor();
kha_input_Sensor.gyroscope = new kha_input_Sensor();
kha_internal_BytesBlob.bufferSize = 2000;
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_AEAudioChannel.todo = [];
kha_js_Sound.loading = [];
kha_network_ControllerBuilder.nextId = 0;
khm_Settings.defaults = { version : 1};
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
